//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="AllegroWebApiBinding", Namespace="urn:AllegroWebApi")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ShipmentDataStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FinishFailureStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FinishItemsStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(DealsStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingReasonStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingInfoStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SiteJournalFeedbacks))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingStatsStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingAveragePerMonthStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingReasonSumStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingDetailStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserPaymentRefundsStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserIncomingPaymentRefundsStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(PostBuyFormItemStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(PostBuyFormDataStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserPayoutStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserPaymentStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(PaymentDetailsStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserIncomingPaymentStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(RefundReasonStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(RefundFormStatusResultStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(RefundFormStatusStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SendRefundFormResultStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SendRefundFormStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemRemoveWatchStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SendReminderMessageResultStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SendReminderMessageStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(RefundFormDataStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CancelRefundWarningResultStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CancelRefundWarningStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CancelRefundFormResultStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CancelRefundDataStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserPostBuyDataStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemPostBuyDataStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserBlackListAddResultStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserBlackListStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SpecialAuctionStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SofDataStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemImagesStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemGetImage))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FavouritesCategoriesStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FavouritesSellersStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(StateInfoStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ServiceInfoStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ServiceInfoCatStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BlackListResStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BlackListStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(WaitFeedbackStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FeedbackResultStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FeedbackManyStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TemplateInfoType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CountryInfoType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemTransStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemBilling))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MyFeedbackListStruct2))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(MyAccountStruct2))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SiteJournal))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FeedbackList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BidListStruct2))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingEstimationStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellRatingAverageStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchResponseType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(InfoCatList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SysStatusType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(UserItemList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SiteInfoType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SiteFlagInfoType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SellFormType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(BillingDataType))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(PostageStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(AttribStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemImageList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemCatList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemInfoStruct))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(StructSellFailed))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(StructSellAgain))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FieldsValue))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(CatInfoType))]
public partial class AllegroWebApiService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback doGetCatsDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback doLoginEncOperationCompleted;
    
    private System.Threading.SendOrPostCallback doNewAuctionOperationCompleted;
    
    private System.Threading.SendOrPostCallback doNewAuctionExtOperationCompleted;
    
    private System.Threading.SendOrPostCallback doSellSomeAgainOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCheckNewAuctionOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCheckNewAuctionExtOperationCompleted;
    
    private System.Threading.SendOrPostCallback doAddDescToItemsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCheckItemIdByFutureItemIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetCatsDataLimitOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetItemsInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetPaymentDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormFieldsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormFieldsExtOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSitesFlagInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSitesInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSystemTimeOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetUserIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetUserItemsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetUserLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback doQueryAllSysStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormFieldsExtLimitOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormFieldsLimitOperationCompleted;
    
    private System.Threading.SendOrPostCallback doQuerySysStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback doShowCatOperationCompleted;
    
    private System.Threading.SendOrPostCallback doShowItemInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doShowUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback doVerifyItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doAddWatchListOperationCompleted;
    
    private System.Threading.SendOrPostCallback doFeedbackOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetBidItem2OperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetFeedbackOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSiteJournalOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSiteJournalInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyAccount2OperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyAccountItemsCountOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyBillingOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyContactOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyFeedback2OperationCompleted;
    
    private System.Threading.SendOrPostCallback doSearchOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetAdminUserLicenceDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetUserLicenceDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyBillingItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doSetUserLicenceDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback doBidItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCancelBidItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doChangePriceItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doFinishItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetItemTransactionOperationCompleted;
    
    private System.Threading.SendOrPostCallback doRequestCancelBidOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetCatsDataCountOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMyFeedback2LimitOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetCountriesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetServiceTemplatesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellFormAttribsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doFeedbackManyOperationCompleted;
    
    private System.Threading.SendOrPostCallback doShowItemInfoExtOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetWaitingFeedbacksCountOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetWaitingFeedbacksOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetBlackListUsersOperationCompleted;
    
    private System.Threading.SendOrPostCallback doRemoveFromBlackListOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetServiceInfoCategoriesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetServiceInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetStatesInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetShopCatsDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCheckExternalKeyOperationCompleted;
    
    private System.Threading.SendOrPostCallback doSellSomeAgainInShopOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSuperSellerStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetMyDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doInternalIStoreChangeOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetFavouriteSellersOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetFavouriteCategoriesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetItemsImagesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetShipmentOptionsFormDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSpecialItemsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doAddToBlackListOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetPostBuyDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCancelRefundFormsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSessionHandleForWidgetOperationCompleted;
    
    private System.Threading.SendOrPostCallback doCancelRefundWarningsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doInternalSendMessageOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetRefundTransactionsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doSendReminderMessagesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doRemoveFromWatchListOperationCompleted;
    
    private System.Threading.SendOrPostCallback doSendRefundFormsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetRefundFormsStatusesOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetRefundReasonsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetMyIncomingPaymentsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetMyPaymentsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetMyPayoutsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doChangeQuantityItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback doShowUserPageOperationCompleted;
    
    private System.Threading.SendOrPostCallback doSendEmailToUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetTransactionsIDsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetPostBuyFormsDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetMyIncomingPaymentsRefundsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetMyPaymentsRefundsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetMySellRatingOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSiteJournalFeedbacksOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSiteJournalFeedbacksInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetSellRatingReasonsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetDealsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doMakeDiscountOperationCompleted;
    
    private System.Threading.SendOrPostCallback doFinishItemsOperationCompleted;
    
    private System.Threading.SendOrPostCallback doGetShipmentDataOperationCompleted;
    
    /// <remarks/>
    public AllegroWebApiService() {
        this.Url = "http://webapi.allegro.pl/uploader.php";
    }
    
    /// <remarks/>
    public event doGetCatsDataCompletedEventHandler doGetCatsDataCompleted;
    
    /// <remarks/>
    public event doLoginCompletedEventHandler doLoginCompleted;
    
    /// <remarks/>
    public event doLoginEncCompletedEventHandler doLoginEncCompleted;
    
    /// <remarks/>
    public event doNewAuctionCompletedEventHandler doNewAuctionCompleted;
    
    /// <remarks/>
    public event doNewAuctionExtCompletedEventHandler doNewAuctionExtCompleted;
    
    /// <remarks/>
    public event doSellSomeAgainCompletedEventHandler doSellSomeAgainCompleted;
    
    /// <remarks/>
    public event doCheckNewAuctionCompletedEventHandler doCheckNewAuctionCompleted;
    
    /// <remarks/>
    public event doCheckNewAuctionExtCompletedEventHandler doCheckNewAuctionExtCompleted;
    
    /// <remarks/>
    public event doAddDescToItemsCompletedEventHandler doAddDescToItemsCompleted;
    
    /// <remarks/>
    public event doCheckItemIdByFutureItemIdCompletedEventHandler doCheckItemIdByFutureItemIdCompleted;
    
    /// <remarks/>
    public event doGetCatsDataLimitCompletedEventHandler doGetCatsDataLimitCompleted;
    
    /// <remarks/>
    public event doGetItemsInfoCompletedEventHandler doGetItemsInfoCompleted;
    
    /// <remarks/>
    public event doGetPaymentDataCompletedEventHandler doGetPaymentDataCompleted;
    
    /// <remarks/>
    public event doGetSellFormFieldsCompletedEventHandler doGetSellFormFieldsCompleted;
    
    /// <remarks/>
    public event doGetSellFormFieldsExtCompletedEventHandler doGetSellFormFieldsExtCompleted;
    
    /// <remarks/>
    public event doGetSitesFlagInfoCompletedEventHandler doGetSitesFlagInfoCompleted;
    
    /// <remarks/>
    public event doGetSitesInfoCompletedEventHandler doGetSitesInfoCompleted;
    
    /// <remarks/>
    public event doGetSystemTimeCompletedEventHandler doGetSystemTimeCompleted;
    
    /// <remarks/>
    public event doGetUserIDCompletedEventHandler doGetUserIDCompleted;
    
    /// <remarks/>
    public event doGetUserItemsCompletedEventHandler doGetUserItemsCompleted;
    
    /// <remarks/>
    public event doGetUserLoginCompletedEventHandler doGetUserLoginCompleted;
    
    /// <remarks/>
    public event doQueryAllSysStatusCompletedEventHandler doQueryAllSysStatusCompleted;
    
    /// <remarks/>
    public event doGetSellFormFieldsExtLimitCompletedEventHandler doGetSellFormFieldsExtLimitCompleted;
    
    /// <remarks/>
    public event doGetSellFormFieldsLimitCompletedEventHandler doGetSellFormFieldsLimitCompleted;
    
    /// <remarks/>
    public event doQuerySysStatusCompletedEventHandler doQuerySysStatusCompleted;
    
    /// <remarks/>
    public event doShowCatCompletedEventHandler doShowCatCompleted;
    
    /// <remarks/>
    public event doShowItemInfoCompletedEventHandler doShowItemInfoCompleted;
    
    /// <remarks/>
    public event doShowUserCompletedEventHandler doShowUserCompleted;
    
    /// <remarks/>
    public event doVerifyItemCompletedEventHandler doVerifyItemCompleted;
    
    /// <remarks/>
    public event doAddWatchListCompletedEventHandler doAddWatchListCompleted;
    
    /// <remarks/>
    public event doFeedbackCompletedEventHandler doFeedbackCompleted;
    
    /// <remarks/>
    public event doGetBidItem2CompletedEventHandler doGetBidItem2Completed;
    
    /// <remarks/>
    public event doGetFeedbackCompletedEventHandler doGetFeedbackCompleted;
    
    /// <remarks/>
    public event doGetSiteJournalCompletedEventHandler doGetSiteJournalCompleted;
    
    /// <remarks/>
    public event doGetSiteJournalInfoCompletedEventHandler doGetSiteJournalInfoCompleted;
    
    /// <remarks/>
    public event doMyAccount2CompletedEventHandler doMyAccount2Completed;
    
    /// <remarks/>
    public event doMyAccountItemsCountCompletedEventHandler doMyAccountItemsCountCompleted;
    
    /// <remarks/>
    public event doMyBillingCompletedEventHandler doMyBillingCompleted;
    
    /// <remarks/>
    public event doMyContactCompletedEventHandler doMyContactCompleted;
    
    /// <remarks/>
    public event doMyFeedback2CompletedEventHandler doMyFeedback2Completed;
    
    /// <remarks/>
    public event doSearchCompletedEventHandler doSearchCompleted;
    
    /// <remarks/>
    public event doGetAdminUserLicenceDateCompletedEventHandler doGetAdminUserLicenceDateCompleted;
    
    /// <remarks/>
    public event doGetUserLicenceDateCompletedEventHandler doGetUserLicenceDateCompleted;
    
    /// <remarks/>
    public event doMyBillingItemCompletedEventHandler doMyBillingItemCompleted;
    
    /// <remarks/>
    public event doSetUserLicenceDateCompletedEventHandler doSetUserLicenceDateCompleted;
    
    /// <remarks/>
    public event doBidItemCompletedEventHandler doBidItemCompleted;
    
    /// <remarks/>
    public event doCancelBidItemCompletedEventHandler doCancelBidItemCompleted;
    
    /// <remarks/>
    public event doChangePriceItemCompletedEventHandler doChangePriceItemCompleted;
    
    /// <remarks/>
    public event doFinishItemCompletedEventHandler doFinishItemCompleted;
    
    /// <remarks/>
    public event doGetItemTransactionCompletedEventHandler doGetItemTransactionCompleted;
    
    /// <remarks/>
    public event doRequestCancelBidCompletedEventHandler doRequestCancelBidCompleted;
    
    /// <remarks/>
    public event doGetCatsDataCountCompletedEventHandler doGetCatsDataCountCompleted;
    
    /// <remarks/>
    public event doMyFeedback2LimitCompletedEventHandler doMyFeedback2LimitCompleted;
    
    /// <remarks/>
    public event doGetCountriesCompletedEventHandler doGetCountriesCompleted;
    
    /// <remarks/>
    public event doGetServiceTemplatesCompletedEventHandler doGetServiceTemplatesCompleted;
    
    /// <remarks/>
    public event doGetSellFormAttribsCompletedEventHandler doGetSellFormAttribsCompleted;
    
    /// <remarks/>
    public event doFeedbackManyCompletedEventHandler doFeedbackManyCompleted;
    
    /// <remarks/>
    public event doShowItemInfoExtCompletedEventHandler doShowItemInfoExtCompleted;
    
    /// <remarks/>
    public event doGetWaitingFeedbacksCountCompletedEventHandler doGetWaitingFeedbacksCountCompleted;
    
    /// <remarks/>
    public event doGetWaitingFeedbacksCompletedEventHandler doGetWaitingFeedbacksCompleted;
    
    /// <remarks/>
    public event doGetBlackListUsersCompletedEventHandler doGetBlackListUsersCompleted;
    
    /// <remarks/>
    public event doRemoveFromBlackListCompletedEventHandler doRemoveFromBlackListCompleted;
    
    /// <remarks/>
    public event doGetServiceInfoCategoriesCompletedEventHandler doGetServiceInfoCategoriesCompleted;
    
    /// <remarks/>
    public event doGetServiceInfoCompletedEventHandler doGetServiceInfoCompleted;
    
    /// <remarks/>
    public event doGetStatesInfoCompletedEventHandler doGetStatesInfoCompleted;
    
    /// <remarks/>
    public event doGetShopCatsDataCompletedEventHandler doGetShopCatsDataCompleted;
    
    /// <remarks/>
    public event doCheckExternalKeyCompletedEventHandler doCheckExternalKeyCompleted;
    
    /// <remarks/>
    public event doSellSomeAgainInShopCompletedEventHandler doSellSomeAgainInShopCompleted;
    
    /// <remarks/>
    public event doGetSuperSellerStatusCompletedEventHandler doGetSuperSellerStatusCompleted;
    
    /// <remarks/>
    public event doGetMyDataCompletedEventHandler doGetMyDataCompleted;
    
    /// <remarks/>
    public event doInternalIStoreChangeCompletedEventHandler doInternalIStoreChangeCompleted;
    
    /// <remarks/>
    public event doGetFavouriteSellersCompletedEventHandler doGetFavouriteSellersCompleted;
    
    /// <remarks/>
    public event doGetFavouriteCategoriesCompletedEventHandler doGetFavouriteCategoriesCompleted;
    
    /// <remarks/>
    public event doGetItemsImagesCompletedEventHandler doGetItemsImagesCompleted;
    
    /// <remarks/>
    public event doGetShipmentOptionsFormDataCompletedEventHandler doGetShipmentOptionsFormDataCompleted;
    
    /// <remarks/>
    public event doGetSpecialItemsCompletedEventHandler doGetSpecialItemsCompleted;
    
    /// <remarks/>
    public event doAddToBlackListCompletedEventHandler doAddToBlackListCompleted;
    
    /// <remarks/>
    public event doGetPostBuyDataCompletedEventHandler doGetPostBuyDataCompleted;
    
    /// <remarks/>
    public event doCancelRefundFormsCompletedEventHandler doCancelRefundFormsCompleted;
    
    /// <remarks/>
    public event doGetSessionHandleForWidgetCompletedEventHandler doGetSessionHandleForWidgetCompleted;
    
    /// <remarks/>
    public event doCancelRefundWarningsCompletedEventHandler doCancelRefundWarningsCompleted;
    
    /// <remarks/>
    public event doInternalSendMessageCompletedEventHandler doInternalSendMessageCompleted;
    
    /// <remarks/>
    public event doGetRefundTransactionsCompletedEventHandler doGetRefundTransactionsCompleted;
    
    /// <remarks/>
    public event doSendReminderMessagesCompletedEventHandler doSendReminderMessagesCompleted;
    
    /// <remarks/>
    public event doRemoveFromWatchListCompletedEventHandler doRemoveFromWatchListCompleted;
    
    /// <remarks/>
    public event doSendRefundFormsCompletedEventHandler doSendRefundFormsCompleted;
    
    /// <remarks/>
    public event doGetRefundFormsStatusesCompletedEventHandler doGetRefundFormsStatusesCompleted;
    
    /// <remarks/>
    public event doGetRefundReasonsCompletedEventHandler doGetRefundReasonsCompleted;
    
    /// <remarks/>
    public event doGetMyIncomingPaymentsCompletedEventHandler doGetMyIncomingPaymentsCompleted;
    
    /// <remarks/>
    public event doGetMyPaymentsCompletedEventHandler doGetMyPaymentsCompleted;
    
    /// <remarks/>
    public event doGetMyPayoutsCompletedEventHandler doGetMyPayoutsCompleted;
    
    /// <remarks/>
    public event doChangeQuantityItemCompletedEventHandler doChangeQuantityItemCompleted;
    
    /// <remarks/>
    public event doShowUserPageCompletedEventHandler doShowUserPageCompleted;
    
    /// <remarks/>
    public event doSendEmailToUserCompletedEventHandler doSendEmailToUserCompleted;
    
    /// <remarks/>
    public event doGetTransactionsIDsCompletedEventHandler doGetTransactionsIDsCompleted;
    
    /// <remarks/>
    public event doGetPostBuyFormsDataCompletedEventHandler doGetPostBuyFormsDataCompleted;
    
    /// <remarks/>
    public event doGetMyIncomingPaymentsRefundsCompletedEventHandler doGetMyIncomingPaymentsRefundsCompleted;
    
    /// <remarks/>
    public event doGetMyPaymentsRefundsCompletedEventHandler doGetMyPaymentsRefundsCompleted;
    
    /// <remarks/>
    public event doGetMySellRatingCompletedEventHandler doGetMySellRatingCompleted;
    
    /// <remarks/>
    public event doGetSiteJournalFeedbacksCompletedEventHandler doGetSiteJournalFeedbacksCompleted;
    
    /// <remarks/>
    public event doGetSiteJournalFeedbacksInfoCompletedEventHandler doGetSiteJournalFeedbacksInfoCompleted;
    
    /// <remarks/>
    public event doGetSellRatingReasonsCompletedEventHandler doGetSellRatingReasonsCompleted;
    
    /// <remarks/>
    public event doGetDealsCompletedEventHandler doGetDealsCompleted;
    
    /// <remarks/>
    public event doMakeDiscountCompletedEventHandler doMakeDiscountCompleted;
    
    /// <remarks/>
    public event doFinishItemsCompletedEventHandler doFinishItemsCompleted;
    
    /// <remarks/>
    public event doGetShipmentDataCompletedEventHandler doGetShipmentDataCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#catsdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cats-list")]
    public CatInfoType[] doGetCatsData([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetCatsData", new object[] {
                    countryid,
                    localversion,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetCatsData(int countryid, long localversion, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetCatsData", new object[] {
                    countryid,
                    localversion,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public CatInfoType[] EnddoGetCatsData(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetCatsDataAsync(int countryid, long localversion, string webapikey) {
        this.doGetCatsDataAsync(countryid, localversion, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetCatsDataAsync(int countryid, long localversion, string webapikey, object userState) {
        if ((this.doGetCatsDataOperationCompleted == null)) {
            this.doGetCatsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCatsDataOperationCompleted);
        }
        this.InvokeAsync("doGetCatsData", new object[] {
                    countryid,
                    localversion,
                    webapikey}, this.doGetCatsDataOperationCompleted, userState);
    }
    
    private void OndoGetCatsDataOperationCompleted(object arg) {
        if ((this.doGetCatsDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetCatsDataCompleted(this, new doGetCatsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#login", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("session-handle-part")]
    public string doLogin([System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-password")] string userpassword, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("user-id")] out long userid, [System.Xml.Serialization.SoapElementAttribute("server-time")] out long servertime) {
        object[] results = this.Invoke("doLogin", new object[] {
                    userlogin,
                    userpassword,
                    countrycode,
                    webapikey,
                    localversion});
        userid = ((long)(results[1]));
        servertime = ((long)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoLogin(string userlogin, string userpassword, int countrycode, string webapikey, long localversion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doLogin", new object[] {
                    userlogin,
                    userpassword,
                    countrycode,
                    webapikey,
                    localversion}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoLogin(System.IAsyncResult asyncResult, out long userid, out long servertime) {
        object[] results = this.EndInvoke(asyncResult);
        userid = ((long)(results[1]));
        servertime = ((long)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doLoginAsync(string userlogin, string userpassword, int countrycode, string webapikey, long localversion) {
        this.doLoginAsync(userlogin, userpassword, countrycode, webapikey, localversion, null);
    }
    
    /// <remarks/>
    public void doLoginAsync(string userlogin, string userpassword, int countrycode, string webapikey, long localversion, object userState) {
        if ((this.doLoginOperationCompleted == null)) {
            this.doLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoLoginOperationCompleted);
        }
        this.InvokeAsync("doLogin", new object[] {
                    userlogin,
                    userpassword,
                    countrycode,
                    webapikey,
                    localversion}, this.doLoginOperationCompleted, userState);
    }
    
    private void OndoLoginOperationCompleted(object arg) {
        if ((this.doLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doLoginCompleted(this, new doLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#loginenc", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("session-handle-part")]
    public string doLoginEnc([System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-hash-password")] string userhashpassword, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("user-id")] out long userid, [System.Xml.Serialization.SoapElementAttribute("server-time")] out long servertime) {
        object[] results = this.Invoke("doLoginEnc", new object[] {
                    userlogin,
                    userhashpassword,
                    countrycode,
                    webapikey,
                    localversion});
        userid = ((long)(results[1]));
        servertime = ((long)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoLoginEnc(string userlogin, string userhashpassword, int countrycode, string webapikey, long localversion, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doLoginEnc", new object[] {
                    userlogin,
                    userhashpassword,
                    countrycode,
                    webapikey,
                    localversion}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoLoginEnc(System.IAsyncResult asyncResult, out long userid, out long servertime) {
        object[] results = this.EndInvoke(asyncResult);
        userid = ((long)(results[1]));
        servertime = ((long)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doLoginEncAsync(string userlogin, string userhashpassword, int countrycode, string webapikey, long localversion) {
        this.doLoginEncAsync(userlogin, userhashpassword, countrycode, webapikey, localversion, null);
    }
    
    /// <remarks/>
    public void doLoginEncAsync(string userlogin, string userhashpassword, int countrycode, string webapikey, long localversion, object userState) {
        if ((this.doLoginEncOperationCompleted == null)) {
            this.doLoginEncOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoLoginEncOperationCompleted);
        }
        this.InvokeAsync("doLoginEnc", new object[] {
                    userlogin,
                    userhashpassword,
                    countrycode,
                    webapikey,
                    localversion}, this.doLoginEncOperationCompleted, userState);
    }
    
    private void OndoLoginEncOperationCompleted(object arg) {
        if ((this.doLoginEncCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doLoginEncCompleted(this, new doLoginEncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#newauction", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long doNewAuction([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, int @private, [System.Xml.Serialization.SoapElementAttribute("local-id")] int localid, [System.Xml.Serialization.SoapElementAttribute("item-info")] out string iteminfo) {
        object[] results = this.Invoke("doNewAuction", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid});
        iteminfo = ((string)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoNewAuction(string sessionhandle, FieldsValue[] fields, int @private, int localid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doNewAuction", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoNewAuction(System.IAsyncResult asyncResult, out string iteminfo) {
        object[] results = this.EndInvoke(asyncResult);
        iteminfo = ((string)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doNewAuctionAsync(string sessionhandle, FieldsValue[] fields, int @private, int localid) {
        this.doNewAuctionAsync(sessionhandle, fields, @private, localid, null);
    }
    
    /// <remarks/>
    public void doNewAuctionAsync(string sessionhandle, FieldsValue[] fields, int @private, int localid, object userState) {
        if ((this.doNewAuctionOperationCompleted == null)) {
            this.doNewAuctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoNewAuctionOperationCompleted);
        }
        this.InvokeAsync("doNewAuction", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid}, this.doNewAuctionOperationCompleted, userState);
    }
    
    private void OndoNewAuctionOperationCompleted(object arg) {
        if ((this.doNewAuctionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doNewAuctionCompleted(this, new doNewAuctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#newauctionext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long doNewAuctionExt([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, int @private, [System.Xml.Serialization.SoapElementAttribute("local-id")] int localid, [System.Xml.Serialization.SoapElementAttribute("item-info")] out string iteminfo) {
        object[] results = this.Invoke("doNewAuctionExt", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid});
        iteminfo = ((string)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoNewAuctionExt(string sessionhandle, FieldsValue[] fields, int @private, int localid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doNewAuctionExt", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoNewAuctionExt(System.IAsyncResult asyncResult, out string iteminfo) {
        object[] results = this.EndInvoke(asyncResult);
        iteminfo = ((string)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, int @private, int localid) {
        this.doNewAuctionExtAsync(sessionhandle, fields, @private, localid, null);
    }
    
    /// <remarks/>
    public void doNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, int @private, int localid, object userState) {
        if ((this.doNewAuctionExtOperationCompleted == null)) {
            this.doNewAuctionExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoNewAuctionExtOperationCompleted);
        }
        this.InvokeAsync("doNewAuctionExt", new object[] {
                    sessionhandle,
                    fields,
                    @private,
                    localid}, this.doNewAuctionExtOperationCompleted, userState);
    }
    
    private void OndoNewAuctionExtOperationCompleted(object arg) {
        if ((this.doNewAuctionExtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doNewAuctionExtCompleted(this, new doNewAuctionExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellsomeagain", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("items-sell-again")]
    public StructSellAgain[] doSellSomeAgain([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("sell-items-array")] long[] sellitemsarray, [System.Xml.Serialization.SoapElementAttribute("sell-starting-time")] long sellstartingtime, [System.Xml.Serialization.SoapElementAttribute("sell-auction-duration")] int sellauctionduration, [System.Xml.Serialization.SoapElementAttribute("sell-options")] int selloptions, [System.Xml.Serialization.SoapElementAttribute("items-sell-failed")] out StructSellFailed[] itemssellfailed, [System.Xml.Serialization.SoapElementAttribute("items-sell-not-found")] out long[] itemssellnotfound) {
        object[] results = this.Invoke("doSellSomeAgain", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellauctionduration,
                    selloptions});
        itemssellfailed = ((StructSellFailed[])(results[1]));
        itemssellnotfound = ((long[])(results[2]));
        return ((StructSellAgain[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSellSomeAgain(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellauctionduration, int selloptions, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSellSomeAgain", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellauctionduration,
                    selloptions}, callback, asyncState);
    }
    
    /// <remarks/>
    public StructSellAgain[] EnddoSellSomeAgain(System.IAsyncResult asyncResult, out StructSellFailed[] itemssellfailed, out long[] itemssellnotfound) {
        object[] results = this.EndInvoke(asyncResult);
        itemssellfailed = ((StructSellFailed[])(results[1]));
        itemssellnotfound = ((long[])(results[2]));
        return ((StructSellAgain[])(results[0]));
    }
    
    /// <remarks/>
    public void doSellSomeAgainAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellauctionduration, int selloptions) {
        this.doSellSomeAgainAsync(sessionhandle, sellitemsarray, sellstartingtime, sellauctionduration, selloptions, null);
    }
    
    /// <remarks/>
    public void doSellSomeAgainAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellauctionduration, int selloptions, object userState) {
        if ((this.doSellSomeAgainOperationCompleted == null)) {
            this.doSellSomeAgainOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSellSomeAgainOperationCompleted);
        }
        this.InvokeAsync("doSellSomeAgain", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellauctionduration,
                    selloptions}, this.doSellSomeAgainOperationCompleted, userState);
    }
    
    private void OndoSellSomeAgainOperationCompleted(object arg) {
        if ((this.doSellSomeAgainCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSellSomeAgainCompleted(this, new doSellSomeAgainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#checkauction", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-price")]
    public string doCheckNewAuction([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, [System.Xml.Serialization.SoapElementAttribute("item-price-desc")] out string itempricedesc) {
        object[] results = this.Invoke("doCheckNewAuction", new object[] {
                    sessionhandle,
                    fields});
        itempricedesc = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCheckNewAuction(string sessionhandle, FieldsValue[] fields, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCheckNewAuction", new object[] {
                    sessionhandle,
                    fields}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoCheckNewAuction(System.IAsyncResult asyncResult, out string itempricedesc) {
        object[] results = this.EndInvoke(asyncResult);
        itempricedesc = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doCheckNewAuctionAsync(string sessionhandle, FieldsValue[] fields) {
        this.doCheckNewAuctionAsync(sessionhandle, fields, null);
    }
    
    /// <remarks/>
    public void doCheckNewAuctionAsync(string sessionhandle, FieldsValue[] fields, object userState) {
        if ((this.doCheckNewAuctionOperationCompleted == null)) {
            this.doCheckNewAuctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckNewAuctionOperationCompleted);
        }
        this.InvokeAsync("doCheckNewAuction", new object[] {
                    sessionhandle,
                    fields}, this.doCheckNewAuctionOperationCompleted, userState);
    }
    
    private void OndoCheckNewAuctionOperationCompleted(object arg) {
        if ((this.doCheckNewAuctionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCheckNewAuctionCompleted(this, new doCheckNewAuctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#checkauctionext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-price")]
    public string doCheckNewAuctionExt([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, FieldsValue[] fields, [System.Xml.Serialization.SoapElementAttribute("item-price-desc")] out string itempricedesc) {
        object[] results = this.Invoke("doCheckNewAuctionExt", new object[] {
                    sessionhandle,
                    fields});
        itempricedesc = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCheckNewAuctionExt(string sessionhandle, FieldsValue[] fields, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCheckNewAuctionExt", new object[] {
                    sessionhandle,
                    fields}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoCheckNewAuctionExt(System.IAsyncResult asyncResult, out string itempricedesc) {
        object[] results = this.EndInvoke(asyncResult);
        itempricedesc = ((string)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doCheckNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields) {
        this.doCheckNewAuctionExtAsync(sessionhandle, fields, null);
    }
    
    /// <remarks/>
    public void doCheckNewAuctionExtAsync(string sessionhandle, FieldsValue[] fields, object userState) {
        if ((this.doCheckNewAuctionExtOperationCompleted == null)) {
            this.doCheckNewAuctionExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckNewAuctionExtOperationCompleted);
        }
        this.InvokeAsync("doCheckNewAuctionExt", new object[] {
                    sessionhandle,
                    fields}, this.doCheckNewAuctionExtOperationCompleted, userState);
    }
    
    private void OndoCheckNewAuctionExtOperationCompleted(object arg) {
        if ((this.doCheckNewAuctionExtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCheckNewAuctionExtCompleted(this, new doCheckNewAuctionExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#adddesc", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("array-items-add-id")]
    public long[] doAddDescToItems([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("it-description")] string itdescription, [System.Xml.Serialization.SoapElementAttribute("array-items-desc-to-long")] out long[] arrayitemsdesctolong, [System.Xml.Serialization.SoapElementAttribute("array-items-not-found")] out long[] arrayitemsnotfound) {
        object[] results = this.Invoke("doAddDescToItems", new object[] {
                    sessionhandle,
                    itemsidarray,
                    itdescription});
        arrayitemsdesctolong = ((long[])(results[1]));
        arrayitemsnotfound = ((long[])(results[2]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoAddDescToItems(string sessionhandle, long[] itemsidarray, string itdescription, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doAddDescToItems", new object[] {
                    sessionhandle,
                    itemsidarray,
                    itdescription}, callback, asyncState);
    }
    
    /// <remarks/>
    public long[] EnddoAddDescToItems(System.IAsyncResult asyncResult, out long[] arrayitemsdesctolong, out long[] arrayitemsnotfound) {
        object[] results = this.EndInvoke(asyncResult);
        arrayitemsdesctolong = ((long[])(results[1]));
        arrayitemsnotfound = ((long[])(results[2]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public void doAddDescToItemsAsync(string sessionhandle, long[] itemsidarray, string itdescription) {
        this.doAddDescToItemsAsync(sessionhandle, itemsidarray, itdescription, null);
    }
    
    /// <remarks/>
    public void doAddDescToItemsAsync(string sessionhandle, long[] itemsidarray, string itdescription, object userState) {
        if ((this.doAddDescToItemsOperationCompleted == null)) {
            this.doAddDescToItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddDescToItemsOperationCompleted);
        }
        this.InvokeAsync("doAddDescToItems", new object[] {
                    sessionhandle,
                    itemsidarray,
                    itdescription}, this.doAddDescToItemsOperationCompleted, userState);
    }
    
    private void OndoAddDescToItemsOperationCompleted(object arg) {
        if ((this.doAddDescToItemsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doAddDescToItemsCompleted(this, new doAddDescToItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#checkitemidbyfuture", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long doCheckItemIdByFutureItemId([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("future-item-id")] long futureitemid) {
        object[] results = this.Invoke("doCheckItemIdByFutureItemId", new object[] {
                    webapikey,
                    countryid,
                    futureitemid});
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCheckItemIdByFutureItemId(string webapikey, int countryid, long futureitemid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCheckItemIdByFutureItemId", new object[] {
                    webapikey,
                    countryid,
                    futureitemid}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoCheckItemIdByFutureItemId(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doCheckItemIdByFutureItemIdAsync(string webapikey, int countryid, long futureitemid) {
        this.doCheckItemIdByFutureItemIdAsync(webapikey, countryid, futureitemid, null);
    }
    
    /// <remarks/>
    public void doCheckItemIdByFutureItemIdAsync(string webapikey, int countryid, long futureitemid, object userState) {
        if ((this.doCheckItemIdByFutureItemIdOperationCompleted == null)) {
            this.doCheckItemIdByFutureItemIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckItemIdByFutureItemIdOperationCompleted);
        }
        this.InvokeAsync("doCheckItemIdByFutureItemId", new object[] {
                    webapikey,
                    countryid,
                    futureitemid}, this.doCheckItemIdByFutureItemIdOperationCompleted, userState);
    }
    
    private void OndoCheckItemIdByFutureItemIdOperationCompleted(object arg) {
        if ((this.doCheckItemIdByFutureItemIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCheckItemIdByFutureItemIdCompleted(this, new doCheckItemIdByFutureItemIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#catsdatalimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cats-list")]
    public CatInfoType[] doGetCatsDataLimit([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, int offset, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetCatsDataLimit", new object[] {
                    countryid,
                    localversion,
                    webapikey,
                    offset,
                    packageelement});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetCatsDataLimit(int countryid, long localversion, string webapikey, int offset, int packageelement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetCatsDataLimit", new object[] {
                    countryid,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, callback, asyncState);
    }
    
    /// <remarks/>
    public CatInfoType[] EnddoGetCatsDataLimit(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetCatsDataLimitAsync(int countryid, long localversion, string webapikey, int offset, int packageelement) {
        this.doGetCatsDataLimitAsync(countryid, localversion, webapikey, offset, packageelement, null);
    }
    
    /// <remarks/>
    public void doGetCatsDataLimitAsync(int countryid, long localversion, string webapikey, int offset, int packageelement, object userState) {
        if ((this.doGetCatsDataLimitOperationCompleted == null)) {
            this.doGetCatsDataLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCatsDataLimitOperationCompleted);
        }
        this.InvokeAsync("doGetCatsDataLimit", new object[] {
                    countryid,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, this.doGetCatsDataLimitOperationCompleted, userState);
    }
    
    private void OndoGetCatsDataLimitOperationCompleted(object arg) {
        if ((this.doGetCatsDataLimitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetCatsDataLimitCompleted(this, new doGetCatsDataLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getitemsinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("array-item-list-info")]
    public ItemInfoStruct[] doGetItemsInfo([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("get-desc")] int getdesc, [System.Xml.Serialization.SoapElementAttribute("get-image-url")] int getimageurl, [System.Xml.Serialization.SoapElementAttribute("get-attribs")] int getattribs, [System.Xml.Serialization.SoapElementAttribute("get-postage-options")] int getpostageoptions, [System.Xml.Serialization.SoapElementAttribute("get-company-info")] int getcompanyinfo, [System.Xml.Serialization.SoapElementAttribute("array-items-not-found")] out long[] arrayitemsnotfound, [System.Xml.Serialization.SoapElementAttribute("array-items-admin-killed")] out long[] arrayitemsadminkilled) {
        object[] results = this.Invoke("doGetItemsInfo", new object[] {
                    sessionhandle,
                    itemsidarray,
                    getdesc,
                    getimageurl,
                    getattribs,
                    getpostageoptions,
                    getcompanyinfo});
        arrayitemsnotfound = ((long[])(results[1]));
        arrayitemsadminkilled = ((long[])(results[2]));
        return ((ItemInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetItemsInfo(string sessionhandle, long[] itemsidarray, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetItemsInfo", new object[] {
                    sessionhandle,
                    itemsidarray,
                    getdesc,
                    getimageurl,
                    getattribs,
                    getpostageoptions,
                    getcompanyinfo}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemInfoStruct[] EnddoGetItemsInfo(System.IAsyncResult asyncResult, out long[] arrayitemsnotfound, out long[] arrayitemsadminkilled) {
        object[] results = this.EndInvoke(asyncResult);
        arrayitemsnotfound = ((long[])(results[1]));
        arrayitemsadminkilled = ((long[])(results[2]));
        return ((ItemInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetItemsInfoAsync(string sessionhandle, long[] itemsidarray, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo) {
        this.doGetItemsInfoAsync(sessionhandle, itemsidarray, getdesc, getimageurl, getattribs, getpostageoptions, getcompanyinfo, null);
    }
    
    /// <remarks/>
    public void doGetItemsInfoAsync(string sessionhandle, long[] itemsidarray, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, object userState) {
        if ((this.doGetItemsInfoOperationCompleted == null)) {
            this.doGetItemsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetItemsInfoOperationCompleted);
        }
        this.InvokeAsync("doGetItemsInfo", new object[] {
                    sessionhandle,
                    itemsidarray,
                    getdesc,
                    getimageurl,
                    getattribs,
                    getpostageoptions,
                    getcompanyinfo}, this.doGetItemsInfoOperationCompleted, userState);
    }
    
    private void OndoGetItemsInfoOperationCompleted(object arg) {
        if ((this.doGetItemsInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetItemsInfoCompleted(this, new doGetItemsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#paymentdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("payment-list")]
    public BillingDataType[] doGetPaymentData([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetPaymentData", new object[] {
                    countryid,
                    webapikey});
        return ((BillingDataType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetPaymentData(int countryid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetPaymentData", new object[] {
                    countryid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public BillingDataType[] EnddoGetPaymentData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BillingDataType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetPaymentDataAsync(int countryid, string webapikey) {
        this.doGetPaymentDataAsync(countryid, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetPaymentDataAsync(int countryid, string webapikey, object userState) {
        if ((this.doGetPaymentDataOperationCompleted == null)) {
            this.doGetPaymentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPaymentDataOperationCompleted);
        }
        this.InvokeAsync("doGetPaymentData", new object[] {
                    countryid,
                    webapikey}, this.doGetPaymentDataOperationCompleted, userState);
    }
    
    private void OndoGetPaymentDataOperationCompleted(object arg) {
        if ((this.doGetPaymentDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetPaymentDataCompleted(this, new doGetPaymentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformfields", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormFields([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSellFormFields", new object[] {
                    countrycode,
                    localversion,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormFields(int countrycode, long localversion, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormFields", new object[] {
                    countrycode,
                    localversion,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormFields(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsAsync(int countrycode, long localversion, string webapikey) {
        this.doGetSellFormFieldsAsync(countrycode, localversion, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsAsync(int countrycode, long localversion, string webapikey, object userState) {
        if ((this.doGetSellFormFieldsOperationCompleted == null)) {
            this.doGetSellFormFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormFields", new object[] {
                    countrycode,
                    localversion,
                    webapikey}, this.doGetSellFormFieldsOperationCompleted, userState);
    }
    
    private void OndoGetSellFormFieldsOperationCompleted(object arg) {
        if ((this.doGetSellFormFieldsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormFieldsCompleted(this, new doGetSellFormFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformfieldsext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormFieldsExt([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSellFormFieldsExt", new object[] {
                    countrycode,
                    localversion,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormFieldsExt(int countrycode, long localversion, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormFieldsExt", new object[] {
                    countrycode,
                    localversion,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormFieldsExt(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsExtAsync(int countrycode, long localversion, string webapikey) {
        this.doGetSellFormFieldsExtAsync(countrycode, localversion, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsExtAsync(int countrycode, long localversion, string webapikey, object userState) {
        if ((this.doGetSellFormFieldsExtOperationCompleted == null)) {
            this.doGetSellFormFieldsExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsExtOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormFieldsExt", new object[] {
                    countrycode,
                    localversion,
                    webapikey}, this.doGetSellFormFieldsExtOperationCompleted, userState);
    }
    
    private void OndoGetSellFormFieldsExtOperationCompleted(object arg) {
        if ((this.doGetSellFormFieldsExtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormFieldsExtCompleted(this, new doGetSellFormFieldsExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sitesflaginfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sites-info-list")]
    public SiteFlagInfoType[] doGetSitesFlagInfo([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSitesFlagInfo", new object[] {
                    countrycode,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SiteFlagInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSitesFlagInfo(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSitesFlagInfo", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteFlagInfoType[] EnddoGetSitesFlagInfo(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SiteFlagInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSitesFlagInfoAsync(int countrycode, string webapikey) {
        this.doGetSitesFlagInfoAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSitesFlagInfoAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetSitesFlagInfoOperationCompleted == null)) {
            this.doGetSitesFlagInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSitesFlagInfoOperationCompleted);
        }
        this.InvokeAsync("doGetSitesFlagInfo", new object[] {
                    countrycode,
                    webapikey}, this.doGetSitesFlagInfoOperationCompleted, userState);
    }
    
    private void OndoGetSitesFlagInfoOperationCompleted(object arg) {
        if ((this.doGetSitesFlagInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSitesFlagInfoCompleted(this, new doGetSitesFlagInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sitesinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sites-info-list")]
    public SiteInfoType[] doGetSitesInfo([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSitesInfo", new object[] {
                    countrycode,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SiteInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSitesInfo(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSitesInfo", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteInfoType[] EnddoGetSitesInfo(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SiteInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSitesInfoAsync(int countrycode, string webapikey) {
        this.doGetSitesInfoAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSitesInfoAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetSitesInfoOperationCompleted == null)) {
            this.doGetSitesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSitesInfoOperationCompleted);
        }
        this.InvokeAsync("doGetSitesInfo", new object[] {
                    countrycode,
                    webapikey}, this.doGetSitesInfoOperationCompleted, userState);
    }
    
    private void OndoGetSitesInfoOperationCompleted(object arg) {
        if ((this.doGetSitesInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSitesInfoCompleted(this, new doGetSitesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsystemtime", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("server-time")]
    public long doGetSystemTime([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetSystemTime", new object[] {
                    countryid,
                    webapikey});
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSystemTime(int countryid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSystemTime", new object[] {
                    countryid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoGetSystemTime(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doGetSystemTimeAsync(int countryid, string webapikey) {
        this.doGetSystemTimeAsync(countryid, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetSystemTimeAsync(int countryid, string webapikey, object userState) {
        if ((this.doGetSystemTimeOperationCompleted == null)) {
            this.doGetSystemTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSystemTimeOperationCompleted);
        }
        this.InvokeAsync("doGetSystemTime", new object[] {
                    countryid,
                    webapikey}, this.doGetSystemTimeOperationCompleted, userState);
    }
    
    private void OndoGetSystemTimeOperationCompleted(object arg) {
        if ((this.doGetSystemTimeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSystemTimeCompleted(this, new doGetSystemTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getuserid", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-id")]
    public int doGetUserID([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("user-login")] string userlogin, [System.Xml.Serialization.SoapElementAttribute("user-email")] string useremail, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetUserID", new object[] {
                    countryid,
                    userlogin,
                    useremail,
                    webapikey});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetUserID(int countryid, string userlogin, string useremail, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetUserID", new object[] {
                    countryid,
                    userlogin,
                    useremail,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetUserID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetUserIDAsync(int countryid, string userlogin, string useremail, string webapikey) {
        this.doGetUserIDAsync(countryid, userlogin, useremail, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetUserIDAsync(int countryid, string userlogin, string useremail, string webapikey, object userState) {
        if ((this.doGetUserIDOperationCompleted == null)) {
            this.doGetUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserIDOperationCompleted);
        }
        this.InvokeAsync("doGetUserID", new object[] {
                    countryid,
                    userlogin,
                    useremail,
                    webapikey}, this.doGetUserIDOperationCompleted, userState);
    }
    
    private void OndoGetUserIDOperationCompleted(object arg) {
        if ((this.doGetUserIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetUserIDCompleted(this, new doGetUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getuseritems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-item-list")]
    public UserItemList[] doGetUserItems([System.Xml.Serialization.SoapElementAttribute("user-id")] int userid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, int offset, int limit, [System.Xml.Serialization.SoapElementAttribute("user-item-count")] out int useritemcount) {
        object[] results = this.Invoke("doGetUserItems", new object[] {
                    userid,
                    webapikey,
                    countryid,
                    offset,
                    limit});
        useritemcount = ((int)(results[1]));
        return ((UserItemList[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetUserItems(int userid, string webapikey, int countryid, int offset, int limit, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetUserItems", new object[] {
                    userid,
                    webapikey,
                    countryid,
                    offset,
                    limit}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserItemList[] EnddoGetUserItems(System.IAsyncResult asyncResult, out int useritemcount) {
        object[] results = this.EndInvoke(asyncResult);
        useritemcount = ((int)(results[1]));
        return ((UserItemList[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetUserItemsAsync(int userid, string webapikey, int countryid, int offset, int limit) {
        this.doGetUserItemsAsync(userid, webapikey, countryid, offset, limit, null);
    }
    
    /// <remarks/>
    public void doGetUserItemsAsync(int userid, string webapikey, int countryid, int offset, int limit, object userState) {
        if ((this.doGetUserItemsOperationCompleted == null)) {
            this.doGetUserItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserItemsOperationCompleted);
        }
        this.InvokeAsync("doGetUserItems", new object[] {
                    userid,
                    webapikey,
                    countryid,
                    offset,
                    limit}, this.doGetUserItemsOperationCompleted, userState);
    }
    
    private void OndoGetUserItemsOperationCompleted(object arg) {
        if ((this.doGetUserItemsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetUserItemsCompleted(this, new doGetUserItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getuserlogin", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-login")]
    public string doGetUserLogin([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("user-id")] int userid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetUserLogin", new object[] {
                    countryid,
                    userid,
                    webapikey});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetUserLogin(int countryid, int userid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetUserLogin", new object[] {
                    countryid,
                    userid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoGetUserLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doGetUserLoginAsync(int countryid, int userid, string webapikey) {
        this.doGetUserLoginAsync(countryid, userid, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetUserLoginAsync(int countryid, int userid, string webapikey, object userState) {
        if ((this.doGetUserLoginOperationCompleted == null)) {
            this.doGetUserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserLoginOperationCompleted);
        }
        this.InvokeAsync("doGetUserLogin", new object[] {
                    countryid,
                    userid,
                    webapikey}, this.doGetUserLoginOperationCompleted, userState);
    }
    
    private void OndoGetUserLoginOperationCompleted(object arg) {
        if ((this.doGetUserLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetUserLoginCompleted(this, new doGetUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#queryallstatus", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sys-country-status")]
    public SysStatusType[] doQueryAllSysStatus([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doQueryAllSysStatus", new object[] {
                    countryid,
                    webapikey});
        return ((SysStatusType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoQueryAllSysStatus(int countryid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doQueryAllSysStatus", new object[] {
                    countryid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public SysStatusType[] EnddoQueryAllSysStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SysStatusType[])(results[0]));
    }
    
    /// <remarks/>
    public void doQueryAllSysStatusAsync(int countryid, string webapikey) {
        this.doQueryAllSysStatusAsync(countryid, webapikey, null);
    }
    
    /// <remarks/>
    public void doQueryAllSysStatusAsync(int countryid, string webapikey, object userState) {
        if ((this.doQueryAllSysStatusOperationCompleted == null)) {
            this.doQueryAllSysStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoQueryAllSysStatusOperationCompleted);
        }
        this.InvokeAsync("doQueryAllSysStatus", new object[] {
                    countryid,
                    webapikey}, this.doQueryAllSysStatusOperationCompleted, userState);
    }
    
    private void OndoQueryAllSysStatusOperationCompleted(object arg) {
        if ((this.doQueryAllSysStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doQueryAllSysStatusCompleted(this, new doQueryAllSysStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformfieldsextlimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormFieldsExtLimit([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, int offset, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr, [System.Xml.Serialization.SoapElementAttribute("form-fields-count")] out int formfieldscount) {
        object[] results = this.Invoke("doGetSellFormFieldsExtLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        formfieldscount = ((int)(results[3]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormFieldsExtLimit(int countrycode, long localversion, string webapikey, int offset, int packageelement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormFieldsExtLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormFieldsExtLimit(System.IAsyncResult asyncResult, out long verkey, out string verstr, out int formfieldscount) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        formfieldscount = ((int)(results[3]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsExtLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement) {
        this.doGetSellFormFieldsExtLimitAsync(countrycode, localversion, webapikey, offset, packageelement, null);
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsExtLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement, object userState) {
        if ((this.doGetSellFormFieldsExtLimitOperationCompleted == null)) {
            this.doGetSellFormFieldsExtLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsExtLimitOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormFieldsExtLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, this.doGetSellFormFieldsExtLimitOperationCompleted, userState);
    }
    
    private void OndoGetSellFormFieldsExtLimitOperationCompleted(object arg) {
        if ((this.doGetSellFormFieldsExtLimitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormFieldsExtLimitCompleted(this, new doGetSellFormFieldsExtLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformfieldslimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormFieldsLimit([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, int offset, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr, [System.Xml.Serialization.SoapElementAttribute("form-fields-count")] out int formfieldscount) {
        object[] results = this.Invoke("doGetSellFormFieldsLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        formfieldscount = ((int)(results[3]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormFieldsLimit(int countrycode, long localversion, string webapikey, int offset, int packageelement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormFieldsLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormFieldsLimit(System.IAsyncResult asyncResult, out long verkey, out string verstr, out int formfieldscount) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        formfieldscount = ((int)(results[3]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement) {
        this.doGetSellFormFieldsLimitAsync(countrycode, localversion, webapikey, offset, packageelement, null);
    }
    
    /// <remarks/>
    public void doGetSellFormFieldsLimitAsync(int countrycode, long localversion, string webapikey, int offset, int packageelement, object userState) {
        if ((this.doGetSellFormFieldsLimitOperationCompleted == null)) {
            this.doGetSellFormFieldsLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormFieldsLimitOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormFieldsLimit", new object[] {
                    countrycode,
                    localversion,
                    webapikey,
                    offset,
                    packageelement}, this.doGetSellFormFieldsLimitOperationCompleted, userState);
    }
    
    private void OndoGetSellFormFieldsLimitOperationCompleted(object arg) {
        if ((this.doGetSellFormFieldsLimitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormFieldsLimitCompleted(this, new doGetSellFormFieldsLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#querystatus", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("info")]
    public string doQuerySysStatus(int sysvar, [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey) {
        object[] results = this.Invoke("doQuerySysStatus", new object[] {
                    sysvar,
                    countryid,
                    webapikey});
        verkey = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoQuerySysStatus(int sysvar, int countryid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doQuerySysStatus", new object[] {
                    sysvar,
                    countryid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoQuerySysStatus(System.IAsyncResult asyncResult, out long verkey) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doQuerySysStatusAsync(int sysvar, int countryid, string webapikey) {
        this.doQuerySysStatusAsync(sysvar, countryid, webapikey, null);
    }
    
    /// <remarks/>
    public void doQuerySysStatusAsync(int sysvar, int countryid, string webapikey, object userState) {
        if ((this.doQuerySysStatusOperationCompleted == null)) {
            this.doQuerySysStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoQuerySysStatusOperationCompleted);
        }
        this.InvokeAsync("doQuerySysStatus", new object[] {
                    sysvar,
                    countryid,
                    webapikey}, this.doQuerySysStatusOperationCompleted, userState);
    }
    
    private void OndoQuerySysStatusOperationCompleted(object arg) {
        if ((this.doQuerySysStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doQuerySysStatusCompleted(this, new doQuerySysStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#showcat", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cat-parent-array")]
    public InfoCatList[] doShowCat([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("cat-id")] int catid, [System.Xml.Serialization.SoapElementAttribute("cat-item-state")] int catitemstate, [System.Xml.Serialization.SoapElementAttribute("cat-item-option")] int catitemoption, [System.Xml.Serialization.SoapElementAttribute("cat-item-duration-option")] DurationTimeInfo catitemdurationoption, [System.Xml.Serialization.SoapElementAttribute("cat-attrib-fields")] FieldsValue[] catattribfields, [System.Xml.Serialization.SoapElementAttribute("cat-sort-options")] int catsortoptions, [System.Xml.Serialization.SoapElementAttribute("cat-items-price")] PriceCatInfo catitemsprice, [System.Xml.Serialization.SoapElementAttribute("cat-items-offset")] int catitemsoffset, [System.Xml.Serialization.SoapElementAttribute("cat-items-limit")] int catitemslimit, [System.Xml.Serialization.SoapElementAttribute("cat-child-array")] out InfoCatList[] catchildarray, [System.Xml.Serialization.SoapElementAttribute("cat-sister-array")] out InfoCatList[] catsisterarray, [System.Xml.Serialization.SoapElementAttribute("cat-items-count")] out int catitemscount, [System.Xml.Serialization.SoapElementAttribute("cat-items-count-featured")] out int catitemscountfeatured, [System.Xml.Serialization.SoapElementAttribute("cat-items-array")] out SearchResponseType[] catitemsarray) {
        object[] results = this.Invoke("doShowCat", new object[] {
                    sessionhandle,
                    catid,
                    catitemstate,
                    catitemoption,
                    catitemdurationoption,
                    catattribfields,
                    catsortoptions,
                    catitemsprice,
                    catitemsoffset,
                    catitemslimit});
        catchildarray = ((InfoCatList[])(results[1]));
        catsisterarray = ((InfoCatList[])(results[2]));
        catitemscount = ((int)(results[3]));
        catitemscountfeatured = ((int)(results[4]));
        catitemsarray = ((SearchResponseType[])(results[5]));
        return ((InfoCatList[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoShowCat(string sessionhandle, int catid, int catitemstate, int catitemoption, DurationTimeInfo catitemdurationoption, FieldsValue[] catattribfields, int catsortoptions, PriceCatInfo catitemsprice, int catitemsoffset, int catitemslimit, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doShowCat", new object[] {
                    sessionhandle,
                    catid,
                    catitemstate,
                    catitemoption,
                    catitemdurationoption,
                    catattribfields,
                    catsortoptions,
                    catitemsprice,
                    catitemsoffset,
                    catitemslimit}, callback, asyncState);
    }
    
    /// <remarks/>
    public InfoCatList[] EnddoShowCat(System.IAsyncResult asyncResult, out InfoCatList[] catchildarray, out InfoCatList[] catsisterarray, out int catitemscount, out int catitemscountfeatured, out SearchResponseType[] catitemsarray) {
        object[] results = this.EndInvoke(asyncResult);
        catchildarray = ((InfoCatList[])(results[1]));
        catsisterarray = ((InfoCatList[])(results[2]));
        catitemscount = ((int)(results[3]));
        catitemscountfeatured = ((int)(results[4]));
        catitemsarray = ((SearchResponseType[])(results[5]));
        return ((InfoCatList[])(results[0]));
    }
    
    /// <remarks/>
    public void doShowCatAsync(string sessionhandle, int catid, int catitemstate, int catitemoption, DurationTimeInfo catitemdurationoption, FieldsValue[] catattribfields, int catsortoptions, PriceCatInfo catitemsprice, int catitemsoffset, int catitemslimit) {
        this.doShowCatAsync(sessionhandle, catid, catitemstate, catitemoption, catitemdurationoption, catattribfields, catsortoptions, catitemsprice, catitemsoffset, catitemslimit, null);
    }
    
    /// <remarks/>
    public void doShowCatAsync(string sessionhandle, int catid, int catitemstate, int catitemoption, DurationTimeInfo catitemdurationoption, FieldsValue[] catattribfields, int catsortoptions, PriceCatInfo catitemsprice, int catitemsoffset, int catitemslimit, object userState) {
        if ((this.doShowCatOperationCompleted == null)) {
            this.doShowCatOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowCatOperationCompleted);
        }
        this.InvokeAsync("doShowCat", new object[] {
                    sessionhandle,
                    catid,
                    catitemstate,
                    catitemoption,
                    catitemdurationoption,
                    catattribfields,
                    catsortoptions,
                    catitemsprice,
                    catitemsoffset,
                    catitemslimit}, this.doShowCatOperationCompleted, userState);
    }
    
    private void OndoShowCatOperationCompleted(object arg) {
        if ((this.doShowCatCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doShowCatCompleted(this, new doShowCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#showiteminfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-list-info")]
    public ItemInfo doShowItemInfo([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("get-desc")] int getdesc, [System.Xml.Serialization.SoapElementAttribute("get-image-url")] int getimageurl, [System.Xml.Serialization.SoapElementAttribute("get-attribs")] int getattribs, [System.Xml.Serialization.SoapElementAttribute("get-postage-options")] int getpostageoptions, [System.Xml.Serialization.SoapElementAttribute("get-company-info")] int getcompanyinfo, [System.Xml.Serialization.SoapElementAttribute("item-cat-path")] out ItemCatList[] itemcatpath, [System.Xml.Serialization.SoapElementAttribute("item-img-list")] out ItemImageList[] itemimglist, [System.Xml.Serialization.SoapElementAttribute("item-attrib-list")] out AttribStruct[] itemattriblist, [System.Xml.Serialization.SoapElementAttribute("item-postage-options")] out PostageStruct[] itempostageoptions, [System.Xml.Serialization.SoapElementAttribute("item-payment-options")] out ItemPaymentOptions itempaymentoptions, [System.Xml.Serialization.SoapElementAttribute("item-company-info")] out CompanyInfoStruct itemcompanyinfo) {
        object[] results = this.Invoke("doShowItemInfo", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl,
                    getattribs,
                    getpostageoptions,
                    getcompanyinfo});
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        itemattriblist = ((AttribStruct[])(results[3]));
        itempostageoptions = ((PostageStruct[])(results[4]));
        itempaymentoptions = ((ItemPaymentOptions)(results[5]));
        itemcompanyinfo = ((CompanyInfoStruct)(results[6]));
        return ((ItemInfo)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoShowItemInfo(string sessionhandle, long itemid, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doShowItemInfo", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl,
                    getattribs,
                    getpostageoptions,
                    getcompanyinfo}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemInfo EnddoShowItemInfo(System.IAsyncResult asyncResult, out ItemCatList[] itemcatpath, out ItemImageList[] itemimglist, out AttribStruct[] itemattriblist, out PostageStruct[] itempostageoptions, out ItemPaymentOptions itempaymentoptions, out CompanyInfoStruct itemcompanyinfo) {
        object[] results = this.EndInvoke(asyncResult);
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        itemattriblist = ((AttribStruct[])(results[3]));
        itempostageoptions = ((PostageStruct[])(results[4]));
        itempaymentoptions = ((ItemPaymentOptions)(results[5]));
        itemcompanyinfo = ((CompanyInfoStruct)(results[6]));
        return ((ItemInfo)(results[0]));
    }
    
    /// <remarks/>
    public void doShowItemInfoAsync(string sessionhandle, long itemid, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo) {
        this.doShowItemInfoAsync(sessionhandle, itemid, getdesc, getimageurl, getattribs, getpostageoptions, getcompanyinfo, null);
    }
    
    /// <remarks/>
    public void doShowItemInfoAsync(string sessionhandle, long itemid, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, object userState) {
        if ((this.doShowItemInfoOperationCompleted == null)) {
            this.doShowItemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowItemInfoOperationCompleted);
        }
        this.InvokeAsync("doShowItemInfo", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl,
                    getattribs,
                    getpostageoptions,
                    getcompanyinfo}, this.doShowItemInfoOperationCompleted, userState);
    }
    
    private void OndoShowItemInfoOperationCompleted(object arg) {
        if ((this.doShowItemInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doShowItemInfoCompleted(this, new doShowItemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#showuser", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-country")]
    public int doShowUser(
                [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, 
                [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, 
                [System.Xml.Serialization.SoapElementAttribute("user-id")] ref long userid, 
                [System.Xml.Serialization.SoapElementAttribute("user-login")] ref string userlogin, 
                [System.Xml.Serialization.SoapElementAttribute("user-create-date")] out long usercreatedate, 
                [System.Xml.Serialization.SoapElementAttribute("user-login-date")] out long userlogindate, 
                [System.Xml.Serialization.SoapElementAttribute("user-rating")] out int userrating, 
                [System.Xml.Serialization.SoapElementAttribute("user-is-new-user")] out int userisnewuser, 
                [System.Xml.Serialization.SoapElementAttribute("user-not-activated")] out int usernotactivated, 
                [System.Xml.Serialization.SoapElementAttribute("user-closed")] out int userclosed, 
                [System.Xml.Serialization.SoapElementAttribute("user-blocked")] out int userblocked, 
                [System.Xml.Serialization.SoapElementAttribute("user-terminated")] out int userterminated, 
                [System.Xml.Serialization.SoapElementAttribute("user-has-page")] out int userhaspage, 
                [System.Xml.Serialization.SoapElementAttribute("user-is-sseller")] out int userissseller, 
                [System.Xml.Serialization.SoapElementAttribute("user-is-eco")] out int useriseco, 
                [System.Xml.Serialization.SoapElementAttribute("user-positive-feedback")] out ShowUserFeedbacks userpositivefeedback, 
                [System.Xml.Serialization.SoapElementAttribute("user-negative-feedback")] out ShowUserFeedbacks usernegativefeedback, 
                [System.Xml.Serialization.SoapElementAttribute("user-neutral-feedback")] out ShowUserFeedbacks userneutralfeedback, 
                [System.Xml.Serialization.SoapElementAttribute("user-junior-status")] out int userjuniorstatus, 
                [System.Xml.Serialization.SoapElementAttribute("user-has-shop")] out int userhasshop, 
                [System.Xml.Serialization.SoapElementAttribute("user-company-icon")] out int usercompanyicon, 
                [System.Xml.Serialization.SoapElementAttribute("user-sell-rating-count")] out int usersellratingcount, 
                [System.Xml.Serialization.SoapElementAttribute("user-sell-rating-average")] out SellRatingAverageStruct[] usersellratingaverage) {
        object[] results = this.Invoke("doShowUser", new object[] {
                    webapikey,
                    countryid,
                    userid,
                    userlogin});
        userid = ((long)(results[1]));
        userlogin = ((string)(results[2]));
        usercreatedate = ((long)(results[3]));
        userlogindate = ((long)(results[4]));
        userrating = ((int)(results[5]));
        userisnewuser = ((int)(results[6]));
        usernotactivated = ((int)(results[7]));
        userclosed = ((int)(results[8]));
        userblocked = ((int)(results[9]));
        userterminated = ((int)(results[10]));
        userhaspage = ((int)(results[11]));
        userissseller = ((int)(results[12]));
        useriseco = ((int)(results[13]));
        userpositivefeedback = ((ShowUserFeedbacks)(results[14]));
        usernegativefeedback = ((ShowUserFeedbacks)(results[15]));
        userneutralfeedback = ((ShowUserFeedbacks)(results[16]));
        userjuniorstatus = ((int)(results[17]));
        userhasshop = ((int)(results[18]));
        usercompanyicon = ((int)(results[19]));
        usersellratingcount = ((int)(results[20]));
        usersellratingaverage = ((SellRatingAverageStruct[])(results[21]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoShowUser(string webapikey, int countryid, long userid, string userlogin, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doShowUser", new object[] {
                    webapikey,
                    countryid,
                    userid,
                    userlogin}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoShowUser(
                System.IAsyncResult asyncResult, 
                out long userid, 
                out string userlogin, 
                out long usercreatedate, 
                out long userlogindate, 
                out int userrating, 
                out int userisnewuser, 
                out int usernotactivated, 
                out int userclosed, 
                out int userblocked, 
                out int userterminated, 
                out int userhaspage, 
                out int userissseller, 
                out int useriseco, 
                out ShowUserFeedbacks userpositivefeedback, 
                out ShowUserFeedbacks usernegativefeedback, 
                out ShowUserFeedbacks userneutralfeedback, 
                out int userjuniorstatus, 
                out int userhasshop, 
                out int usercompanyicon, 
                out int usersellratingcount, 
                out SellRatingAverageStruct[] usersellratingaverage) {
        object[] results = this.EndInvoke(asyncResult);
        userid = ((long)(results[1]));
        userlogin = ((string)(results[2]));
        usercreatedate = ((long)(results[3]));
        userlogindate = ((long)(results[4]));
        userrating = ((int)(results[5]));
        userisnewuser = ((int)(results[6]));
        usernotactivated = ((int)(results[7]));
        userclosed = ((int)(results[8]));
        userblocked = ((int)(results[9]));
        userterminated = ((int)(results[10]));
        userhaspage = ((int)(results[11]));
        userissseller = ((int)(results[12]));
        useriseco = ((int)(results[13]));
        userpositivefeedback = ((ShowUserFeedbacks)(results[14]));
        usernegativefeedback = ((ShowUserFeedbacks)(results[15]));
        userneutralfeedback = ((ShowUserFeedbacks)(results[16]));
        userjuniorstatus = ((int)(results[17]));
        userhasshop = ((int)(results[18]));
        usercompanyicon = ((int)(results[19]));
        usersellratingcount = ((int)(results[20]));
        usersellratingaverage = ((SellRatingAverageStruct[])(results[21]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doShowUserAsync(string webapikey, int countryid, long userid, string userlogin) {
        this.doShowUserAsync(webapikey, countryid, userid, userlogin, null);
    }
    
    /// <remarks/>
    public void doShowUserAsync(string webapikey, int countryid, long userid, string userlogin, object userState) {
        if ((this.doShowUserOperationCompleted == null)) {
            this.doShowUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowUserOperationCompleted);
        }
        this.InvokeAsync("doShowUser", new object[] {
                    webapikey,
                    countryid,
                    userid,
                    userlogin}, this.doShowUserOperationCompleted, userState);
    }
    
    private void OndoShowUserOperationCompleted(object arg) {
        if ((this.doShowUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doShowUserCompleted(this, new doShowUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#verifyitem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long doVerifyItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("local-id")] int localid, [System.Xml.Serialization.SoapElementAttribute("item-listed")] out int itemlisted) {
        object[] results = this.Invoke("doVerifyItem", new object[] {
                    sessionhandle,
                    localid});
        itemlisted = ((int)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoVerifyItem(string sessionhandle, int localid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doVerifyItem", new object[] {
                    sessionhandle,
                    localid}, callback, asyncState);
    }
    
    /// <remarks/>
    public long EnddoVerifyItem(System.IAsyncResult asyncResult, out int itemlisted) {
        object[] results = this.EndInvoke(asyncResult);
        itemlisted = ((int)(results[1]));
        return ((long)(results[0]));
    }
    
    /// <remarks/>
    public void doVerifyItemAsync(string sessionhandle, int localid) {
        this.doVerifyItemAsync(sessionhandle, localid, null);
    }
    
    /// <remarks/>
    public void doVerifyItemAsync(string sessionhandle, int localid, object userState) {
        if ((this.doVerifyItemOperationCompleted == null)) {
            this.doVerifyItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoVerifyItemOperationCompleted);
        }
        this.InvokeAsync("doVerifyItem", new object[] {
                    sessionhandle,
                    localid}, this.doVerifyItemOperationCompleted, userState);
    }
    
    private void OndoVerifyItemOperationCompleted(object arg) {
        if ((this.doVerifyItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doVerifyItemCompleted(this, new doVerifyItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#addwatch", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("array-items-add-id")]
    public long[] doAddWatchList([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("array-items-not-found")] out long[] arrayitemsnotfound, [System.Xml.Serialization.SoapElementAttribute("array-items-admin-killed")] out long[] arrayitemsadminkilled) {
        object[] results = this.Invoke("doAddWatchList", new object[] {
                    sessionhandle,
                    itemsidarray});
        arrayitemsnotfound = ((long[])(results[1]));
        arrayitemsadminkilled = ((long[])(results[2]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoAddWatchList(string sessionhandle, long[] itemsidarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doAddWatchList", new object[] {
                    sessionhandle,
                    itemsidarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public long[] EnddoAddWatchList(System.IAsyncResult asyncResult, out long[] arrayitemsnotfound, out long[] arrayitemsadminkilled) {
        object[] results = this.EndInvoke(asyncResult);
        arrayitemsnotfound = ((long[])(results[1]));
        arrayitemsadminkilled = ((long[])(results[2]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public void doAddWatchListAsync(string sessionhandle, long[] itemsidarray) {
        this.doAddWatchListAsync(sessionhandle, itemsidarray, null);
    }
    
    /// <remarks/>
    public void doAddWatchListAsync(string sessionhandle, long[] itemsidarray, object userState) {
        if ((this.doAddWatchListOperationCompleted == null)) {
            this.doAddWatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddWatchListOperationCompleted);
        }
        this.InvokeAsync("doAddWatchList", new object[] {
                    sessionhandle,
                    itemsidarray}, this.doAddWatchListOperationCompleted, userState);
    }
    
    private void OndoAddWatchListOperationCompleted(object arg) {
        if ((this.doAddWatchListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doAddWatchListCompleted(this, new doAddWatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#feedback", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("feedback-id")]
    public int doFeedback([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("fe-item-id")] int feitemid, [System.Xml.Serialization.SoapElementAttribute("fe-from-user-id")] int fefromuserid, [System.Xml.Serialization.SoapElementAttribute("fe-to-user-id")] int fetouserid, [System.Xml.Serialization.SoapElementAttribute("fe-comment")] string fecomment, [System.Xml.Serialization.SoapElementAttribute("fe-comment-type")] string fecommenttype, [System.Xml.Serialization.SoapElementAttribute("fe-op")] int feop, [System.Xml.Serialization.SoapElementAttribute("fe-rating")] SellRatingEstimationStruct[] ferating) {
        object[] results = this.Invoke("doFeedback", new object[] {
                    sessionhandle,
                    feitemid,
                    fefromuserid,
                    fetouserid,
                    fecomment,
                    fecommenttype,
                    feop,
                    ferating});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoFeedback(string sessionhandle, int feitemid, int fefromuserid, int fetouserid, string fecomment, string fecommenttype, int feop, SellRatingEstimationStruct[] ferating, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doFeedback", new object[] {
                    sessionhandle,
                    feitemid,
                    fefromuserid,
                    fetouserid,
                    fecomment,
                    fecommenttype,
                    feop,
                    ferating}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoFeedback(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doFeedbackAsync(string sessionhandle, int feitemid, int fefromuserid, int fetouserid, string fecomment, string fecommenttype, int feop, SellRatingEstimationStruct[] ferating) {
        this.doFeedbackAsync(sessionhandle, feitemid, fefromuserid, fetouserid, fecomment, fecommenttype, feop, ferating, null);
    }
    
    /// <remarks/>
    public void doFeedbackAsync(string sessionhandle, int feitemid, int fefromuserid, int fetouserid, string fecomment, string fecommenttype, int feop, SellRatingEstimationStruct[] ferating, object userState) {
        if ((this.doFeedbackOperationCompleted == null)) {
            this.doFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFeedbackOperationCompleted);
        }
        this.InvokeAsync("doFeedback", new object[] {
                    sessionhandle,
                    feitemid,
                    fefromuserid,
                    fetouserid,
                    fecomment,
                    fecommenttype,
                    feop,
                    ferating}, this.doFeedbackOperationCompleted, userState);
    }
    
    private void OndoFeedbackOperationCompleted(object arg) {
        if ((this.doFeedbackCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doFeedbackCompleted(this, new doFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getbiditem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("biditem-list")]
    public BidListStruct2[] doGetBidItem2([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid) {
        object[] results = this.Invoke("doGetBidItem2", new object[] {
                    sessionhandle,
                    itemid});
        return ((BidListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetBidItem2(string sessionhandle, long itemid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetBidItem2", new object[] {
                    sessionhandle,
                    itemid}, callback, asyncState);
    }
    
    /// <remarks/>
    public BidListStruct2[] EnddoGetBidItem2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BidListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetBidItem2Async(string sessionhandle, long itemid) {
        this.doGetBidItem2Async(sessionhandle, itemid, null);
    }
    
    /// <remarks/>
    public void doGetBidItem2Async(string sessionhandle, long itemid, object userState) {
        if ((this.doGetBidItem2OperationCompleted == null)) {
            this.doGetBidItem2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetBidItem2OperationCompleted);
        }
        this.InvokeAsync("doGetBidItem2", new object[] {
                    sessionhandle,
                    itemid}, this.doGetBidItem2OperationCompleted, userState);
    }
    
    private void OndoGetBidItem2OperationCompleted(object arg) {
        if ((this.doGetBidItem2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetBidItem2Completed(this, new doGetBidItem2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getfeedback", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("feedback-list")]
    public FeedbackList[] doGetFeedback([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-from")] int feedbackfrom, [System.Xml.Serialization.SoapElementAttribute("feedback-to")] int feedbackto, [System.Xml.Serialization.SoapElementAttribute("feedback-offset")] int feedbackoffset, [System.Xml.Serialization.SoapElementAttribute("feedback-kind-list")] string feedbackkindlist, [System.Xml.Serialization.SoapElementAttribute("feedback-count")] out int feedbackcount) {
        object[] results = this.Invoke("doGetFeedback", new object[] {
                    sessionhandle,
                    feedbackfrom,
                    feedbackto,
                    feedbackoffset,
                    feedbackkindlist});
        feedbackcount = ((int)(results[1]));
        return ((FeedbackList[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetFeedback(string sessionhandle, int feedbackfrom, int feedbackto, int feedbackoffset, string feedbackkindlist, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetFeedback", new object[] {
                    sessionhandle,
                    feedbackfrom,
                    feedbackto,
                    feedbackoffset,
                    feedbackkindlist}, callback, asyncState);
    }
    
    /// <remarks/>
    public FeedbackList[] EnddoGetFeedback(System.IAsyncResult asyncResult, out int feedbackcount) {
        object[] results = this.EndInvoke(asyncResult);
        feedbackcount = ((int)(results[1]));
        return ((FeedbackList[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetFeedbackAsync(string sessionhandle, int feedbackfrom, int feedbackto, int feedbackoffset, string feedbackkindlist) {
        this.doGetFeedbackAsync(sessionhandle, feedbackfrom, feedbackto, feedbackoffset, feedbackkindlist, null);
    }
    
    /// <remarks/>
    public void doGetFeedbackAsync(string sessionhandle, int feedbackfrom, int feedbackto, int feedbackoffset, string feedbackkindlist, object userState) {
        if ((this.doGetFeedbackOperationCompleted == null)) {
            this.doGetFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFeedbackOperationCompleted);
        }
        this.InvokeAsync("doGetFeedback", new object[] {
                    sessionhandle,
                    feedbackfrom,
                    feedbackto,
                    feedbackoffset,
                    feedbackkindlist}, this.doGetFeedbackOperationCompleted, userState);
    }
    
    private void OndoGetFeedbackOperationCompleted(object arg) {
        if ((this.doGetFeedbackCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetFeedbackCompleted(this, new doGetFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsitejournal", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("site-journal-array")]
    public SiteJournal[] doGetSiteJournal([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("starting-point")] long startingpoint, [System.Xml.Serialization.SoapElementAttribute("info-type")] int infotype) {
        object[] results = this.Invoke("doGetSiteJournal", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype});
        return ((SiteJournal[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSiteJournal(string sessionhandle, long startingpoint, int infotype, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSiteJournal", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteJournal[] EnddoGetSiteJournal(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SiteJournal[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSiteJournalAsync(string sessionhandle, long startingpoint, int infotype) {
        this.doGetSiteJournalAsync(sessionhandle, startingpoint, infotype, null);
    }
    
    /// <remarks/>
    public void doGetSiteJournalAsync(string sessionhandle, long startingpoint, int infotype, object userState) {
        if ((this.doGetSiteJournalOperationCompleted == null)) {
            this.doGetSiteJournalOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalOperationCompleted);
        }
        this.InvokeAsync("doGetSiteJournal", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype}, this.doGetSiteJournalOperationCompleted, userState);
    }
    
    private void OndoGetSiteJournalOperationCompleted(object arg) {
        if ((this.doGetSiteJournalCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSiteJournalCompleted(this, new doGetSiteJournalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsitejournalinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("site-journal-info")]
    public SiteJournalInfo doGetSiteJournalInfo([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("starting-point")] long startingpoint, [System.Xml.Serialization.SoapElementAttribute("info-type")] int infotype) {
        object[] results = this.Invoke("doGetSiteJournalInfo", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype});
        return ((SiteJournalInfo)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSiteJournalInfo(string sessionhandle, long startingpoint, int infotype, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSiteJournalInfo", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteJournalInfo EnddoGetSiteJournalInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SiteJournalInfo)(results[0]));
    }
    
    /// <remarks/>
    public void doGetSiteJournalInfoAsync(string sessionhandle, long startingpoint, int infotype) {
        this.doGetSiteJournalInfoAsync(sessionhandle, startingpoint, infotype, null);
    }
    
    /// <remarks/>
    public void doGetSiteJournalInfoAsync(string sessionhandle, long startingpoint, int infotype, object userState) {
        if ((this.doGetSiteJournalInfoOperationCompleted == null)) {
            this.doGetSiteJournalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalInfoOperationCompleted);
        }
        this.InvokeAsync("doGetSiteJournalInfo", new object[] {
                    sessionhandle,
                    startingpoint,
                    infotype}, this.doGetSiteJournalInfoOperationCompleted, userState);
    }
    
    private void OndoGetSiteJournalInfoOperationCompleted(object arg) {
        if ((this.doGetSiteJournalInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSiteJournalInfoCompleted(this, new doGetSiteJournalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myaccount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myaccount-list")]
    public MyAccountStruct2[] doMyAccount2([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("account-type")] string accounttype, int offset, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray, int limit) {
        object[] results = this.Invoke("doMyAccount2", new object[] {
                    sessionhandle,
                    accounttype,
                    offset,
                    itemsarray,
                    limit});
        return ((MyAccountStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyAccount2(string sessionhandle, string accounttype, int offset, int[] itemsarray, int limit, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyAccount2", new object[] {
                    sessionhandle,
                    accounttype,
                    offset,
                    itemsarray,
                    limit}, callback, asyncState);
    }
    
    /// <remarks/>
    public MyAccountStruct2[] EnddoMyAccount2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MyAccountStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyAccount2Async(string sessionhandle, string accounttype, int offset, int[] itemsarray, int limit) {
        this.doMyAccount2Async(sessionhandle, accounttype, offset, itemsarray, limit, null);
    }
    
    /// <remarks/>
    public void doMyAccount2Async(string sessionhandle, string accounttype, int offset, int[] itemsarray, int limit, object userState) {
        if ((this.doMyAccount2OperationCompleted == null)) {
            this.doMyAccount2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyAccount2OperationCompleted);
        }
        this.InvokeAsync("doMyAccount2", new object[] {
                    sessionhandle,
                    accounttype,
                    offset,
                    itemsarray,
                    limit}, this.doMyAccount2OperationCompleted, userState);
    }
    
    private void OndoMyAccount2OperationCompleted(object arg) {
        if ((this.doMyAccount2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyAccount2Completed(this, new doMyAccount2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myaccountitemscount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myaccount-items-count")]
    public int doMyAccountItemsCount([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("account-type")] string accounttype, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray) {
        object[] results = this.Invoke("doMyAccountItemsCount", new object[] {
                    sessionhandle,
                    accounttype,
                    itemsarray});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyAccountItemsCount(string sessionhandle, string accounttype, int[] itemsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyAccountItemsCount", new object[] {
                    sessionhandle,
                    accounttype,
                    itemsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoMyAccountItemsCount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doMyAccountItemsCountAsync(string sessionhandle, string accounttype, int[] itemsarray) {
        this.doMyAccountItemsCountAsync(sessionhandle, accounttype, itemsarray, null);
    }
    
    /// <remarks/>
    public void doMyAccountItemsCountAsync(string sessionhandle, string accounttype, int[] itemsarray, object userState) {
        if ((this.doMyAccountItemsCountOperationCompleted == null)) {
            this.doMyAccountItemsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyAccountItemsCountOperationCompleted);
        }
        this.InvokeAsync("doMyAccountItemsCount", new object[] {
                    sessionhandle,
                    accounttype,
                    itemsarray}, this.doMyAccountItemsCountOperationCompleted, userState);
    }
    
    private void OndoMyAccountItemsCountOperationCompleted(object arg) {
        if ((this.doMyAccountItemsCountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyAccountItemsCountCompleted(this, new doMyAccountItemsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#mybilling", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("my-billing")]
    public string doMyBilling([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doMyBilling", new object[] {
                    sessionhandle});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyBilling(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyBilling", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoMyBilling(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doMyBillingAsync(string sessionhandle) {
        this.doMyBillingAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doMyBillingAsync(string sessionhandle, object userState) {
        if ((this.doMyBillingOperationCompleted == null)) {
            this.doMyBillingOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyBillingOperationCompleted);
        }
        this.InvokeAsync("doMyBilling", new object[] {
                    sessionhandle}, this.doMyBillingOperationCompleted, userState);
    }
    
    private void OndoMyBillingOperationCompleted(object arg) {
        if ((this.doMyBillingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyBillingCompleted(this, new doMyBillingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#mycontacts", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("mycontact-list")]
    public MyContactList[] doMyContact([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("auction-id-list")] int[] auctionidlist, int offset, int desc) {
        object[] results = this.Invoke("doMyContact", new object[] {
                    sessionhandle,
                    auctionidlist,
                    offset,
                    desc});
        return ((MyContactList[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyContact(string sessionhandle, int[] auctionidlist, int offset, int desc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyContact", new object[] {
                    sessionhandle,
                    auctionidlist,
                    offset,
                    desc}, callback, asyncState);
    }
    
    /// <remarks/>
    public MyContactList[] EnddoMyContact(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MyContactList[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyContactAsync(string sessionhandle, int[] auctionidlist, int offset, int desc) {
        this.doMyContactAsync(sessionhandle, auctionidlist, offset, desc, null);
    }
    
    /// <remarks/>
    public void doMyContactAsync(string sessionhandle, int[] auctionidlist, int offset, int desc, object userState) {
        if ((this.doMyContactOperationCompleted == null)) {
            this.doMyContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyContactOperationCompleted);
        }
        this.InvokeAsync("doMyContact", new object[] {
                    sessionhandle,
                    auctionidlist,
                    offset,
                    desc}, this.doMyContactOperationCompleted, userState);
    }
    
    private void OndoMyContactOperationCompleted(object arg) {
        if ((this.doMyContactCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyContactCompleted(this, new doMyContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myfeedback", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myfeedback-list")]
    public MyFeedbackListStruct2[] doMyFeedback2([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-type")] string feedbacktype, int offset, int desc, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray) {
        object[] results = this.Invoke("doMyFeedback2", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray});
        return ((MyFeedbackListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyFeedback2(string sessionhandle, string feedbacktype, int offset, int desc, int[] itemsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyFeedback2", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public MyFeedbackListStruct2[] EnddoMyFeedback2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MyFeedbackListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyFeedback2Async(string sessionhandle, string feedbacktype, int offset, int desc, int[] itemsarray) {
        this.doMyFeedback2Async(sessionhandle, feedbacktype, offset, desc, itemsarray, null);
    }
    
    /// <remarks/>
    public void doMyFeedback2Async(string sessionhandle, string feedbacktype, int offset, int desc, int[] itemsarray, object userState) {
        if ((this.doMyFeedback2OperationCompleted == null)) {
            this.doMyFeedback2OperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyFeedback2OperationCompleted);
        }
        this.InvokeAsync("doMyFeedback2", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray}, this.doMyFeedback2OperationCompleted, userState);
    }
    
    private void OndoMyFeedback2OperationCompleted(object arg) {
        if ((this.doMyFeedback2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyFeedback2Completed(this, new doMyFeedback2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#search", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("search-count")]
    public int doSearch([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("search-query")] SearchOptType searchquery, [System.Xml.Serialization.SoapElementAttribute("search-count-featured")] out int searchcountfeatured, [System.Xml.Serialization.SoapElementAttribute("search-array")] out SearchResponseType[] searcharray, [System.Xml.Serialization.SoapElementAttribute("search-excluded-words")] out string[] searchexcludedwords) {
        object[] results = this.Invoke("doSearch", new object[] {
                    sessionhandle,
                    searchquery});
        searchcountfeatured = ((int)(results[1]));
        searcharray = ((SearchResponseType[])(results[2]));
        searchexcludedwords = ((string[])(results[3]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSearch(string sessionhandle, SearchOptType searchquery, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSearch", new object[] {
                    sessionhandle,
                    searchquery}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoSearch(System.IAsyncResult asyncResult, out int searchcountfeatured, out SearchResponseType[] searcharray, out string[] searchexcludedwords) {
        object[] results = this.EndInvoke(asyncResult);
        searchcountfeatured = ((int)(results[1]));
        searcharray = ((SearchResponseType[])(results[2]));
        searchexcludedwords = ((string[])(results[3]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doSearchAsync(string sessionhandle, SearchOptType searchquery) {
        this.doSearchAsync(sessionhandle, searchquery, null);
    }
    
    /// <remarks/>
    public void doSearchAsync(string sessionhandle, SearchOptType searchquery, object userState) {
        if ((this.doSearchOperationCompleted == null)) {
            this.doSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSearchOperationCompleted);
        }
        this.InvokeAsync("doSearch", new object[] {
                    sessionhandle,
                    searchquery}, this.doSearchOperationCompleted, userState);
    }
    
    private void OndoSearchOperationCompleted(object arg) {
        if ((this.doSearchCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSearchCompleted(this, new doSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getadminuserlicdate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("get-date-value")]
    public float doGetAdminUserLicenceDate([System.Xml.Serialization.SoapElementAttribute("admin-session-handle")] string adminsessionhandle, [System.Xml.Serialization.SoapElementAttribute("user-lic-login")] string userliclogin) {
        object[] results = this.Invoke("doGetAdminUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin});
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetAdminUserLicenceDate(string adminsessionhandle, string userliclogin, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetAdminUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin}, callback, asyncState);
    }
    
    /// <remarks/>
    public float EnddoGetAdminUserLicenceDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public void doGetAdminUserLicenceDateAsync(string adminsessionhandle, string userliclogin) {
        this.doGetAdminUserLicenceDateAsync(adminsessionhandle, userliclogin, null);
    }
    
    /// <remarks/>
    public void doGetAdminUserLicenceDateAsync(string adminsessionhandle, string userliclogin, object userState) {
        if ((this.doGetAdminUserLicenceDateOperationCompleted == null)) {
            this.doGetAdminUserLicenceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetAdminUserLicenceDateOperationCompleted);
        }
        this.InvokeAsync("doGetAdminUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin}, this.doGetAdminUserLicenceDateOperationCompleted, userState);
    }
    
    private void OndoGetAdminUserLicenceDateOperationCompleted(object arg) {
        if ((this.doGetAdminUserLicenceDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetAdminUserLicenceDateCompleted(this, new doGetAdminUserLicenceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getuserlicdate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("get-date-value")]
    public float doGetUserLicenceDate([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetUserLicenceDate", new object[] {
                    sessionhandle});
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetUserLicenceDate(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetUserLicenceDate", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public float EnddoGetUserLicenceDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public void doGetUserLicenceDateAsync(string sessionhandle) {
        this.doGetUserLicenceDateAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetUserLicenceDateAsync(string sessionhandle, object userState) {
        if ((this.doGetUserLicenceDateOperationCompleted == null)) {
            this.doGetUserLicenceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetUserLicenceDateOperationCompleted);
        }
        this.InvokeAsync("doGetUserLicenceDate", new object[] {
                    sessionhandle}, this.doGetUserLicenceDateOperationCompleted, userState);
    }
    
    private void OndoGetUserLicenceDateOperationCompleted(object arg) {
        if ((this.doGetUserLicenceDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetUserLicenceDateCompleted(this, new doGetUserLicenceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#billingitem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("entry-fees")]
    public ItemBilling[] doMyBillingItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] int itemid, string option, [System.Xml.Serialization.SoapElementAttribute("ending-fees")] out ItemBilling[] endingfees) {
        object[] results = this.Invoke("doMyBillingItem", new object[] {
                    sessionhandle,
                    itemid,
                    option});
        endingfees = ((ItemBilling[])(results[1]));
        return ((ItemBilling[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyBillingItem(string sessionhandle, int itemid, string option, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyBillingItem", new object[] {
                    sessionhandle,
                    itemid,
                    option}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemBilling[] EnddoMyBillingItem(System.IAsyncResult asyncResult, out ItemBilling[] endingfees) {
        object[] results = this.EndInvoke(asyncResult);
        endingfees = ((ItemBilling[])(results[1]));
        return ((ItemBilling[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyBillingItemAsync(string sessionhandle, int itemid, string option) {
        this.doMyBillingItemAsync(sessionhandle, itemid, option, null);
    }
    
    /// <remarks/>
    public void doMyBillingItemAsync(string sessionhandle, int itemid, string option, object userState) {
        if ((this.doMyBillingItemOperationCompleted == null)) {
            this.doMyBillingItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyBillingItemOperationCompleted);
        }
        this.InvokeAsync("doMyBillingItem", new object[] {
                    sessionhandle,
                    itemid,
                    option}, this.doMyBillingItemOperationCompleted, userState);
    }
    
    private void OndoMyBillingItemOperationCompleted(object arg) {
        if ((this.doMyBillingItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyBillingItemCompleted(this, new doMyBillingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#setuserlicdate", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("set-date-value")]
    public int doSetUserLicenceDate([System.Xml.Serialization.SoapElementAttribute("admin-session-handle")] string adminsessionhandle, [System.Xml.Serialization.SoapElementAttribute("user-lic-login")] string userliclogin, [System.Xml.Serialization.SoapElementAttribute("user-lic-country")] int userliccountry, [System.Xml.Serialization.SoapElementAttribute("user-lic-date")] float userlicdate) {
        object[] results = this.Invoke("doSetUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin,
                    userliccountry,
                    userlicdate});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSetUserLicenceDate(string adminsessionhandle, string userliclogin, int userliccountry, float userlicdate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSetUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin,
                    userliccountry,
                    userlicdate}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoSetUserLicenceDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doSetUserLicenceDateAsync(string adminsessionhandle, string userliclogin, int userliccountry, float userlicdate) {
        this.doSetUserLicenceDateAsync(adminsessionhandle, userliclogin, userliccountry, userlicdate, null);
    }
    
    /// <remarks/>
    public void doSetUserLicenceDateAsync(string adminsessionhandle, string userliclogin, int userliccountry, float userlicdate, object userState) {
        if ((this.doSetUserLicenceDateOperationCompleted == null)) {
            this.doSetUserLicenceDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSetUserLicenceDateOperationCompleted);
        }
        this.InvokeAsync("doSetUserLicenceDate", new object[] {
                    adminsessionhandle,
                    userliclogin,
                    userliccountry,
                    userlicdate}, this.doSetUserLicenceDateOperationCompleted, userState);
    }
    
    private void OndoSetUserLicenceDateOperationCompleted(object arg) {
        if ((this.doSetUserLicenceDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSetUserLicenceDateCompleted(this, new doSetUserLicenceDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#biditem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("bid-price")]
    public string doBidItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("bid-it-id")] long biditid, [System.Xml.Serialization.SoapElementAttribute("bid-user-price")] float biduserprice, [System.Xml.Serialization.SoapElementAttribute("bid-quantity")] long bidquantity, [System.Xml.Serialization.SoapElementAttribute("bid-buy-now")] long bidbuynow) {
        object[] results = this.Invoke("doBidItem", new object[] {
                    sessionhandle,
                    biditid,
                    biduserprice,
                    bidquantity,
                    bidbuynow});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoBidItem(string sessionhandle, long biditid, float biduserprice, long bidquantity, long bidbuynow, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doBidItem", new object[] {
                    sessionhandle,
                    biditid,
                    biduserprice,
                    bidquantity,
                    bidbuynow}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoBidItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doBidItemAsync(string sessionhandle, long biditid, float biduserprice, long bidquantity, long bidbuynow) {
        this.doBidItemAsync(sessionhandle, biditid, biduserprice, bidquantity, bidbuynow, null);
    }
    
    /// <remarks/>
    public void doBidItemAsync(string sessionhandle, long biditid, float biduserprice, long bidquantity, long bidbuynow, object userState) {
        if ((this.doBidItemOperationCompleted == null)) {
            this.doBidItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoBidItemOperationCompleted);
        }
        this.InvokeAsync("doBidItem", new object[] {
                    sessionhandle,
                    biditid,
                    biduserprice,
                    bidquantity,
                    bidbuynow}, this.doBidItemOperationCompleted, userState);
    }
    
    private void OndoBidItemOperationCompleted(object arg) {
        if ((this.doBidItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doBidItemCompleted(this, new doBidItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#cancelbiditem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cancel-bid-value")]
    public int doCancelBidItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("cancel-item-id")] long cancelitemid, [System.Xml.Serialization.SoapElementAttribute("cancel-bids-array")] int[] cancelbidsarray, [System.Xml.Serialization.SoapElementAttribute("cancel-bids-reason")] string cancelbidsreason, [System.Xml.Serialization.SoapElementAttribute("cancel-add-to-black-list")] long canceladdtoblacklist, [System.Xml.Serialization.SoapElementAttribute("cancelled-bids")] out int[] cancelledbids, [System.Xml.Serialization.SoapElementAttribute("not-cancelled-bids")] out int[] notcancelledbids) {
        object[] results = this.Invoke("doCancelBidItem", new object[] {
                    sessionhandle,
                    cancelitemid,
                    cancelbidsarray,
                    cancelbidsreason,
                    canceladdtoblacklist});
        cancelledbids = ((int[])(results[1]));
        notcancelledbids = ((int[])(results[2]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCancelBidItem(string sessionhandle, long cancelitemid, int[] cancelbidsarray, string cancelbidsreason, long canceladdtoblacklist, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCancelBidItem", new object[] {
                    sessionhandle,
                    cancelitemid,
                    cancelbidsarray,
                    cancelbidsreason,
                    canceladdtoblacklist}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoCancelBidItem(System.IAsyncResult asyncResult, out int[] cancelledbids, out int[] notcancelledbids) {
        object[] results = this.EndInvoke(asyncResult);
        cancelledbids = ((int[])(results[1]));
        notcancelledbids = ((int[])(results[2]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doCancelBidItemAsync(string sessionhandle, long cancelitemid, int[] cancelbidsarray, string cancelbidsreason, long canceladdtoblacklist) {
        this.doCancelBidItemAsync(sessionhandle, cancelitemid, cancelbidsarray, cancelbidsreason, canceladdtoblacklist, null);
    }
    
    /// <remarks/>
    public void doCancelBidItemAsync(string sessionhandle, long cancelitemid, int[] cancelbidsarray, string cancelbidsreason, long canceladdtoblacklist, object userState) {
        if ((this.doCancelBidItemOperationCompleted == null)) {
            this.doCancelBidItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCancelBidItemOperationCompleted);
        }
        this.InvokeAsync("doCancelBidItem", new object[] {
                    sessionhandle,
                    cancelitemid,
                    cancelbidsarray,
                    cancelbidsreason,
                    canceladdtoblacklist}, this.doCancelBidItemOperationCompleted, userState);
    }
    
    private void OndoCancelBidItemOperationCompleted(object arg) {
        if ((this.doCancelBidItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCancelBidItemCompleted(this, new doCancelBidItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#changeprice", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-info")]
    public string doChangePriceItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] ref long itemid, [System.Xml.Serialization.SoapElementAttribute("new-starting-price")] float newstartingprice, [System.Xml.Serialization.SoapElementAttribute("new-reserve-price")] float newreserveprice, [System.Xml.Serialization.SoapElementAttribute("new-buy-now-price")] float newbuynowprice) {
        object[] results = this.Invoke("doChangePriceItem", new object[] {
                    sessionhandle,
                    itemid,
                    newstartingprice,
                    newreserveprice,
                    newbuynowprice});
        itemid = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoChangePriceItem(string sessionhandle, long itemid, float newstartingprice, float newreserveprice, float newbuynowprice, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doChangePriceItem", new object[] {
                    sessionhandle,
                    itemid,
                    newstartingprice,
                    newreserveprice,
                    newbuynowprice}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoChangePriceItem(System.IAsyncResult asyncResult, out long itemid) {
        object[] results = this.EndInvoke(asyncResult);
        itemid = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doChangePriceItemAsync(string sessionhandle, long itemid, float newstartingprice, float newreserveprice, float newbuynowprice) {
        this.doChangePriceItemAsync(sessionhandle, itemid, newstartingprice, newreserveprice, newbuynowprice, null);
    }
    
    /// <remarks/>
    public void doChangePriceItemAsync(string sessionhandle, long itemid, float newstartingprice, float newreserveprice, float newbuynowprice, object userState) {
        if ((this.doChangePriceItemOperationCompleted == null)) {
            this.doChangePriceItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoChangePriceItemOperationCompleted);
        }
        this.InvokeAsync("doChangePriceItem", new object[] {
                    sessionhandle,
                    itemid,
                    newstartingprice,
                    newreserveprice,
                    newbuynowprice}, this.doChangePriceItemOperationCompleted, userState);
    }
    
    private void OndoChangePriceItemOperationCompleted(object arg) {
        if ((this.doChangePriceItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doChangePriceItemCompleted(this, new doChangePriceItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#finishauction", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("finish-value")]
    public int doFinishItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("finish-item-id")] long finishitemid, [System.Xml.Serialization.SoapElementAttribute("finish-cancel-all-bids")] int finishcancelallbids, [System.Xml.Serialization.SoapElementAttribute("finish-cancel-reason")] string finishcancelreason) {
        object[] results = this.Invoke("doFinishItem", new object[] {
                    sessionhandle,
                    finishitemid,
                    finishcancelallbids,
                    finishcancelreason});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoFinishItem(string sessionhandle, long finishitemid, int finishcancelallbids, string finishcancelreason, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doFinishItem", new object[] {
                    sessionhandle,
                    finishitemid,
                    finishcancelallbids,
                    finishcancelreason}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoFinishItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doFinishItemAsync(string sessionhandle, long finishitemid, int finishcancelallbids, string finishcancelreason) {
        this.doFinishItemAsync(sessionhandle, finishitemid, finishcancelallbids, finishcancelreason, null);
    }
    
    /// <remarks/>
    public void doFinishItemAsync(string sessionhandle, long finishitemid, int finishcancelallbids, string finishcancelreason, object userState) {
        if ((this.doFinishItemOperationCompleted == null)) {
            this.doFinishItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFinishItemOperationCompleted);
        }
        this.InvokeAsync("doFinishItem", new object[] {
                    sessionhandle,
                    finishitemid,
                    finishcancelallbids,
                    finishcancelreason}, this.doFinishItemOperationCompleted, userState);
    }
    
    private void OndoFinishItemOperationCompleted(object arg) {
        if ((this.doFinishItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doFinishItemCompleted(this, new doFinishItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getitemtrans", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-info")]
    public ItemInfo doGetItemTransaction([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("item-options")] int itemoptions, [System.Xml.Serialization.SoapElementAttribute("item-cat-path")] out ItemCatList[] itemcatpath, [System.Xml.Serialization.SoapElementAttribute("item-img-list")] out ItemImageList[] itemimglist, [System.Xml.Serialization.SoapElementAttribute("bid-won-contact-info")] out ItemTransStruct[] bidwoncontactinfo, [System.Xml.Serialization.SoapElementAttribute("bid-lost-info")] out BidListStruct2[] bidlostinfo) {
        object[] results = this.Invoke("doGetItemTransaction", new object[] {
                    sessionhandle,
                    itemid,
                    itemoptions});
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        bidwoncontactinfo = ((ItemTransStruct[])(results[3]));
        bidlostinfo = ((BidListStruct2[])(results[4]));
        return ((ItemInfo)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetItemTransaction(string sessionhandle, long itemid, int itemoptions, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetItemTransaction", new object[] {
                    sessionhandle,
                    itemid,
                    itemoptions}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemInfo EnddoGetItemTransaction(System.IAsyncResult asyncResult, out ItemCatList[] itemcatpath, out ItemImageList[] itemimglist, out ItemTransStruct[] bidwoncontactinfo, out BidListStruct2[] bidlostinfo) {
        object[] results = this.EndInvoke(asyncResult);
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        bidwoncontactinfo = ((ItemTransStruct[])(results[3]));
        bidlostinfo = ((BidListStruct2[])(results[4]));
        return ((ItemInfo)(results[0]));
    }
    
    /// <remarks/>
    public void doGetItemTransactionAsync(string sessionhandle, long itemid, int itemoptions) {
        this.doGetItemTransactionAsync(sessionhandle, itemid, itemoptions, null);
    }
    
    /// <remarks/>
    public void doGetItemTransactionAsync(string sessionhandle, long itemid, int itemoptions, object userState) {
        if ((this.doGetItemTransactionOperationCompleted == null)) {
            this.doGetItemTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetItemTransactionOperationCompleted);
        }
        this.InvokeAsync("doGetItemTransaction", new object[] {
                    sessionhandle,
                    itemid,
                    itemoptions}, this.doGetItemTransactionOperationCompleted, userState);
    }
    
    private void OndoGetItemTransactionOperationCompleted(object arg) {
        if ((this.doGetItemTransactionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetItemTransactionCompleted(this, new doGetItemTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#requestcancelbid", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("request-value")]
    public int doRequestCancelBid([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("request-item-id")] long requestitemid, [System.Xml.Serialization.SoapElementAttribute("request-cancel-reason")] string requestcancelreason) {
        object[] results = this.Invoke("doRequestCancelBid", new object[] {
                    sessionhandle,
                    requestitemid,
                    requestcancelreason});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoRequestCancelBid(string sessionhandle, long requestitemid, string requestcancelreason, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doRequestCancelBid", new object[] {
                    sessionhandle,
                    requestitemid,
                    requestcancelreason}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoRequestCancelBid(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doRequestCancelBidAsync(string sessionhandle, long requestitemid, string requestcancelreason) {
        this.doRequestCancelBidAsync(sessionhandle, requestitemid, requestcancelreason, null);
    }
    
    /// <remarks/>
    public void doRequestCancelBidAsync(string sessionhandle, long requestitemid, string requestcancelreason, object userState) {
        if ((this.doRequestCancelBidOperationCompleted == null)) {
            this.doRequestCancelBidOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRequestCancelBidOperationCompleted);
        }
        this.InvokeAsync("doRequestCancelBid", new object[] {
                    sessionhandle,
                    requestitemid,
                    requestcancelreason}, this.doRequestCancelBidOperationCompleted, userState);
    }
    
    private void OndoRequestCancelBidOperationCompleted(object arg) {
        if ((this.doRequestCancelBidCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doRequestCancelBidCompleted(this, new doRequestCancelBidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#catsdatacount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cats-count")]
    public int doGetCatsDataCount([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetCatsDataCount", new object[] {
                    countryid,
                    localversion,
                    webapikey});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetCatsDataCount(int countryid, long localversion, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetCatsDataCount", new object[] {
                    countryid,
                    localversion,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetCatsDataCount(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetCatsDataCountAsync(int countryid, long localversion, string webapikey) {
        this.doGetCatsDataCountAsync(countryid, localversion, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetCatsDataCountAsync(int countryid, long localversion, string webapikey, object userState) {
        if ((this.doGetCatsDataCountOperationCompleted == null)) {
            this.doGetCatsDataCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCatsDataCountOperationCompleted);
        }
        this.InvokeAsync("doGetCatsDataCount", new object[] {
                    countryid,
                    localversion,
                    webapikey}, this.doGetCatsDataCountOperationCompleted, userState);
    }
    
    private void OndoGetCatsDataCountOperationCompleted(object arg) {
        if ((this.doGetCatsDataCountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetCatsDataCountCompleted(this, new doGetCatsDataCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#myfeedbacklimit", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("myfeedback-list")]
    public MyFeedbackListStruct2[] doMyFeedback2Limit([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-type")] string feedbacktype, int offset, int desc, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray, [System.Xml.Serialization.SoapElementAttribute("package-element")] int packageelement) {
        object[] results = this.Invoke("doMyFeedback2Limit", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray,
                    packageelement});
        return ((MyFeedbackListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMyFeedback2Limit(string sessionhandle, string feedbacktype, int offset, int desc, int[] itemsarray, int packageelement, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMyFeedback2Limit", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray,
                    packageelement}, callback, asyncState);
    }
    
    /// <remarks/>
    public MyFeedbackListStruct2[] EnddoMyFeedback2Limit(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((MyFeedbackListStruct2[])(results[0]));
    }
    
    /// <remarks/>
    public void doMyFeedback2LimitAsync(string sessionhandle, string feedbacktype, int offset, int desc, int[] itemsarray, int packageelement) {
        this.doMyFeedback2LimitAsync(sessionhandle, feedbacktype, offset, desc, itemsarray, packageelement, null);
    }
    
    /// <remarks/>
    public void doMyFeedback2LimitAsync(string sessionhandle, string feedbacktype, int offset, int desc, int[] itemsarray, int packageelement, object userState) {
        if ((this.doMyFeedback2LimitOperationCompleted == null)) {
            this.doMyFeedback2LimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMyFeedback2LimitOperationCompleted);
        }
        this.InvokeAsync("doMyFeedback2Limit", new object[] {
                    sessionhandle,
                    feedbacktype,
                    offset,
                    desc,
                    itemsarray,
                    packageelement}, this.doMyFeedback2LimitOperationCompleted, userState);
    }
    
    private void OndoMyFeedback2LimitOperationCompleted(object arg) {
        if ((this.doMyFeedback2LimitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMyFeedback2LimitCompleted(this, new doMyFeedback2LimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getcountry", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("country-array")]
    public CountryInfoType[] doGetCountries([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetCountries", new object[] {
                    countrycode,
                    webapikey});
        return ((CountryInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetCountries(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetCountries", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public CountryInfoType[] EnddoGetCountries(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CountryInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetCountriesAsync(int countrycode, string webapikey) {
        this.doGetCountriesAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetCountriesAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetCountriesOperationCompleted == null)) {
            this.doGetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetCountriesOperationCompleted);
        }
        this.InvokeAsync("doGetCountries", new object[] {
                    countrycode,
                    webapikey}, this.doGetCountriesOperationCompleted, userState);
    }
    
    private void OndoGetCountriesOperationCompleted(object arg) {
        if ((this.doGetCountriesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetCountriesCompleted(this, new doGetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#gettemplates", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("templates-array")]
    public TemplateInfoType[] doGetServiceTemplates([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetServiceTemplates", new object[] {
                    countrycode,
                    webapikey});
        return ((TemplateInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetServiceTemplates(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetServiceTemplates", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public TemplateInfoType[] EnddoGetServiceTemplates(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TemplateInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetServiceTemplatesAsync(int countrycode, string webapikey) {
        this.doGetServiceTemplatesAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetServiceTemplatesAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetServiceTemplatesOperationCompleted == null)) {
            this.doGetServiceTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetServiceTemplatesOperationCompleted);
        }
        this.InvokeAsync("doGetServiceTemplates", new object[] {
                    countrycode,
                    webapikey}, this.doGetServiceTemplatesOperationCompleted, userState);
    }
    
    private void OndoGetServiceTemplatesOperationCompleted(object arg) {
        if ((this.doGetServiceTemplatesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetServiceTemplatesCompleted(this, new doGetServiceTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellformattribs", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-form-fields")]
    public SellFormType[] doGetSellFormAttribs([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] long localversion, [System.Xml.Serialization.SoapElementAttribute("cat-id")] int catid, [System.Xml.Serialization.SoapElementAttribute("ver-key")] out long verkey, [System.Xml.Serialization.SoapElementAttribute("ver-str")] out string verstr) {
        object[] results = this.Invoke("doGetSellFormAttribs", new object[] {
                    countryid,
                    webapikey,
                    localversion,
                    catid});
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellFormAttribs(int countryid, string webapikey, long localversion, int catid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellFormAttribs", new object[] {
                    countryid,
                    webapikey,
                    localversion,
                    catid}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellFormType[] EnddoGetSellFormAttribs(System.IAsyncResult asyncResult, out long verkey, out string verstr) {
        object[] results = this.EndInvoke(asyncResult);
        verkey = ((long)(results[1]));
        verstr = ((string)(results[2]));
        return ((SellFormType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellFormAttribsAsync(int countryid, string webapikey, long localversion, int catid) {
        this.doGetSellFormAttribsAsync(countryid, webapikey, localversion, catid, null);
    }
    
    /// <remarks/>
    public void doGetSellFormAttribsAsync(int countryid, string webapikey, long localversion, int catid, object userState) {
        if ((this.doGetSellFormAttribsOperationCompleted == null)) {
            this.doGetSellFormAttribsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellFormAttribsOperationCompleted);
        }
        this.InvokeAsync("doGetSellFormAttribs", new object[] {
                    countryid,
                    webapikey,
                    localversion,
                    catid}, this.doGetSellFormAttribsOperationCompleted, userState);
    }
    
    private void OndoGetSellFormAttribsOperationCompleted(object arg) {
        if ((this.doGetSellFormAttribsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellFormAttribsCompleted(this, new doGetSellFormAttribsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#feedbackmany", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("fe-results")]
    public FeedbackResultStruct[] doFeedbackMany([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedbacks-list")] FeedbackManyStruct[] feedbackslist) {
        object[] results = this.Invoke("doFeedbackMany", new object[] {
                    sessionhandle,
                    feedbackslist});
        return ((FeedbackResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoFeedbackMany(string sessionhandle, FeedbackManyStruct[] feedbackslist, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doFeedbackMany", new object[] {
                    sessionhandle,
                    feedbackslist}, callback, asyncState);
    }
    
    /// <remarks/>
    public FeedbackResultStruct[] EnddoFeedbackMany(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((FeedbackResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doFeedbackManyAsync(string sessionhandle, FeedbackManyStruct[] feedbackslist) {
        this.doFeedbackManyAsync(sessionhandle, feedbackslist, null);
    }
    
    /// <remarks/>
    public void doFeedbackManyAsync(string sessionhandle, FeedbackManyStruct[] feedbackslist, object userState) {
        if ((this.doFeedbackManyOperationCompleted == null)) {
            this.doFeedbackManyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFeedbackManyOperationCompleted);
        }
        this.InvokeAsync("doFeedbackMany", new object[] {
                    sessionhandle,
                    feedbackslist}, this.doFeedbackManyOperationCompleted, userState);
    }
    
    private void OndoFeedbackManyOperationCompleted(object arg) {
        if ((this.doFeedbackManyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doFeedbackManyCompleted(this, new doFeedbackManyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#showiteminfoext", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-list-info-ext")]
    public ItemInfoExt doShowItemInfoExt([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("get-desc")] int getdesc, [System.Xml.Serialization.SoapElementAttribute("get-image-url")] int getimageurl, [System.Xml.Serialization.SoapElementAttribute("get-attribs")] int getattribs, [System.Xml.Serialization.SoapElementAttribute("get-postage-options")] int getpostageoptions, [System.Xml.Serialization.SoapElementAttribute("get-company-info")] int getcompanyinfo, [System.Xml.Serialization.SoapElementAttribute("item-cat-path")] out ItemCatList[] itemcatpath, [System.Xml.Serialization.SoapElementAttribute("item-img-list")] out ItemImageList[] itemimglist, [System.Xml.Serialization.SoapElementAttribute("item-attrib-list")] out AttribStruct[] itemattriblist, [System.Xml.Serialization.SoapElementAttribute("item-postage-options")] out PostageStruct[] itempostageoptions, [System.Xml.Serialization.SoapElementAttribute("item-payment-options")] out ItemPaymentOptions itempaymentoptions, [System.Xml.Serialization.SoapElementAttribute("item-company-info")] out CompanyInfoStruct itemcompanyinfo) {
        object[] results = this.Invoke("doShowItemInfoExt", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl,
                    getattribs,
                    getpostageoptions,
                    getcompanyinfo});
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        itemattriblist = ((AttribStruct[])(results[3]));
        itempostageoptions = ((PostageStruct[])(results[4]));
        itempaymentoptions = ((ItemPaymentOptions)(results[5]));
        itemcompanyinfo = ((CompanyInfoStruct)(results[6]));
        return ((ItemInfoExt)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoShowItemInfoExt(string sessionhandle, long itemid, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doShowItemInfoExt", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl,
                    getattribs,
                    getpostageoptions,
                    getcompanyinfo}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemInfoExt EnddoShowItemInfoExt(System.IAsyncResult asyncResult, out ItemCatList[] itemcatpath, out ItemImageList[] itemimglist, out AttribStruct[] itemattriblist, out PostageStruct[] itempostageoptions, out ItemPaymentOptions itempaymentoptions, out CompanyInfoStruct itemcompanyinfo) {
        object[] results = this.EndInvoke(asyncResult);
        itemcatpath = ((ItemCatList[])(results[1]));
        itemimglist = ((ItemImageList[])(results[2]));
        itemattriblist = ((AttribStruct[])(results[3]));
        itempostageoptions = ((PostageStruct[])(results[4]));
        itempaymentoptions = ((ItemPaymentOptions)(results[5]));
        itemcompanyinfo = ((CompanyInfoStruct)(results[6]));
        return ((ItemInfoExt)(results[0]));
    }
    
    /// <remarks/>
    public void doShowItemInfoExtAsync(string sessionhandle, long itemid, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo) {
        this.doShowItemInfoExtAsync(sessionhandle, itemid, getdesc, getimageurl, getattribs, getpostageoptions, getcompanyinfo, null);
    }
    
    /// <remarks/>
    public void doShowItemInfoExtAsync(string sessionhandle, long itemid, int getdesc, int getimageurl, int getattribs, int getpostageoptions, int getcompanyinfo, object userState) {
        if ((this.doShowItemInfoExtOperationCompleted == null)) {
            this.doShowItemInfoExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowItemInfoExtOperationCompleted);
        }
        this.InvokeAsync("doShowItemInfoExt", new object[] {
                    sessionhandle,
                    itemid,
                    getdesc,
                    getimageurl,
                    getattribs,
                    getpostageoptions,
                    getcompanyinfo}, this.doShowItemInfoExtOperationCompleted, userState);
    }
    
    private void OndoShowItemInfoExtOperationCompleted(object arg) {
        if ((this.doShowItemInfoExtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doShowItemInfoExtCompleted(this, new doShowItemInfoExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#waitfeedcount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("feedback-count")]
    public int doGetWaitingFeedbacksCount([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetWaitingFeedbacksCount", new object[] {
                    sessionhandle});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetWaitingFeedbacksCount(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetWaitingFeedbacksCount", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetWaitingFeedbacksCount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetWaitingFeedbacksCountAsync(string sessionhandle) {
        this.doGetWaitingFeedbacksCountAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetWaitingFeedbacksCountAsync(string sessionhandle, object userState) {
        if ((this.doGetWaitingFeedbacksCountOperationCompleted == null)) {
            this.doGetWaitingFeedbacksCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetWaitingFeedbacksCountOperationCompleted);
        }
        this.InvokeAsync("doGetWaitingFeedbacksCount", new object[] {
                    sessionhandle}, this.doGetWaitingFeedbacksCountOperationCompleted, userState);
    }
    
    private void OndoGetWaitingFeedbacksCountOperationCompleted(object arg) {
        if ((this.doGetWaitingFeedbacksCountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetWaitingFeedbacksCountCompleted(this, new doGetWaitingFeedbacksCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#waitfeed", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("fe-wait-list")]
    public WaitFeedbackStruct[] doGetWaitingFeedbacks([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, int offset, [System.Xml.Serialization.SoapElementAttribute("package-size")] int packagesize) {
        object[] results = this.Invoke("doGetWaitingFeedbacks", new object[] {
                    sessionhandle,
                    offset,
                    packagesize});
        return ((WaitFeedbackStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetWaitingFeedbacks(string sessionhandle, int offset, int packagesize, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetWaitingFeedbacks", new object[] {
                    sessionhandle,
                    offset,
                    packagesize}, callback, asyncState);
    }
    
    /// <remarks/>
    public WaitFeedbackStruct[] EnddoGetWaitingFeedbacks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((WaitFeedbackStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetWaitingFeedbacksAsync(string sessionhandle, int offset, int packagesize) {
        this.doGetWaitingFeedbacksAsync(sessionhandle, offset, packagesize, null);
    }
    
    /// <remarks/>
    public void doGetWaitingFeedbacksAsync(string sessionhandle, int offset, int packagesize, object userState) {
        if ((this.doGetWaitingFeedbacksOperationCompleted == null)) {
            this.doGetWaitingFeedbacksOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetWaitingFeedbacksOperationCompleted);
        }
        this.InvokeAsync("doGetWaitingFeedbacks", new object[] {
                    sessionhandle,
                    offset,
                    packagesize}, this.doGetWaitingFeedbacksOperationCompleted, userState);
    }
    
    private void OndoGetWaitingFeedbacksOperationCompleted(object arg) {
        if ((this.doGetWaitingFeedbacksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetWaitingFeedbacksCompleted(this, new doGetWaitingFeedbacksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getblacklist", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("black-list-users")]
    public BlackListStruct[] doGetBlackListUsers([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetBlackListUsers", new object[] {
                    sessionhandle});
        return ((BlackListStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetBlackListUsers(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetBlackListUsers", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public BlackListStruct[] EnddoGetBlackListUsers(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BlackListStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetBlackListUsersAsync(string sessionhandle) {
        this.doGetBlackListUsersAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetBlackListUsersAsync(string sessionhandle, object userState) {
        if ((this.doGetBlackListUsersOperationCompleted == null)) {
            this.doGetBlackListUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetBlackListUsersOperationCompleted);
        }
        this.InvokeAsync("doGetBlackListUsers", new object[] {
                    sessionhandle}, this.doGetBlackListUsersOperationCompleted, userState);
    }
    
    private void OndoGetBlackListUsersOperationCompleted(object arg) {
        if ((this.doGetBlackListUsersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetBlackListUsersCompleted(this, new doGetBlackListUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#removefromblacklist", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("black-list-result")]
    public BlackListResStruct[] doRemoveFromBlackList([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("users-id-array")] long[] usersidarray) {
        object[] results = this.Invoke("doRemoveFromBlackList", new object[] {
                    sessionhandle,
                    usersidarray});
        return ((BlackListResStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoRemoveFromBlackList(string sessionhandle, long[] usersidarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doRemoveFromBlackList", new object[] {
                    sessionhandle,
                    usersidarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public BlackListResStruct[] EnddoRemoveFromBlackList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((BlackListResStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doRemoveFromBlackListAsync(string sessionhandle, long[] usersidarray) {
        this.doRemoveFromBlackListAsync(sessionhandle, usersidarray, null);
    }
    
    /// <remarks/>
    public void doRemoveFromBlackListAsync(string sessionhandle, long[] usersidarray, object userState) {
        if ((this.doRemoveFromBlackListOperationCompleted == null)) {
            this.doRemoveFromBlackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRemoveFromBlackListOperationCompleted);
        }
        this.InvokeAsync("doRemoveFromBlackList", new object[] {
                    sessionhandle,
                    usersidarray}, this.doRemoveFromBlackListOperationCompleted, userState);
    }
    
    private void OndoRemoveFromBlackListOperationCompleted(object arg) {
        if ((this.doRemoveFromBlackListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doRemoveFromBlackListCompleted(this, new doRemoveFromBlackListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getannouncementcats", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("service-info-cats-list")]
    public ServiceInfoCatStruct[] doGetServiceInfoCategories([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetServiceInfoCategories", new object[] {
                    countrycode,
                    webapikey});
        return ((ServiceInfoCatStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetServiceInfoCategories(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetServiceInfoCategories", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public ServiceInfoCatStruct[] EnddoGetServiceInfoCategories(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ServiceInfoCatStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetServiceInfoCategoriesAsync(int countrycode, string webapikey) {
        this.doGetServiceInfoCategoriesAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetServiceInfoCategoriesAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetServiceInfoCategoriesOperationCompleted == null)) {
            this.doGetServiceInfoCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetServiceInfoCategoriesOperationCompleted);
        }
        this.InvokeAsync("doGetServiceInfoCategories", new object[] {
                    countrycode,
                    webapikey}, this.doGetServiceInfoCategoriesOperationCompleted, userState);
    }
    
    private void OndoGetServiceInfoCategoriesOperationCompleted(object arg) {
        if ((this.doGetServiceInfoCategoriesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetServiceInfoCategoriesCompleted(this, new doGetServiceInfoCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getannouncementitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("service-info-items-list")]
    public ServiceInfoStruct[] doGetServiceInfo([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("an-cat-id")] int ancatid, [System.Xml.Serialization.SoapElementAttribute("an-it-date")] long anitdate, [System.Xml.Serialization.SoapElementAttribute("an-it-id")] int anitid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetServiceInfo", new object[] {
                    countrycode,
                    ancatid,
                    anitdate,
                    anitid,
                    webapikey});
        return ((ServiceInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetServiceInfo(int countrycode, int ancatid, long anitdate, int anitid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetServiceInfo", new object[] {
                    countrycode,
                    ancatid,
                    anitdate,
                    anitid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public ServiceInfoStruct[] EnddoGetServiceInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ServiceInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetServiceInfoAsync(int countrycode, int ancatid, long anitdate, int anitid, string webapikey) {
        this.doGetServiceInfoAsync(countrycode, ancatid, anitdate, anitid, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetServiceInfoAsync(int countrycode, int ancatid, long anitdate, int anitid, string webapikey, object userState) {
        if ((this.doGetServiceInfoOperationCompleted == null)) {
            this.doGetServiceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetServiceInfoOperationCompleted);
        }
        this.InvokeAsync("doGetServiceInfo", new object[] {
                    countrycode,
                    ancatid,
                    anitdate,
                    anitid,
                    webapikey}, this.doGetServiceInfoOperationCompleted, userState);
    }
    
    private void OndoGetServiceInfoOperationCompleted(object arg) {
        if ((this.doGetServiceInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetServiceInfoCompleted(this, new doGetServiceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getstatesinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("states-info-array")]
    public StateInfoStruct[] doGetStatesInfo([System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey) {
        object[] results = this.Invoke("doGetStatesInfo", new object[] {
                    countrycode,
                    webapikey});
        return ((StateInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetStatesInfo(int countrycode, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetStatesInfo", new object[] {
                    countrycode,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public StateInfoStruct[] EnddoGetStatesInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((StateInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetStatesInfoAsync(int countrycode, string webapikey) {
        this.doGetStatesInfoAsync(countrycode, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetStatesInfoAsync(int countrycode, string webapikey, object userState) {
        if ((this.doGetStatesInfoOperationCompleted == null)) {
            this.doGetStatesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetStatesInfoOperationCompleted);
        }
        this.InvokeAsync("doGetStatesInfo", new object[] {
                    countrycode,
                    webapikey}, this.doGetStatesInfoOperationCompleted, userState);
    }
    
    private void OndoGetStatesInfoOperationCompleted(object arg) {
        if ((this.doGetStatesInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetStatesInfoCompleted(this, new doGetStatesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#shopcatsdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("shop-cats-list")]
    public CatInfoType[] doGetShopCatsData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetShopCatsData", new object[] {
                    sessionhandle});
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetShopCatsData(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetShopCatsData", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public CatInfoType[] EnddoGetShopCatsData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CatInfoType[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetShopCatsDataAsync(string sessionhandle) {
        this.doGetShopCatsDataAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetShopCatsDataAsync(string sessionhandle, object userState) {
        if ((this.doGetShopCatsDataOperationCompleted == null)) {
            this.doGetShopCatsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetShopCatsDataOperationCompleted);
        }
        this.InvokeAsync("doGetShopCatsData", new object[] {
                    sessionhandle}, this.doGetShopCatsDataOperationCompleted, userState);
    }
    
    private void OndoGetShopCatsDataOperationCompleted(object arg) {
        if ((this.doGetShopCatsDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetShopCatsDataCompleted(this, new doGetShopCatsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#checkexternalkey", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public int doCheckExternalKey([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("hash-key")] string hashkey) {
        object[] results = this.Invoke("doCheckExternalKey", new object[] {
                    webapikey,
                    userid,
                    itemid,
                    hashkey});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCheckExternalKey(string webapikey, long userid, long itemid, string hashkey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCheckExternalKey", new object[] {
                    webapikey,
                    userid,
                    itemid,
                    hashkey}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoCheckExternalKey(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doCheckExternalKeyAsync(string webapikey, long userid, long itemid, string hashkey) {
        this.doCheckExternalKeyAsync(webapikey, userid, itemid, hashkey, null);
    }
    
    /// <remarks/>
    public void doCheckExternalKeyAsync(string webapikey, long userid, long itemid, string hashkey, object userState) {
        if ((this.doCheckExternalKeyOperationCompleted == null)) {
            this.doCheckExternalKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCheckExternalKeyOperationCompleted);
        }
        this.InvokeAsync("doCheckExternalKey", new object[] {
                    webapikey,
                    userid,
                    itemid,
                    hashkey}, this.doCheckExternalKeyOperationCompleted, userState);
    }
    
    private void OndoCheckExternalKeyOperationCompleted(object arg) {
        if ((this.doCheckExternalKeyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCheckExternalKeyCompleted(this, new doCheckExternalKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sellshopagain", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("items-sell-again")]
    public StructSellAgain[] doSellSomeAgainInShop([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("sell-items-array")] long[] sellitemsarray, [System.Xml.Serialization.SoapElementAttribute("sell-starting-time")] long sellstartingtime, [System.Xml.Serialization.SoapElementAttribute("sell-shop-duration")] int sellshopduration, [System.Xml.Serialization.SoapElementAttribute("sell-shop-options")] int sellshopoptions, [System.Xml.Serialization.SoapElementAttribute("sell-prolong-options")] int sellprolongoptions, [System.Xml.Serialization.SoapElementAttribute("sell-shop-category")] long sellshopcategory, [System.Xml.Serialization.SoapElementAttribute("items-sell-failed")] out StructSellFailed[] itemssellfailed, [System.Xml.Serialization.SoapElementAttribute("items-sell-not-found")] out long[] itemssellnotfound) {
        object[] results = this.Invoke("doSellSomeAgainInShop", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellshopduration,
                    sellshopoptions,
                    sellprolongoptions,
                    sellshopcategory});
        itemssellfailed = ((StructSellFailed[])(results[1]));
        itemssellnotfound = ((long[])(results[2]));
        return ((StructSellAgain[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSellSomeAgainInShop(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellshopduration, int sellshopoptions, int sellprolongoptions, long sellshopcategory, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSellSomeAgainInShop", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellshopduration,
                    sellshopoptions,
                    sellprolongoptions,
                    sellshopcategory}, callback, asyncState);
    }
    
    /// <remarks/>
    public StructSellAgain[] EnddoSellSomeAgainInShop(System.IAsyncResult asyncResult, out StructSellFailed[] itemssellfailed, out long[] itemssellnotfound) {
        object[] results = this.EndInvoke(asyncResult);
        itemssellfailed = ((StructSellFailed[])(results[1]));
        itemssellnotfound = ((long[])(results[2]));
        return ((StructSellAgain[])(results[0]));
    }
    
    /// <remarks/>
    public void doSellSomeAgainInShopAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellshopduration, int sellshopoptions, int sellprolongoptions, long sellshopcategory) {
        this.doSellSomeAgainInShopAsync(sessionhandle, sellitemsarray, sellstartingtime, sellshopduration, sellshopoptions, sellprolongoptions, sellshopcategory, null);
    }
    
    /// <remarks/>
    public void doSellSomeAgainInShopAsync(string sessionhandle, long[] sellitemsarray, long sellstartingtime, int sellshopduration, int sellshopoptions, int sellprolongoptions, long sellshopcategory, object userState) {
        if ((this.doSellSomeAgainInShopOperationCompleted == null)) {
            this.doSellSomeAgainInShopOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSellSomeAgainInShopOperationCompleted);
        }
        this.InvokeAsync("doSellSomeAgainInShop", new object[] {
                    sessionhandle,
                    sellitemsarray,
                    sellstartingtime,
                    sellshopduration,
                    sellshopoptions,
                    sellprolongoptions,
                    sellshopcategory}, this.doSellSomeAgainInShopOperationCompleted, userState);
    }
    
    private void OndoSellSomeAgainInShopOperationCompleted(object arg) {
        if ((this.doSellSomeAgainInShopCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSellSomeAgainInShopCompleted(this, new doSellSomeAgainInShopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsupersellerstatus", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-ss-status")]
    public int doGetSuperSellerStatus([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid) {
        object[] results = this.Invoke("doGetSuperSellerStatus", new object[] {
                    webapikey,
                    userid});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSuperSellerStatus(string webapikey, long userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSuperSellerStatus", new object[] {
                    webapikey,
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetSuperSellerStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetSuperSellerStatusAsync(string webapikey, long userid) {
        this.doGetSuperSellerStatusAsync(webapikey, userid, null);
    }
    
    /// <remarks/>
    public void doGetSuperSellerStatusAsync(string webapikey, long userid, object userState) {
        if ((this.doGetSuperSellerStatusOperationCompleted == null)) {
            this.doGetSuperSellerStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSuperSellerStatusOperationCompleted);
        }
        this.InvokeAsync("doGetSuperSellerStatus", new object[] {
                    webapikey,
                    userid}, this.doGetSuperSellerStatusOperationCompleted, userState);
    }
    
    private void OndoGetSuperSellerStatusOperationCompleted(object arg) {
        if ((this.doGetSuperSellerStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSuperSellerStatusCompleted(this, new doGetSuperSellerStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getmydata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-data")]
    public UserDataStruct doGetMyData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("invoice-data")] out InvoiceDataStruct invoicedata, [System.Xml.Serialization.SoapElementAttribute("company-extra-data")] out CompanyExtraDataStruct companyextradata, [System.Xml.Serialization.SoapElementAttribute("company-second-address")] out CompanySecondAddressStruct companysecondaddress) {
        object[] results = this.Invoke("doGetMyData", new object[] {
                    sessionhandle});
        invoicedata = ((InvoiceDataStruct)(results[1]));
        companyextradata = ((CompanyExtraDataStruct)(results[2]));
        companysecondaddress = ((CompanySecondAddressStruct)(results[3]));
        return ((UserDataStruct)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetMyData(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetMyData", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserDataStruct EnddoGetMyData(System.IAsyncResult asyncResult, out InvoiceDataStruct invoicedata, out CompanyExtraDataStruct companyextradata, out CompanySecondAddressStruct companysecondaddress) {
        object[] results = this.EndInvoke(asyncResult);
        invoicedata = ((InvoiceDataStruct)(results[1]));
        companyextradata = ((CompanyExtraDataStruct)(results[2]));
        companysecondaddress = ((CompanySecondAddressStruct)(results[3]));
        return ((UserDataStruct)(results[0]));
    }
    
    /// <remarks/>
    public void doGetMyDataAsync(string sessionhandle) {
        this.doGetMyDataAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetMyDataAsync(string sessionhandle, object userState) {
        if ((this.doGetMyDataOperationCompleted == null)) {
            this.doGetMyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyDataOperationCompleted);
        }
        this.InvokeAsync("doGetMyData", new object[] {
                    sessionhandle}, this.doGetMyDataOperationCompleted, userState);
    }
    
    private void OndoGetMyDataOperationCompleted(object arg) {
        if ((this.doGetMyDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetMyDataCompleted(this, new doGetMyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#internalistorechange", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public int doInternalIStoreChange([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid, [System.Xml.Serialization.SoapElementAttribute("istore-id")] long istoreid, [System.Xml.Serialization.SoapElementAttribute("action-type")] string actiontype, [System.Xml.Serialization.SoapElementAttribute("action-date")] long actiondate, [System.Xml.Serialization.SoapElementAttribute("valid-date")] long validdate) {
        object[] results = this.Invoke("doInternalIStoreChange", new object[] {
                    webapikey,
                    userid,
                    istoreid,
                    actiontype,
                    actiondate,
                    validdate});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoInternalIStoreChange(string webapikey, long userid, long istoreid, string actiontype, long actiondate, long validdate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doInternalIStoreChange", new object[] {
                    webapikey,
                    userid,
                    istoreid,
                    actiontype,
                    actiondate,
                    validdate}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoInternalIStoreChange(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doInternalIStoreChangeAsync(string webapikey, long userid, long istoreid, string actiontype, long actiondate, long validdate) {
        this.doInternalIStoreChangeAsync(webapikey, userid, istoreid, actiontype, actiondate, validdate, null);
    }
    
    /// <remarks/>
    public void doInternalIStoreChangeAsync(string webapikey, long userid, long istoreid, string actiontype, long actiondate, long validdate, object userState) {
        if ((this.doInternalIStoreChangeOperationCompleted == null)) {
            this.doInternalIStoreChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoInternalIStoreChangeOperationCompleted);
        }
        this.InvokeAsync("doInternalIStoreChange", new object[] {
                    webapikey,
                    userid,
                    istoreid,
                    actiontype,
                    actiondate,
                    validdate}, this.doInternalIStoreChangeOperationCompleted, userState);
    }
    
    private void OndoInternalIStoreChangeOperationCompleted(object arg) {
        if ((this.doInternalIStoreChangeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doInternalIStoreChangeCompleted(this, new doInternalIStoreChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetfavouritesellers", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("s-favourite-sellers-list")]
    public FavouritesSellersStruct[] doGetFavouriteSellers([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetFavouriteSellers", new object[] {
                    sessionhandle});
        return ((FavouritesSellersStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetFavouriteSellers(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetFavouriteSellers", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public FavouritesSellersStruct[] EnddoGetFavouriteSellers(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((FavouritesSellersStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetFavouriteSellersAsync(string sessionhandle) {
        this.doGetFavouriteSellersAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetFavouriteSellersAsync(string sessionhandle, object userState) {
        if ((this.doGetFavouriteSellersOperationCompleted == null)) {
            this.doGetFavouriteSellersOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFavouriteSellersOperationCompleted);
        }
        this.InvokeAsync("doGetFavouriteSellers", new object[] {
                    sessionhandle}, this.doGetFavouriteSellersOperationCompleted, userState);
    }
    
    private void OndoGetFavouriteSellersOperationCompleted(object arg) {
        if ((this.doGetFavouriteSellersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetFavouriteSellersCompleted(this, new doGetFavouriteSellersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetfavouritecategories", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("s-favourite-categories-list")]
    public FavouritesCategoriesStruct[] doGetFavouriteCategories([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle) {
        object[] results = this.Invoke("doGetFavouriteCategories", new object[] {
                    sessionhandle});
        return ((FavouritesCategoriesStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetFavouriteCategories(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetFavouriteCategories", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public FavouritesCategoriesStruct[] EnddoGetFavouriteCategories(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((FavouritesCategoriesStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetFavouriteCategoriesAsync(string sessionhandle) {
        this.doGetFavouriteCategoriesAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetFavouriteCategoriesAsync(string sessionhandle, object userState) {
        if ((this.doGetFavouriteCategoriesOperationCompleted == null)) {
            this.doGetFavouriteCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetFavouriteCategoriesOperationCompleted);
        }
        this.InvokeAsync("doGetFavouriteCategories", new object[] {
                    sessionhandle}, this.doGetFavouriteCategoriesOperationCompleted, userState);
    }
    
    private void OndoGetFavouriteCategoriesOperationCompleted(object arg) {
        if ((this.doGetFavouriteCategoriesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetFavouriteCategoriesCompleted(this, new doGetFavouriteCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetitemsimages", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("get_items_images_result")]
    public ItemImagesStruct[] doGetItemsImages([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-array")] ItemGetImage[] itemsarray, [System.Xml.Serialization.SoapElementAttribute("image-type")] int imagetype) {
        object[] results = this.Invoke("doGetItemsImages", new object[] {
                    sessionhandle,
                    itemsarray,
                    imagetype});
        return ((ItemImagesStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetItemsImages(string sessionhandle, ItemGetImage[] itemsarray, int imagetype, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetItemsImages", new object[] {
                    sessionhandle,
                    itemsarray,
                    imagetype}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemImagesStruct[] EnddoGetItemsImages(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ItemImagesStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetItemsImagesAsync(string sessionhandle, ItemGetImage[] itemsarray, int imagetype) {
        this.doGetItemsImagesAsync(sessionhandle, itemsarray, imagetype, null);
    }
    
    /// <remarks/>
    public void doGetItemsImagesAsync(string sessionhandle, ItemGetImage[] itemsarray, int imagetype, object userState) {
        if ((this.doGetItemsImagesOperationCompleted == null)) {
            this.doGetItemsImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetItemsImagesOperationCompleted);
        }
        this.InvokeAsync("doGetItemsImages", new object[] {
                    sessionhandle,
                    itemsarray,
                    imagetype}, this.doGetItemsImagesOperationCompleted, userState);
    }
    
    private void OndoGetItemsImagesOperationCompleted(object arg) {
        if ((this.doGetItemsImagesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetItemsImagesCompleted(this, new doGetItemsImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsofdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sof-data")]
    public SofDataStruct[] doGetShipmentOptionsFormData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("sof-user-type")] string sofusertype, [System.Xml.Serialization.SoapElementAttribute("sof-items-id")] long[] sofitemsid) {
        object[] results = this.Invoke("doGetShipmentOptionsFormData", new object[] {
                    sessionhandle,
                    sofusertype,
                    sofitemsid});
        return ((SofDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetShipmentOptionsFormData(string sessionhandle, string sofusertype, long[] sofitemsid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetShipmentOptionsFormData", new object[] {
                    sessionhandle,
                    sofusertype,
                    sofitemsid}, callback, asyncState);
    }
    
    /// <remarks/>
    public SofDataStruct[] EnddoGetShipmentOptionsFormData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SofDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetShipmentOptionsFormDataAsync(string sessionhandle, string sofusertype, long[] sofitemsid) {
        this.doGetShipmentOptionsFormDataAsync(sessionhandle, sofusertype, sofitemsid, null);
    }
    
    /// <remarks/>
    public void doGetShipmentOptionsFormDataAsync(string sessionhandle, string sofusertype, long[] sofitemsid, object userState) {
        if ((this.doGetShipmentOptionsFormDataOperationCompleted == null)) {
            this.doGetShipmentOptionsFormDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetShipmentOptionsFormDataOperationCompleted);
        }
        this.InvokeAsync("doGetShipmentOptionsFormData", new object[] {
                    sessionhandle,
                    sofusertype,
                    sofitemsid}, this.doGetShipmentOptionsFormDataOperationCompleted, userState);
    }
    
    private void OndoGetShipmentOptionsFormDataOperationCompleted(object arg) {
        if ((this.doGetShipmentOptionsFormDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetShipmentOptionsFormDataCompleted(this, new doGetShipmentOptionsFormDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetspecialitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("s-special-list")]
    public SpecialAuctionStruct[] doGetSpecialItems([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("special-type")] int specialtype, [System.Xml.Serialization.SoapElementAttribute("special-group")] int specialgroup, int offset) {
        object[] results = this.Invoke("doGetSpecialItems", new object[] {
                    sessionhandle,
                    specialtype,
                    specialgroup,
                    offset});
        return ((SpecialAuctionStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSpecialItems(string sessionhandle, int specialtype, int specialgroup, int offset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSpecialItems", new object[] {
                    sessionhandle,
                    specialtype,
                    specialgroup,
                    offset}, callback, asyncState);
    }
    
    /// <remarks/>
    public SpecialAuctionStruct[] EnddoGetSpecialItems(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SpecialAuctionStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSpecialItemsAsync(string sessionhandle, int specialtype, int specialgroup, int offset) {
        this.doGetSpecialItemsAsync(sessionhandle, specialtype, specialgroup, offset, null);
    }
    
    /// <remarks/>
    public void doGetSpecialItemsAsync(string sessionhandle, int specialtype, int specialgroup, int offset, object userState) {
        if ((this.doGetSpecialItemsOperationCompleted == null)) {
            this.doGetSpecialItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSpecialItemsOperationCompleted);
        }
        this.InvokeAsync("doGetSpecialItems", new object[] {
                    sessionhandle,
                    specialtype,
                    specialgroup,
                    offset}, this.doGetSpecialItemsOperationCompleted, userState);
    }
    
    private void OndoGetSpecialItemsOperationCompleted(object arg) {
        if ((this.doGetSpecialItemsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSpecialItemsCompleted(this, new doGetSpecialItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doAddToBlackList", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-black-list-results-arr")]
    public UserBlackListAddResultStruct[] doAddToBlackList([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("users-black-list-array")] UserBlackListStruct[] usersblacklistarray) {
        object[] results = this.Invoke("doAddToBlackList", new object[] {
                    sessionhandle,
                    usersblacklistarray});
        return ((UserBlackListAddResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoAddToBlackList(string sessionhandle, UserBlackListStruct[] usersblacklistarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doAddToBlackList", new object[] {
                    sessionhandle,
                    usersblacklistarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserBlackListAddResultStruct[] EnddoAddToBlackList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserBlackListAddResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doAddToBlackListAsync(string sessionhandle, UserBlackListStruct[] usersblacklistarray) {
        this.doAddToBlackListAsync(sessionhandle, usersblacklistarray, null);
    }
    
    /// <remarks/>
    public void doAddToBlackListAsync(string sessionhandle, UserBlackListStruct[] usersblacklistarray, object userState) {
        if ((this.doAddToBlackListOperationCompleted == null)) {
            this.doAddToBlackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAddToBlackListOperationCompleted);
        }
        this.InvokeAsync("doAddToBlackList", new object[] {
                    sessionhandle,
                    usersblacklistarray}, this.doAddToBlackListOperationCompleted, userState);
    }
    
    private void OndoAddToBlackListOperationCompleted(object arg) {
        if ((this.doAddToBlackListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doAddToBlackListCompleted(this, new doAddToBlackListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getpostbuydata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("items-post-buy-data")]
    public ItemPostBuyDataStruct[] doGetPostBuyData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-array")] int[] itemsarray) {
        object[] results = this.Invoke("doGetPostBuyData", new object[] {
                    sessionhandle,
                    itemsarray});
        return ((ItemPostBuyDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetPostBuyData(string sessionhandle, int[] itemsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetPostBuyData", new object[] {
                    sessionhandle,
                    itemsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemPostBuyDataStruct[] EnddoGetPostBuyData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ItemPostBuyDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetPostBuyDataAsync(string sessionhandle, int[] itemsarray) {
        this.doGetPostBuyDataAsync(sessionhandle, itemsarray, null);
    }
    
    /// <remarks/>
    public void doGetPostBuyDataAsync(string sessionhandle, int[] itemsarray, object userState) {
        if ((this.doGetPostBuyDataOperationCompleted == null)) {
            this.doGetPostBuyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPostBuyDataOperationCompleted);
        }
        this.InvokeAsync("doGetPostBuyData", new object[] {
                    sessionhandle,
                    itemsarray}, this.doGetPostBuyDataOperationCompleted, userState);
    }
    
    private void OndoGetPostBuyDataOperationCompleted(object arg) {
        if ((this.doGetPostBuyDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetPostBuyDataCompleted(this, new doGetPostBuyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doCancelRefundForms", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cancel-refund-forms-results-arr")]
    public CancelRefundFormResultStruct[] doCancelRefundForms([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("refund-cancel-data-arr")] CancelRefundDataStruct[] refundcanceldataarr) {
        object[] results = this.Invoke("doCancelRefundForms", new object[] {
                    sessionhandle,
                    refundcanceldataarr});
        return ((CancelRefundFormResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCancelRefundForms(string sessionhandle, CancelRefundDataStruct[] refundcanceldataarr, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCancelRefundForms", new object[] {
                    sessionhandle,
                    refundcanceldataarr}, callback, asyncState);
    }
    
    /// <remarks/>
    public CancelRefundFormResultStruct[] EnddoCancelRefundForms(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CancelRefundFormResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doCancelRefundFormsAsync(string sessionhandle, CancelRefundDataStruct[] refundcanceldataarr) {
        this.doCancelRefundFormsAsync(sessionhandle, refundcanceldataarr, null);
    }
    
    /// <remarks/>
    public void doCancelRefundFormsAsync(string sessionhandle, CancelRefundDataStruct[] refundcanceldataarr, object userState) {
        if ((this.doCancelRefundFormsOperationCompleted == null)) {
            this.doCancelRefundFormsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCancelRefundFormsOperationCompleted);
        }
        this.InvokeAsync("doCancelRefundForms", new object[] {
                    sessionhandle,
                    refundcanceldataarr}, this.doCancelRefundFormsOperationCompleted, userState);
    }
    
    private void OndoCancelRefundFormsOperationCompleted(object arg) {
        if ((this.doCancelRefundFormsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCancelRefundFormsCompleted(this, new doCancelRefundFormsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsessionhandleforwidget", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("session-handle")]
    public string doGetSessionHandleForWidget([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode, [System.Xml.Serialization.SoapElementAttribute("server-time")] out long servertime) {
        object[] results = this.Invoke("doGetSessionHandleForWidget", new object[] {
                    webapikey,
                    countrycode});
        servertime = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSessionHandleForWidget(string webapikey, int countrycode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSessionHandleForWidget", new object[] {
                    webapikey,
                    countrycode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoGetSessionHandleForWidget(System.IAsyncResult asyncResult, out long servertime) {
        object[] results = this.EndInvoke(asyncResult);
        servertime = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doGetSessionHandleForWidgetAsync(string webapikey, int countrycode) {
        this.doGetSessionHandleForWidgetAsync(webapikey, countrycode, null);
    }
    
    /// <remarks/>
    public void doGetSessionHandleForWidgetAsync(string webapikey, int countrycode, object userState) {
        if ((this.doGetSessionHandleForWidgetOperationCompleted == null)) {
            this.doGetSessionHandleForWidgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSessionHandleForWidgetOperationCompleted);
        }
        this.InvokeAsync("doGetSessionHandleForWidget", new object[] {
                    webapikey,
                    countrycode}, this.doGetSessionHandleForWidgetOperationCompleted, userState);
    }
    
    private void OndoGetSessionHandleForWidgetOperationCompleted(object arg) {
        if ((this.doGetSessionHandleForWidgetCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSessionHandleForWidgetCompleted(this, new doGetSessionHandleForWidgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doCancelRefundWarnings", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("cancel-refund-warnings-results-arr")]
    public CancelRefundWarningResultStruct[] doCancelRefundWarnings([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("cancel-refund-warnings-data-arr")] CancelRefundWarningStruct[] cancelrefundwarningsdataarr) {
        object[] results = this.Invoke("doCancelRefundWarnings", new object[] {
                    sessionhandle,
                    cancelrefundwarningsdataarr});
        return ((CancelRefundWarningResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoCancelRefundWarnings(string sessionhandle, CancelRefundWarningStruct[] cancelrefundwarningsdataarr, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doCancelRefundWarnings", new object[] {
                    sessionhandle,
                    cancelrefundwarningsdataarr}, callback, asyncState);
    }
    
    /// <remarks/>
    public CancelRefundWarningResultStruct[] EnddoCancelRefundWarnings(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CancelRefundWarningResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doCancelRefundWarningsAsync(string sessionhandle, CancelRefundWarningStruct[] cancelrefundwarningsdataarr) {
        this.doCancelRefundWarningsAsync(sessionhandle, cancelrefundwarningsdataarr, null);
    }
    
    /// <remarks/>
    public void doCancelRefundWarningsAsync(string sessionhandle, CancelRefundWarningStruct[] cancelrefundwarningsdataarr, object userState) {
        if ((this.doCancelRefundWarningsOperationCompleted == null)) {
            this.doCancelRefundWarningsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCancelRefundWarningsOperationCompleted);
        }
        this.InvokeAsync("doCancelRefundWarnings", new object[] {
                    sessionhandle,
                    cancelrefundwarningsdataarr}, this.doCancelRefundWarningsOperationCompleted, userState);
    }
    
    private void OndoCancelRefundWarningsOperationCompleted(object arg) {
        if ((this.doCancelRefundWarningsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doCancelRefundWarningsCompleted(this, new doCancelRefundWarningsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doInternalSendMessage", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public int doInternalSendMessage([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("user-id")] int userid, int mail_template_id, [System.Xml.Serialization.SoapElementAttribute("array-of-additional-data")] string[] arrayofadditionaldata) {
        object[] results = this.Invoke("doInternalSendMessage", new object[] {
                    sessionhandle,
                    userid,
                    mail_template_id,
                    arrayofadditionaldata});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoInternalSendMessage(string sessionhandle, int userid, int mail_template_id, string[] arrayofadditionaldata, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doInternalSendMessage", new object[] {
                    sessionhandle,
                    userid,
                    mail_template_id,
                    arrayofadditionaldata}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoInternalSendMessage(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doInternalSendMessageAsync(string sessionhandle, int userid, int mail_template_id, string[] arrayofadditionaldata) {
        this.doInternalSendMessageAsync(sessionhandle, userid, mail_template_id, arrayofadditionaldata, null);
    }
    
    /// <remarks/>
    public void doInternalSendMessageAsync(string sessionhandle, int userid, int mail_template_id, string[] arrayofadditionaldata, object userState) {
        if ((this.doInternalSendMessageOperationCompleted == null)) {
            this.doInternalSendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoInternalSendMessageOperationCompleted);
        }
        this.InvokeAsync("doInternalSendMessage", new object[] {
                    sessionhandle,
                    userid,
                    mail_template_id,
                    arrayofadditionaldata}, this.doInternalSendMessageOperationCompleted, userState);
    }
    
    private void OndoInternalSendMessageOperationCompleted(object arg) {
        if ((this.doInternalSendMessageCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doInternalSendMessageCompleted(this, new doInternalSendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doGetRefundTransactions", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("refund-forms-count")]
    public int doGetRefundTransactions([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, int offset, int limit, [System.Xml.Serialization.SoapElementAttribute("refund-forms-list")] out RefundFormDataStruct[] refundformslist) {
        object[] results = this.Invoke("doGetRefundTransactions", new object[] {
                    sessionhandle,
                    offset,
                    limit});
        refundformslist = ((RefundFormDataStruct[])(results[1]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetRefundTransactions(string sessionhandle, int offset, int limit, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetRefundTransactions", new object[] {
                    sessionhandle,
                    offset,
                    limit}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetRefundTransactions(System.IAsyncResult asyncResult, out RefundFormDataStruct[] refundformslist) {
        object[] results = this.EndInvoke(asyncResult);
        refundformslist = ((RefundFormDataStruct[])(results[1]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetRefundTransactionsAsync(string sessionhandle, int offset, int limit) {
        this.doGetRefundTransactionsAsync(sessionhandle, offset, limit, null);
    }
    
    /// <remarks/>
    public void doGetRefundTransactionsAsync(string sessionhandle, int offset, int limit, object userState) {
        if ((this.doGetRefundTransactionsOperationCompleted == null)) {
            this.doGetRefundTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetRefundTransactionsOperationCompleted);
        }
        this.InvokeAsync("doGetRefundTransactions", new object[] {
                    sessionhandle,
                    offset,
                    limit}, this.doGetRefundTransactionsOperationCompleted, userState);
    }
    
    private void OndoGetRefundTransactionsOperationCompleted(object arg) {
        if ((this.doGetRefundTransactionsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetRefundTransactionsCompleted(this, new doGetRefundTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doSendReminderMessages", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("send-reminder-messages-results-arr")]
    public SendReminderMessageResultStruct[] doSendReminderMessages([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("send-reminder-messages-data-arr")] SendReminderMessageStruct[] sendremindermessagesdataarr) {
        object[] results = this.Invoke("doSendReminderMessages", new object[] {
                    sessionhandle,
                    sendremindermessagesdataarr});
        return ((SendReminderMessageResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSendReminderMessages(string sessionhandle, SendReminderMessageStruct[] sendremindermessagesdataarr, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSendReminderMessages", new object[] {
                    sessionhandle,
                    sendremindermessagesdataarr}, callback, asyncState);
    }
    
    /// <remarks/>
    public SendReminderMessageResultStruct[] EnddoSendReminderMessages(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SendReminderMessageResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doSendReminderMessagesAsync(string sessionhandle, SendReminderMessageStruct[] sendremindermessagesdataarr) {
        this.doSendReminderMessagesAsync(sessionhandle, sendremindermessagesdataarr, null);
    }
    
    /// <remarks/>
    public void doSendReminderMessagesAsync(string sessionhandle, SendReminderMessageStruct[] sendremindermessagesdataarr, object userState) {
        if ((this.doSendReminderMessagesOperationCompleted == null)) {
            this.doSendReminderMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSendReminderMessagesOperationCompleted);
        }
        this.InvokeAsync("doSendReminderMessages", new object[] {
                    sessionhandle,
                    sendremindermessagesdataarr}, this.doSendReminderMessagesOperationCompleted, userState);
    }
    
    private void OndoSendReminderMessagesOperationCompleted(object arg) {
        if ((this.doSendReminderMessagesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSendReminderMessagesCompleted(this, new doSendReminderMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doRemoveFromWatchList", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("watch-list-result")]
    public ItemRemoveWatchStruct[] doRemoveFromWatchList([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray) {
        object[] results = this.Invoke("doRemoveFromWatchList", new object[] {
                    sessionhandle,
                    itemsidarray});
        return ((ItemRemoveWatchStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoRemoveFromWatchList(string sessionhandle, long[] itemsidarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doRemoveFromWatchList", new object[] {
                    sessionhandle,
                    itemsidarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public ItemRemoveWatchStruct[] EnddoRemoveFromWatchList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ItemRemoveWatchStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doRemoveFromWatchListAsync(string sessionhandle, long[] itemsidarray) {
        this.doRemoveFromWatchListAsync(sessionhandle, itemsidarray, null);
    }
    
    /// <remarks/>
    public void doRemoveFromWatchListAsync(string sessionhandle, long[] itemsidarray, object userState) {
        if ((this.doRemoveFromWatchListOperationCompleted == null)) {
            this.doRemoveFromWatchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRemoveFromWatchListOperationCompleted);
        }
        this.InvokeAsync("doRemoveFromWatchList", new object[] {
                    sessionhandle,
                    itemsidarray}, this.doRemoveFromWatchListOperationCompleted, userState);
    }
    
    private void OndoRemoveFromWatchListOperationCompleted(object arg) {
        if ((this.doRemoveFromWatchListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doRemoveFromWatchListCompleted(this, new doRemoveFromWatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doSendRefundForms", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("send-refund-forms-results-arr")]
    public SendRefundFormResultStruct[] doSendRefundForms([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("send-refund-forms-data-arr")] SendRefundFormStruct[] sendrefundformsdataarr) {
        object[] results = this.Invoke("doSendRefundForms", new object[] {
                    sessionhandle,
                    sendrefundformsdataarr});
        return ((SendRefundFormResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSendRefundForms(string sessionhandle, SendRefundFormStruct[] sendrefundformsdataarr, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSendRefundForms", new object[] {
                    sessionhandle,
                    sendrefundformsdataarr}, callback, asyncState);
    }
    
    /// <remarks/>
    public SendRefundFormResultStruct[] EnddoSendRefundForms(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SendRefundFormResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doSendRefundFormsAsync(string sessionhandle, SendRefundFormStruct[] sendrefundformsdataarr) {
        this.doSendRefundFormsAsync(sessionhandle, sendrefundformsdataarr, null);
    }
    
    /// <remarks/>
    public void doSendRefundFormsAsync(string sessionhandle, SendRefundFormStruct[] sendrefundformsdataarr, object userState) {
        if ((this.doSendRefundFormsOperationCompleted == null)) {
            this.doSendRefundFormsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSendRefundFormsOperationCompleted);
        }
        this.InvokeAsync("doSendRefundForms", new object[] {
                    sessionhandle,
                    sendrefundformsdataarr}, this.doSendRefundFormsOperationCompleted, userState);
    }
    
    private void OndoSendRefundFormsOperationCompleted(object arg) {
        if ((this.doSendRefundFormsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSendRefundFormsCompleted(this, new doSendRefundFormsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doGetRefundFormsStatuses", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("refund-forms-statuses-results-arr")]
    public RefundFormStatusResultStruct[] doGetRefundFormsStatuses([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("refund-forms-statuses-data-arr")] RefundFormStatusStruct[] refundformsstatusesdataarr) {
        object[] results = this.Invoke("doGetRefundFormsStatuses", new object[] {
                    sessionhandle,
                    refundformsstatusesdataarr});
        return ((RefundFormStatusResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetRefundFormsStatuses(string sessionhandle, RefundFormStatusStruct[] refundformsstatusesdataarr, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetRefundFormsStatuses", new object[] {
                    sessionhandle,
                    refundformsstatusesdataarr}, callback, asyncState);
    }
    
    /// <remarks/>
    public RefundFormStatusResultStruct[] EnddoGetRefundFormsStatuses(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((RefundFormStatusResultStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetRefundFormsStatusesAsync(string sessionhandle, RefundFormStatusStruct[] refundformsstatusesdataarr) {
        this.doGetRefundFormsStatusesAsync(sessionhandle, refundformsstatusesdataarr, null);
    }
    
    /// <remarks/>
    public void doGetRefundFormsStatusesAsync(string sessionhandle, RefundFormStatusStruct[] refundformsstatusesdataarr, object userState) {
        if ((this.doGetRefundFormsStatusesOperationCompleted == null)) {
            this.doGetRefundFormsStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetRefundFormsStatusesOperationCompleted);
        }
        this.InvokeAsync("doGetRefundFormsStatuses", new object[] {
                    sessionhandle,
                    refundformsstatusesdataarr}, this.doGetRefundFormsStatusesOperationCompleted, userState);
    }
    
    private void OndoGetRefundFormsStatusesOperationCompleted(object arg) {
        if ((this.doGetRefundFormsStatusesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetRefundFormsStatusesCompleted(this, new doGetRefundFormsStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doGetRefundReasons", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("refund-reasons-arr")]
    public RefundReasonStruct[] doGetRefundReasons([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode) {
        object[] results = this.Invoke("doGetRefundReasons", new object[] {
                    webapikey,
                    countrycode});
        return ((RefundReasonStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetRefundReasons(string webapikey, int countrycode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetRefundReasons", new object[] {
                    webapikey,
                    countrycode}, callback, asyncState);
    }
    
    /// <remarks/>
    public RefundReasonStruct[] EnddoGetRefundReasons(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((RefundReasonStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetRefundReasonsAsync(string webapikey, int countrycode) {
        this.doGetRefundReasonsAsync(webapikey, countrycode, null);
    }
    
    /// <remarks/>
    public void doGetRefundReasonsAsync(string webapikey, int countrycode, object userState) {
        if ((this.doGetRefundReasonsOperationCompleted == null)) {
            this.doGetRefundReasonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetRefundReasonsOperationCompleted);
        }
        this.InvokeAsync("doGetRefundReasons", new object[] {
                    webapikey,
                    countrycode}, this.doGetRefundReasonsOperationCompleted, userState);
    }
    
    private void OndoGetRefundReasonsOperationCompleted(object arg) {
        if ((this.doGetRefundReasonsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetRefundReasonsCompleted(this, new doGetRefundReasonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getmyinpayments", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-income")]
    public UserIncomingPaymentStruct[] doGetMyIncomingPayments([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("buyer-id")] int buyerid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("trans-recv-date-from")] long transrecvdatefrom, [System.Xml.Serialization.SoapElementAttribute("trans-recv-date-to")] long transrecvdateto, [System.Xml.Serialization.SoapElementAttribute("trans-page-limit")] int transpagelimit, [System.Xml.Serialization.SoapElementAttribute("trans-offset")] int transoffset) {
        object[] results = this.Invoke("doGetMyIncomingPayments", new object[] {
                    sessionhandle,
                    buyerid,
                    itemid,
                    transrecvdatefrom,
                    transrecvdateto,
                    transpagelimit,
                    transoffset});
        return ((UserIncomingPaymentStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetMyIncomingPayments(string sessionhandle, int buyerid, long itemid, long transrecvdatefrom, long transrecvdateto, int transpagelimit, int transoffset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetMyIncomingPayments", new object[] {
                    sessionhandle,
                    buyerid,
                    itemid,
                    transrecvdatefrom,
                    transrecvdateto,
                    transpagelimit,
                    transoffset}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserIncomingPaymentStruct[] EnddoGetMyIncomingPayments(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserIncomingPaymentStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetMyIncomingPaymentsAsync(string sessionhandle, int buyerid, long itemid, long transrecvdatefrom, long transrecvdateto, int transpagelimit, int transoffset) {
        this.doGetMyIncomingPaymentsAsync(sessionhandle, buyerid, itemid, transrecvdatefrom, transrecvdateto, transpagelimit, transoffset, null);
    }
    
    /// <remarks/>
    public void doGetMyIncomingPaymentsAsync(string sessionhandle, int buyerid, long itemid, long transrecvdatefrom, long transrecvdateto, int transpagelimit, int transoffset, object userState) {
        if ((this.doGetMyIncomingPaymentsOperationCompleted == null)) {
            this.doGetMyIncomingPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyIncomingPaymentsOperationCompleted);
        }
        this.InvokeAsync("doGetMyIncomingPayments", new object[] {
                    sessionhandle,
                    buyerid,
                    itemid,
                    transrecvdatefrom,
                    transrecvdateto,
                    transpagelimit,
                    transoffset}, this.doGetMyIncomingPaymentsOperationCompleted, userState);
    }
    
    private void OndoGetMyIncomingPaymentsOperationCompleted(object arg) {
        if ((this.doGetMyIncomingPaymentsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetMyIncomingPaymentsCompleted(this, new doGetMyIncomingPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getmypayments", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-payment")]
    public UserPaymentStruct[] doGetMyPayments([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("seller-id")] int sellerid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("trans-create-date-from")] long transcreatedatefrom, [System.Xml.Serialization.SoapElementAttribute("trans-create-date-to")] long transcreatedateto, [System.Xml.Serialization.SoapElementAttribute("trans-page-limit")] int transpagelimit, [System.Xml.Serialization.SoapElementAttribute("trans-offset")] int transoffset) {
        object[] results = this.Invoke("doGetMyPayments", new object[] {
                    sessionhandle,
                    sellerid,
                    itemid,
                    transcreatedatefrom,
                    transcreatedateto,
                    transpagelimit,
                    transoffset});
        return ((UserPaymentStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetMyPayments(string sessionhandle, int sellerid, long itemid, long transcreatedatefrom, long transcreatedateto, int transpagelimit, int transoffset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetMyPayments", new object[] {
                    sessionhandle,
                    sellerid,
                    itemid,
                    transcreatedatefrom,
                    transcreatedateto,
                    transpagelimit,
                    transoffset}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserPaymentStruct[] EnddoGetMyPayments(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserPaymentStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetMyPaymentsAsync(string sessionhandle, int sellerid, long itemid, long transcreatedatefrom, long transcreatedateto, int transpagelimit, int transoffset) {
        this.doGetMyPaymentsAsync(sessionhandle, sellerid, itemid, transcreatedatefrom, transcreatedateto, transpagelimit, transoffset, null);
    }
    
    /// <remarks/>
    public void doGetMyPaymentsAsync(string sessionhandle, int sellerid, long itemid, long transcreatedatefrom, long transcreatedateto, int transpagelimit, int transoffset, object userState) {
        if ((this.doGetMyPaymentsOperationCompleted == null)) {
            this.doGetMyPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyPaymentsOperationCompleted);
        }
        this.InvokeAsync("doGetMyPayments", new object[] {
                    sessionhandle,
                    sellerid,
                    itemid,
                    transcreatedatefrom,
                    transcreatedateto,
                    transpagelimit,
                    transoffset}, this.doGetMyPaymentsOperationCompleted, userState);
    }
    
    private void OndoGetMyPaymentsOperationCompleted(object arg) {
        if ((this.doGetMyPaymentsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetMyPaymentsCompleted(this, new doGetMyPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getmypayouts", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-payout")]
    public UserPayoutStruct[] doGetMyPayouts([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("trans-create-date-from")] long transcreatedatefrom, [System.Xml.Serialization.SoapElementAttribute("trans-create-date-to")] long transcreatedateto, [System.Xml.Serialization.SoapElementAttribute("trans-page-limit")] int transpagelimit, [System.Xml.Serialization.SoapElementAttribute("trans-offset")] int transoffset) {
        object[] results = this.Invoke("doGetMyPayouts", new object[] {
                    sessionhandle,
                    transcreatedatefrom,
                    transcreatedateto,
                    transpagelimit,
                    transoffset});
        return ((UserPayoutStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetMyPayouts(string sessionhandle, long transcreatedatefrom, long transcreatedateto, int transpagelimit, int transoffset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetMyPayouts", new object[] {
                    sessionhandle,
                    transcreatedatefrom,
                    transcreatedateto,
                    transpagelimit,
                    transoffset}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserPayoutStruct[] EnddoGetMyPayouts(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserPayoutStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetMyPayoutsAsync(string sessionhandle, long transcreatedatefrom, long transcreatedateto, int transpagelimit, int transoffset) {
        this.doGetMyPayoutsAsync(sessionhandle, transcreatedatefrom, transcreatedateto, transpagelimit, transoffset, null);
    }
    
    /// <remarks/>
    public void doGetMyPayoutsAsync(string sessionhandle, long transcreatedatefrom, long transcreatedateto, int transpagelimit, int transoffset, object userState) {
        if ((this.doGetMyPayoutsOperationCompleted == null)) {
            this.doGetMyPayoutsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyPayoutsOperationCompleted);
        }
        this.InvokeAsync("doGetMyPayouts", new object[] {
                    sessionhandle,
                    transcreatedatefrom,
                    transcreatedateto,
                    transpagelimit,
                    transoffset}, this.doGetMyPayoutsOperationCompleted, userState);
    }
    
    private void OndoGetMyPayoutsOperationCompleted(object arg) {
        if ((this.doGetMyPayoutsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetMyPayoutsCompleted(this, new doGetMyPayoutsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#doChangeQuantityItem", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("item-info")]
    public string doChangeQuantityItem([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] ref long itemid, [System.Xml.Serialization.SoapElementAttribute("new-item-quantity")] int newitemquantity) {
        object[] results = this.Invoke("doChangeQuantityItem", new object[] {
                    sessionhandle,
                    itemid,
                    newitemquantity});
        itemid = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoChangeQuantityItem(string sessionhandle, long itemid, int newitemquantity, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doChangeQuantityItem", new object[] {
                    sessionhandle,
                    itemid,
                    newitemquantity}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoChangeQuantityItem(System.IAsyncResult asyncResult, out long itemid) {
        object[] results = this.EndInvoke(asyncResult);
        itemid = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doChangeQuantityItemAsync(string sessionhandle, long itemid, int newitemquantity) {
        this.doChangeQuantityItemAsync(sessionhandle, itemid, newitemquantity, null);
    }
    
    /// <remarks/>
    public void doChangeQuantityItemAsync(string sessionhandle, long itemid, int newitemquantity, object userState) {
        if ((this.doChangeQuantityItemOperationCompleted == null)) {
            this.doChangeQuantityItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoChangeQuantityItemOperationCompleted);
        }
        this.InvokeAsync("doChangeQuantityItem", new object[] {
                    sessionhandle,
                    itemid,
                    newitemquantity}, this.doChangeQuantityItemOperationCompleted, userState);
    }
    
    private void OndoChangeQuantityItemOperationCompleted(object arg) {
        if ((this.doChangeQuantityItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doChangeQuantityItemCompleted(this, new doChangeQuantityItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#showuserpage", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("user-page-content")]
    public string doShowUserPage([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("user-id")] long userid) {
        object[] results = this.Invoke("doShowUserPage", new object[] {
                    webapikey,
                    countryid,
                    userid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoShowUserPage(string webapikey, int countryid, long userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doShowUserPage", new object[] {
                    webapikey,
                    countryid,
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoShowUserPage(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doShowUserPageAsync(string webapikey, int countryid, long userid) {
        this.doShowUserPageAsync(webapikey, countryid, userid, null);
    }
    
    /// <remarks/>
    public void doShowUserPageAsync(string webapikey, int countryid, long userid, object userState) {
        if ((this.doShowUserPageOperationCompleted == null)) {
            this.doShowUserPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoShowUserPageOperationCompleted);
        }
        this.InvokeAsync("doShowUserPage", new object[] {
                    webapikey,
                    countryid,
                    userid}, this.doShowUserPageOperationCompleted, userState);
    }
    
    private void OndoShowUserPageOperationCompleted(object arg) {
        if ((this.doShowUserPageCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doShowUserPageCompleted(this, new doShowUserPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#sendemailtouser", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("mail-to-user-result")]
    public string doSendEmailToUser([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-item-id")] long mailtouseritemid, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-receiver-id")] ref long mailtouserreceiverid, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-subject-id")] int mailtousersubjectid, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-option")] int mailtouseroption, [System.Xml.Serialization.SoapElementAttribute("mail-to-user-message")] string mailtousermessage) {
        object[] results = this.Invoke("doSendEmailToUser", new object[] {
                    sessionhandle,
                    mailtouseritemid,
                    mailtouserreceiverid,
                    mailtousersubjectid,
                    mailtouseroption,
                    mailtousermessage});
        mailtouserreceiverid = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoSendEmailToUser(string sessionhandle, long mailtouseritemid, long mailtouserreceiverid, int mailtousersubjectid, int mailtouseroption, string mailtousermessage, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doSendEmailToUser", new object[] {
                    sessionhandle,
                    mailtouseritemid,
                    mailtouserreceiverid,
                    mailtousersubjectid,
                    mailtouseroption,
                    mailtousermessage}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EnddoSendEmailToUser(System.IAsyncResult asyncResult, out long mailtouserreceiverid) {
        object[] results = this.EndInvoke(asyncResult);
        mailtouserreceiverid = ((long)(results[1]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void doSendEmailToUserAsync(string sessionhandle, long mailtouseritemid, long mailtouserreceiverid, int mailtousersubjectid, int mailtouseroption, string mailtousermessage) {
        this.doSendEmailToUserAsync(sessionhandle, mailtouseritemid, mailtouserreceiverid, mailtousersubjectid, mailtouseroption, mailtousermessage, null);
    }
    
    /// <remarks/>
    public void doSendEmailToUserAsync(string sessionhandle, long mailtouseritemid, long mailtouserreceiverid, int mailtousersubjectid, int mailtouseroption, string mailtousermessage, object userState) {
        if ((this.doSendEmailToUserOperationCompleted == null)) {
            this.doSendEmailToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoSendEmailToUserOperationCompleted);
        }
        this.InvokeAsync("doSendEmailToUser", new object[] {
                    sessionhandle,
                    mailtouseritemid,
                    mailtouserreceiverid,
                    mailtousersubjectid,
                    mailtouseroption,
                    mailtousermessage}, this.doSendEmailToUserOperationCompleted, userState);
    }
    
    private void OndoSendEmailToUserOperationCompleted(object arg) {
        if ((this.doSendEmailToUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doSendEmailToUserCompleted(this, new doSendEmailToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#gettransids", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("transactions-ids-array")]
    public long[] doGetTransactionsIDs([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("items-id-array")] long[] itemsidarray, [System.Xml.Serialization.SoapElementAttribute("user-role")] string userrole) {
        object[] results = this.Invoke("doGetTransactionsIDs", new object[] {
                    sessionhandle,
                    itemsidarray,
                    userrole});
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetTransactionsIDs(string sessionhandle, long[] itemsidarray, string userrole, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetTransactionsIDs", new object[] {
                    sessionhandle,
                    itemsidarray,
                    userrole}, callback, asyncState);
    }
    
    /// <remarks/>
    public long[] EnddoGetTransactionsIDs(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetTransactionsIDsAsync(string sessionhandle, long[] itemsidarray, string userrole) {
        this.doGetTransactionsIDsAsync(sessionhandle, itemsidarray, userrole, null);
    }
    
    /// <remarks/>
    public void doGetTransactionsIDsAsync(string sessionhandle, long[] itemsidarray, string userrole, object userState) {
        if ((this.doGetTransactionsIDsOperationCompleted == null)) {
            this.doGetTransactionsIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetTransactionsIDsOperationCompleted);
        }
        this.InvokeAsync("doGetTransactionsIDs", new object[] {
                    sessionhandle,
                    itemsidarray,
                    userrole}, this.doGetTransactionsIDsOperationCompleted, userState);
    }
    
    private void OndoGetTransactionsIDsOperationCompleted(object arg) {
        if ((this.doGetTransactionsIDsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetTransactionsIDsCompleted(this, new doGetTransactionsIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getpostbuyforms", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("post-buy-form-data")]
    public PostBuyFormDataStruct[] doGetPostBuyFormsData([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("transactions-ids-array")] long[] transactionsidsarray) {
        object[] results = this.Invoke("doGetPostBuyFormsData", new object[] {
                    sessionhandle,
                    transactionsidsarray});
        return ((PostBuyFormDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetPostBuyFormsData(string sessionhandle, long[] transactionsidsarray, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetPostBuyFormsData", new object[] {
                    sessionhandle,
                    transactionsidsarray}, callback, asyncState);
    }
    
    /// <remarks/>
    public PostBuyFormDataStruct[] EnddoGetPostBuyFormsData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((PostBuyFormDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetPostBuyFormsDataAsync(string sessionhandle, long[] transactionsidsarray) {
        this.doGetPostBuyFormsDataAsync(sessionhandle, transactionsidsarray, null);
    }
    
    /// <remarks/>
    public void doGetPostBuyFormsDataAsync(string sessionhandle, long[] transactionsidsarray, object userState) {
        if ((this.doGetPostBuyFormsDataOperationCompleted == null)) {
            this.doGetPostBuyFormsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetPostBuyFormsDataOperationCompleted);
        }
        this.InvokeAsync("doGetPostBuyFormsData", new object[] {
                    sessionhandle,
                    transactionsidsarray}, this.doGetPostBuyFormsDataOperationCompleted, userState);
    }
    
    private void OndoGetPostBuyFormsDataOperationCompleted(object arg) {
        if ((this.doGetPostBuyFormsDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetPostBuyFormsDataCompleted(this, new doGetPostBuyFormsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getmyinpaymentsrefunds", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-income-refunds")]
    public UserIncomingPaymentRefundsStruct[] doGetMyIncomingPaymentsRefunds([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("buyer-id")] int buyerid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, int limit, int offset) {
        object[] results = this.Invoke("doGetMyIncomingPaymentsRefunds", new object[] {
                    sessionhandle,
                    buyerid,
                    itemid,
                    limit,
                    offset});
        return ((UserIncomingPaymentRefundsStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetMyIncomingPaymentsRefunds(string sessionhandle, int buyerid, long itemid, int limit, int offset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetMyIncomingPaymentsRefunds", new object[] {
                    sessionhandle,
                    buyerid,
                    itemid,
                    limit,
                    offset}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserIncomingPaymentRefundsStruct[] EnddoGetMyIncomingPaymentsRefunds(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserIncomingPaymentRefundsStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetMyIncomingPaymentsRefundsAsync(string sessionhandle, int buyerid, long itemid, int limit, int offset) {
        this.doGetMyIncomingPaymentsRefundsAsync(sessionhandle, buyerid, itemid, limit, offset, null);
    }
    
    /// <remarks/>
    public void doGetMyIncomingPaymentsRefundsAsync(string sessionhandle, int buyerid, long itemid, int limit, int offset, object userState) {
        if ((this.doGetMyIncomingPaymentsRefundsOperationCompleted == null)) {
            this.doGetMyIncomingPaymentsRefundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyIncomingPaymentsRefundsOperationCompleted);
        }
        this.InvokeAsync("doGetMyIncomingPaymentsRefunds", new object[] {
                    sessionhandle,
                    buyerid,
                    itemid,
                    limit,
                    offset}, this.doGetMyIncomingPaymentsRefundsOperationCompleted, userState);
    }
    
    private void OndoGetMyIncomingPaymentsRefundsOperationCompleted(object arg) {
        if ((this.doGetMyIncomingPaymentsRefundsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetMyIncomingPaymentsRefundsCompleted(this, new doGetMyIncomingPaymentsRefundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getmypaymentsrafunds", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("pay-trans-payment-refunds")]
    public UserPaymentRefundsStruct[] doGetMyPaymentsRefunds([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("seller-id")] int sellerid, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, int limit, int offset) {
        object[] results = this.Invoke("doGetMyPaymentsRefunds", new object[] {
                    sessionhandle,
                    sellerid,
                    itemid,
                    limit,
                    offset});
        return ((UserPaymentRefundsStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetMyPaymentsRefunds(string sessionhandle, int sellerid, long itemid, int limit, int offset, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetMyPaymentsRefunds", new object[] {
                    sessionhandle,
                    sellerid,
                    itemid,
                    limit,
                    offset}, callback, asyncState);
    }
    
    /// <remarks/>
    public UserPaymentRefundsStruct[] EnddoGetMyPaymentsRefunds(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((UserPaymentRefundsStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetMyPaymentsRefundsAsync(string sessionhandle, int sellerid, long itemid, int limit, int offset) {
        this.doGetMyPaymentsRefundsAsync(sessionhandle, sellerid, itemid, limit, offset, null);
    }
    
    /// <remarks/>
    public void doGetMyPaymentsRefundsAsync(string sessionhandle, int sellerid, long itemid, int limit, int offset, object userState) {
        if ((this.doGetMyPaymentsRefundsOperationCompleted == null)) {
            this.doGetMyPaymentsRefundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMyPaymentsRefundsOperationCompleted);
        }
        this.InvokeAsync("doGetMyPaymentsRefunds", new object[] {
                    sessionhandle,
                    sellerid,
                    itemid,
                    limit,
                    offset}, this.doGetMyPaymentsRefundsOperationCompleted, userState);
    }
    
    private void OndoGetMyPaymentsRefundsOperationCompleted(object arg) {
        if ((this.doGetMyPaymentsRefundsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetMyPaymentsRefundsCompleted(this, new doGetMyPaymentsRefundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getmysellrating", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-rating-total-count")]
    public int doGetMySellRating([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("sell-rating-average")] out SellRatingAverageStruct[] sellratingaverage, [System.Xml.Serialization.SoapElementAttribute("sell-rating-details")] out SellRatingDetailStruct[] sellratingdetails, [System.Xml.Serialization.SoapElementAttribute("sell-rating-stats-per-month")] out SellRatingAveragePerMonthStruct[] sellratingstatspermonth) {
        object[] results = this.Invoke("doGetMySellRating", new object[] {
                    sessionhandle});
        sellratingaverage = ((SellRatingAverageStruct[])(results[1]));
        sellratingdetails = ((SellRatingDetailStruct[])(results[2]));
        sellratingstatspermonth = ((SellRatingAveragePerMonthStruct[])(results[3]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetMySellRating(string sessionhandle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetMySellRating", new object[] {
                    sessionhandle}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnddoGetMySellRating(System.IAsyncResult asyncResult, out SellRatingAverageStruct[] sellratingaverage, out SellRatingDetailStruct[] sellratingdetails, out SellRatingAveragePerMonthStruct[] sellratingstatspermonth) {
        object[] results = this.EndInvoke(asyncResult);
        sellratingaverage = ((SellRatingAverageStruct[])(results[1]));
        sellratingdetails = ((SellRatingDetailStruct[])(results[2]));
        sellratingstatspermonth = ((SellRatingAveragePerMonthStruct[])(results[3]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void doGetMySellRatingAsync(string sessionhandle) {
        this.doGetMySellRatingAsync(sessionhandle, null);
    }
    
    /// <remarks/>
    public void doGetMySellRatingAsync(string sessionhandle, object userState) {
        if ((this.doGetMySellRatingOperationCompleted == null)) {
            this.doGetMySellRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetMySellRatingOperationCompleted);
        }
        this.InvokeAsync("doGetMySellRating", new object[] {
                    sessionhandle}, this.doGetMySellRatingOperationCompleted, userState);
    }
    
    private void OndoGetMySellRatingOperationCompleted(object arg) {
        if ((this.doGetMySellRatingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetMySellRatingCompleted(this, new doGetMySellRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsitejournalfeedbacks", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("site-journal-feedbacks-array")]
    public SiteJournalFeedbacks[] doGetSiteJournalFeedbacks([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-starting-point")] long feedbackstartingpoint, [System.Xml.Serialization.SoapElementAttribute("feedback-info-type")] int feedbackinfotype) {
        object[] results = this.Invoke("doGetSiteJournalFeedbacks", new object[] {
                    sessionhandle,
                    feedbackstartingpoint,
                    feedbackinfotype});
        return ((SiteJournalFeedbacks[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSiteJournalFeedbacks(string sessionhandle, long feedbackstartingpoint, int feedbackinfotype, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSiteJournalFeedbacks", new object[] {
                    sessionhandle,
                    feedbackstartingpoint,
                    feedbackinfotype}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteJournalFeedbacks[] EnddoGetSiteJournalFeedbacks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SiteJournalFeedbacks[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSiteJournalFeedbacksAsync(string sessionhandle, long feedbackstartingpoint, int feedbackinfotype) {
        this.doGetSiteJournalFeedbacksAsync(sessionhandle, feedbackstartingpoint, feedbackinfotype, null);
    }
    
    /// <remarks/>
    public void doGetSiteJournalFeedbacksAsync(string sessionhandle, long feedbackstartingpoint, int feedbackinfotype, object userState) {
        if ((this.doGetSiteJournalFeedbacksOperationCompleted == null)) {
            this.doGetSiteJournalFeedbacksOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalFeedbacksOperationCompleted);
        }
        this.InvokeAsync("doGetSiteJournalFeedbacks", new object[] {
                    sessionhandle,
                    feedbackstartingpoint,
                    feedbackinfotype}, this.doGetSiteJournalFeedbacksOperationCompleted, userState);
    }
    
    private void OndoGetSiteJournalFeedbacksOperationCompleted(object arg) {
        if ((this.doGetSiteJournalFeedbacksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSiteJournalFeedbacksCompleted(this, new doGetSiteJournalFeedbacksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#dogetsitejournalfeedbacksinfo", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("site-journal-feedbacks-info")]
    public SiteJournalFeedbacksInfo doGetSiteJournalFeedbacksInfo([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("feedback-starting-point")] long feedbackstartingpoint, [System.Xml.Serialization.SoapElementAttribute("feedback-info-type")] int feedbackinfotype) {
        object[] results = this.Invoke("doGetSiteJournalFeedbacksInfo", new object[] {
                    sessionhandle,
                    feedbackstartingpoint,
                    feedbackinfotype});
        return ((SiteJournalFeedbacksInfo)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSiteJournalFeedbacksInfo(string sessionhandle, long feedbackstartingpoint, int feedbackinfotype, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSiteJournalFeedbacksInfo", new object[] {
                    sessionhandle,
                    feedbackstartingpoint,
                    feedbackinfotype}, callback, asyncState);
    }
    
    /// <remarks/>
    public SiteJournalFeedbacksInfo EnddoGetSiteJournalFeedbacksInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SiteJournalFeedbacksInfo)(results[0]));
    }
    
    /// <remarks/>
    public void doGetSiteJournalFeedbacksInfoAsync(string sessionhandle, long feedbackstartingpoint, int feedbackinfotype) {
        this.doGetSiteJournalFeedbacksInfoAsync(sessionhandle, feedbackstartingpoint, feedbackinfotype, null);
    }
    
    /// <remarks/>
    public void doGetSiteJournalFeedbacksInfoAsync(string sessionhandle, long feedbackstartingpoint, int feedbackinfotype, object userState) {
        if ((this.doGetSiteJournalFeedbacksInfoOperationCompleted == null)) {
            this.doGetSiteJournalFeedbacksInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSiteJournalFeedbacksInfoOperationCompleted);
        }
        this.InvokeAsync("doGetSiteJournalFeedbacksInfo", new object[] {
                    sessionhandle,
                    feedbackstartingpoint,
                    feedbackinfotype}, this.doGetSiteJournalFeedbacksInfoOperationCompleted, userState);
    }
    
    private void OndoGetSiteJournalFeedbacksInfoOperationCompleted(object arg) {
        if ((this.doGetSiteJournalFeedbacksInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSiteJournalFeedbacksInfoCompleted(this, new doGetSiteJournalFeedbacksInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getsellratingreasons", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("sell-rating-info")]
    public SellRatingInfoStruct[] doGetSellRatingReasons([System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("country-code")] int countrycode) {
        object[] results = this.Invoke("doGetSellRatingReasons", new object[] {
                    webapikey,
                    countrycode});
        return ((SellRatingInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetSellRatingReasons(string webapikey, int countrycode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetSellRatingReasons", new object[] {
                    webapikey,
                    countrycode}, callback, asyncState);
    }
    
    /// <remarks/>
    public SellRatingInfoStruct[] EnddoGetSellRatingReasons(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SellRatingInfoStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetSellRatingReasonsAsync(string webapikey, int countrycode) {
        this.doGetSellRatingReasonsAsync(webapikey, countrycode, null);
    }
    
    /// <remarks/>
    public void doGetSellRatingReasonsAsync(string webapikey, int countrycode, object userState) {
        if ((this.doGetSellRatingReasonsOperationCompleted == null)) {
            this.doGetSellRatingReasonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetSellRatingReasonsOperationCompleted);
        }
        this.InvokeAsync("doGetSellRatingReasons", new object[] {
                    webapikey,
                    countrycode}, this.doGetSellRatingReasonsOperationCompleted, userState);
    }
    
    private void OndoGetSellRatingReasonsOperationCompleted(object arg) {
        if ((this.doGetSellRatingReasonsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetSellRatingReasonsCompleted(this, new doGetSellRatingReasonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getdeals", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("deals-list")]
    public DealsStruct[] doGetDeals([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("item-id")] long itemid, [System.Xml.Serialization.SoapElementAttribute("buyer-id")] int buyerid) {
        object[] results = this.Invoke("doGetDeals", new object[] {
                    sessionhandle,
                    itemid,
                    buyerid});
        return ((DealsStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetDeals(string sessionhandle, long itemid, int buyerid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetDeals", new object[] {
                    sessionhandle,
                    itemid,
                    buyerid}, callback, asyncState);
    }
    
    /// <remarks/>
    public DealsStruct[] EnddoGetDeals(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((DealsStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetDealsAsync(string sessionhandle, long itemid, int buyerid) {
        this.doGetDealsAsync(sessionhandle, itemid, buyerid, null);
    }
    
    /// <remarks/>
    public void doGetDealsAsync(string sessionhandle, long itemid, int buyerid, object userState) {
        if ((this.doGetDealsOperationCompleted == null)) {
            this.doGetDealsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetDealsOperationCompleted);
        }
        this.InvokeAsync("doGetDeals", new object[] {
                    sessionhandle,
                    itemid,
                    buyerid}, this.doGetDealsOperationCompleted, userState);
    }
    
    private void OndoGetDealsOperationCompleted(object arg) {
        if ((this.doGetDealsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetDealsCompleted(this, new doGetDealsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#makediscount", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("deal-amount-discounted")]
    public float doMakeDiscount([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("deal-id")] long dealid, [System.Xml.Serialization.SoapElementAttribute("discount-amount")] float discountamount, [System.Xml.Serialization.SoapElementAttribute("discount-percentage")] float discountpercentage) {
        object[] results = this.Invoke("doMakeDiscount", new object[] {
                    sessionhandle,
                    dealid,
                    discountamount,
                    discountpercentage});
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoMakeDiscount(string sessionhandle, long dealid, float discountamount, float discountpercentage, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doMakeDiscount", new object[] {
                    sessionhandle,
                    dealid,
                    discountamount,
                    discountpercentage}, callback, asyncState);
    }
    
    /// <remarks/>
    public float EnddoMakeDiscount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((float)(results[0]));
    }
    
    /// <remarks/>
    public void doMakeDiscountAsync(string sessionhandle, long dealid, float discountamount, float discountpercentage) {
        this.doMakeDiscountAsync(sessionhandle, dealid, discountamount, discountpercentage, null);
    }
    
    /// <remarks/>
    public void doMakeDiscountAsync(string sessionhandle, long dealid, float discountamount, float discountpercentage, object userState) {
        if ((this.doMakeDiscountOperationCompleted == null)) {
            this.doMakeDiscountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoMakeDiscountOperationCompleted);
        }
        this.InvokeAsync("doMakeDiscount", new object[] {
                    sessionhandle,
                    dealid,
                    discountamount,
                    discountpercentage}, this.doMakeDiscountOperationCompleted, userState);
    }
    
    private void OndoMakeDiscountOperationCompleted(object arg) {
        if ((this.doMakeDiscountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doMakeDiscountCompleted(this, new doMakeDiscountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#finishitems", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("finish-items-succeed")]
    public long[] doFinishItems([System.Xml.Serialization.SoapElementAttribute("session-handle")] string sessionhandle, [System.Xml.Serialization.SoapElementAttribute("finish-items-list")] FinishItemsStruct[] finishitemslist, [System.Xml.Serialization.SoapElementAttribute("finish-items-failed")] out FinishFailureStruct[] finishitemsfailed) {
        object[] results = this.Invoke("doFinishItems", new object[] {
                    sessionhandle,
                    finishitemslist});
        finishitemsfailed = ((FinishFailureStruct[])(results[1]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoFinishItems(string sessionhandle, FinishItemsStruct[] finishitemslist, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doFinishItems", new object[] {
                    sessionhandle,
                    finishitemslist}, callback, asyncState);
    }
    
    /// <remarks/>
    public long[] EnddoFinishItems(System.IAsyncResult asyncResult, out FinishFailureStruct[] finishitemsfailed) {
        object[] results = this.EndInvoke(asyncResult);
        finishitemsfailed = ((FinishFailureStruct[])(results[1]));
        return ((long[])(results[0]));
    }
    
    /// <remarks/>
    public void doFinishItemsAsync(string sessionhandle, FinishItemsStruct[] finishitemslist) {
        this.doFinishItemsAsync(sessionhandle, finishitemslist, null);
    }
    
    /// <remarks/>
    public void doFinishItemsAsync(string sessionhandle, FinishItemsStruct[] finishitemslist, object userState) {
        if ((this.doFinishItemsOperationCompleted == null)) {
            this.doFinishItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoFinishItemsOperationCompleted);
        }
        this.InvokeAsync("doFinishItems", new object[] {
                    sessionhandle,
                    finishitemslist}, this.doFinishItemsOperationCompleted, userState);
    }
    
    private void OndoFinishItemsOperationCompleted(object arg) {
        if ((this.doFinishItemsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doFinishItemsCompleted(this, new doFinishItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("#getshipmentdata", RequestNamespace="urn:AllegroWebApi", ResponseNamespace="urn:AllegroWebApi")]
    [return: System.Xml.Serialization.SoapElementAttribute("shipment-data-list")]
    public ShipmentDataStruct[] doGetShipmentData([System.Xml.Serialization.SoapElementAttribute("country-id")] int countryid, [System.Xml.Serialization.SoapElementAttribute("webapi-key")] string webapikey, [System.Xml.Serialization.SoapElementAttribute("local-version")] out long localversion) {
        object[] results = this.Invoke("doGetShipmentData", new object[] {
                    countryid,
                    webapikey});
        localversion = ((long)(results[1]));
        return ((ShipmentDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindoGetShipmentData(int countryid, string webapikey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("doGetShipmentData", new object[] {
                    countryid,
                    webapikey}, callback, asyncState);
    }
    
    /// <remarks/>
    public ShipmentDataStruct[] EnddoGetShipmentData(System.IAsyncResult asyncResult, out long localversion) {
        object[] results = this.EndInvoke(asyncResult);
        localversion = ((long)(results[1]));
        return ((ShipmentDataStruct[])(results[0]));
    }
    
    /// <remarks/>
    public void doGetShipmentDataAsync(int countryid, string webapikey) {
        this.doGetShipmentDataAsync(countryid, webapikey, null);
    }
    
    /// <remarks/>
    public void doGetShipmentDataAsync(int countryid, string webapikey, object userState) {
        if ((this.doGetShipmentDataOperationCompleted == null)) {
            this.doGetShipmentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoGetShipmentDataOperationCompleted);
        }
        this.InvokeAsync("doGetShipmentData", new object[] {
                    countryid,
                    webapikey}, this.doGetShipmentDataOperationCompleted, userState);
    }
    
    private void OndoGetShipmentDataOperationCompleted(object arg) {
        if ((this.doGetShipmentDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.doGetShipmentDataCompleted(this, new doGetShipmentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CatInfoType {
    
    private int catidField;
    
    private string catnameField;
    
    private int catparentField;
    
    private int catpositionField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-id")]
    public int catid {
        get {
            return this.catidField;
        }
        set {
            this.catidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-name")]
    public string catname {
        get {
            return this.catnameField;
        }
        set {
            this.catnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-parent")]
    public int catparent {
        get {
            return this.catparentField;
        }
        set {
            this.catparentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-position")]
    public int catposition {
        get {
            return this.catpositionField;
        }
        set {
            this.catpositionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ShipmentDataStruct {
    
    private int shipmentidField;
    
    private string shipmentnameField;
    
    private int shipmenttypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("shipment-id")]
    public int shipmentid {
        get {
            return this.shipmentidField;
        }
        set {
            this.shipmentidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("shipment-name")]
    public string shipmentname {
        get {
            return this.shipmentnameField;
        }
        set {
            this.shipmentnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("shipment-type")]
    public int shipmenttype {
        get {
            return this.shipmenttypeField;
        }
        set {
            this.shipmenttypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FinishFailureStruct {
    
    private long finishitemidField;
    
    private string finisherrorcodeField;
    
    private string finisherrormessageField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("finish-item-id")]
    public long finishitemid {
        get {
            return this.finishitemidField;
        }
        set {
            this.finishitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("finish-error-code")]
    public string finisherrorcode {
        get {
            return this.finisherrorcodeField;
        }
        set {
            this.finisherrorcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("finish-error-message")]
    public string finisherrormessage {
        get {
            return this.finisherrormessageField;
        }
        set {
            this.finisherrormessageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FinishItemsStruct {
    
    private long finishitemidField;
    
    private int finishcancelallbidsField;
    
    private string finishcancelreasonField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("finish-item-id")]
    public long finishitemid {
        get {
            return this.finishitemidField;
        }
        set {
            this.finishitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("finish-cancel-all-bids")]
    public int finishcancelallbids {
        get {
            return this.finishcancelallbidsField;
        }
        set {
            this.finishcancelallbidsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("finish-cancel-reason")]
    public string finishcancelreason {
        get {
            return this.finishcancelreasonField;
        }
        set {
            this.finishcancelreasonField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class DealsStruct {
    
    private long dealidField;
    
    private long dealdateField;
    
    private int dealquantityField;
    
    private float dealamountoriginalField;
    
    private float dealamountdiscountedField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("deal-id")]
    public long dealid {
        get {
            return this.dealidField;
        }
        set {
            this.dealidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("deal-date")]
    public long dealdate {
        get {
            return this.dealdateField;
        }
        set {
            this.dealdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("deal-quantity")]
    public int dealquantity {
        get {
            return this.dealquantityField;
        }
        set {
            this.dealquantityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("deal-amount-original")]
    public float dealamountoriginal {
        get {
            return this.dealamountoriginalField;
        }
        set {
            this.dealamountoriginalField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("deal-amount-discounted")]
    public float dealamountdiscounted {
        get {
            return this.dealamountdiscountedField;
        }
        set {
            this.dealamountdiscountedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellRatingReasonStruct {
    
    private int sellratingreasonidField;
    
    private string sellratingreasontitleField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-id")]
    public int sellratingreasonid {
        get {
            return this.sellratingreasonidField;
        }
        set {
            this.sellratingreasonidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-title")]
    public string sellratingreasontitle {
        get {
            return this.sellratingreasontitleField;
        }
        set {
            this.sellratingreasontitleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellRatingInfoStruct {
    
    private int sellratinggroupidField;
    
    private string sellratinggrouptitleField;
    
    private SellRatingReasonStruct[] sellratingreasonsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-id")]
    public int sellratinggroupid {
        get {
            return this.sellratinggroupidField;
        }
        set {
            this.sellratinggroupidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-title")]
    public string sellratinggrouptitle {
        get {
            return this.sellratinggrouptitleField;
        }
        set {
            this.sellratinggrouptitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-reasons")]
    public SellRatingReasonStruct[] sellratingreasons {
        get {
            return this.sellratingreasonsField;
        }
        set {
            this.sellratingreasonsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteJournalFeedbacksInfo {
    
    private int feedbacknumberField;
    
    private long lastfeedbackdateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("feedback-number")]
    public int feedbacknumber {
        get {
            return this.feedbacknumberField;
        }
        set {
            this.feedbacknumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("last-feedback-date")]
    public long lastfeedbackdate {
        get {
            return this.lastfeedbackdateField;
        }
        set {
            this.lastfeedbackdateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteJournalFeedbacks {
    
    private long feedbackrowidField;
    
    private string feedbackchangetypeField;
    
    private long feedbackchangedateField;
    
    private int feedbackfromField;
    
    private int feedbacktoField;
    
    private int feedbackidField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("feedback-row-id")]
    public long feedbackrowid {
        get {
            return this.feedbackrowidField;
        }
        set {
            this.feedbackrowidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("feedback-change-type")]
    public string feedbackchangetype {
        get {
            return this.feedbackchangetypeField;
        }
        set {
            this.feedbackchangetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("feedback-change-date")]
    public long feedbackchangedate {
        get {
            return this.feedbackchangedateField;
        }
        set {
            this.feedbackchangedateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("feedback-from")]
    public int feedbackfrom {
        get {
            return this.feedbackfromField;
        }
        set {
            this.feedbackfromField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("feedback-to")]
    public int feedbackto {
        get {
            return this.feedbacktoField;
        }
        set {
            this.feedbacktoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("feedback-id")]
    public int feedbackid {
        get {
            return this.feedbackidField;
        }
        set {
            this.feedbackidField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellRatingStatsStruct {
    
    private string sellratinggrouptitleField;
    
    private string sellratinggroupstatsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-title")]
    public string sellratinggrouptitle {
        get {
            return this.sellratinggrouptitleField;
        }
        set {
            this.sellratinggrouptitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-stats")]
    public string sellratinggroupstats {
        get {
            return this.sellratinggroupstatsField;
        }
        set {
            this.sellratinggroupstatsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellRatingAveragePerMonthStruct {
    
    private string sellratingmonthField;
    
    private SellRatingStatsStruct[] sellratingaveragevaluesField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-month")]
    public string sellratingmonth {
        get {
            return this.sellratingmonthField;
        }
        set {
            this.sellratingmonthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-average-values")]
    public SellRatingStatsStruct[] sellratingaveragevalues {
        get {
            return this.sellratingaveragevaluesField;
        }
        set {
            this.sellratingaveragevaluesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellRatingReasonSumStruct {
    
    private string sellratingreasontitleField;
    
    private int sellratingreasoncountField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-title")]
    public string sellratingreasontitle {
        get {
            return this.sellratingreasontitleField;
        }
        set {
            this.sellratingreasontitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-count")]
    public int sellratingreasoncount {
        get {
            return this.sellratingreasoncountField;
        }
        set {
            this.sellratingreasoncountField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellRatingDetailStruct {
    
    private string sellratinggrouptitleField;
    
    private SellRatingReasonSumStruct[] sellratingreasonssummaryField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-title")]
    public string sellratinggrouptitle {
        get {
            return this.sellratinggrouptitleField;
        }
        set {
            this.sellratinggrouptitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-reasons-summary")]
    public SellRatingReasonSumStruct[] sellratingreasonssummary {
        get {
            return this.sellratingreasonssummaryField;
        }
        set {
            this.sellratingreasonssummaryField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserPaymentRefundsStruct {
    
    private long payrefundtransidField;
    
    private long payrefunditidField;
    
    private int payrefundselleridField;
    
    private float payrefundvalueField;
    
    private string payrefundreasonField;
    
    private long payrefunddateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-trans-id")]
    public long payrefundtransid {
        get {
            return this.payrefundtransidField;
        }
        set {
            this.payrefundtransidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-it-id")]
    public long payrefunditid {
        get {
            return this.payrefunditidField;
        }
        set {
            this.payrefunditidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-seller-id")]
    public int payrefundsellerid {
        get {
            return this.payrefundselleridField;
        }
        set {
            this.payrefundselleridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-value")]
    public float payrefundvalue {
        get {
            return this.payrefundvalueField;
        }
        set {
            this.payrefundvalueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-reason")]
    public string payrefundreason {
        get {
            return this.payrefundreasonField;
        }
        set {
            this.payrefundreasonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-date")]
    public long payrefunddate {
        get {
            return this.payrefunddateField;
        }
        set {
            this.payrefunddateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserIncomingPaymentRefundsStruct {
    
    private long payrefundtransidField;
    
    private long payrefunditidField;
    
    private int payrefundbuyeridField;
    
    private float payrefundvalueField;
    
    private string payrefundreasonField;
    
    private long payrefunddateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-trans-id")]
    public long payrefundtransid {
        get {
            return this.payrefundtransidField;
        }
        set {
            this.payrefundtransidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-it-id")]
    public long payrefunditid {
        get {
            return this.payrefunditidField;
        }
        set {
            this.payrefunditidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-buyer-id")]
    public int payrefundbuyerid {
        get {
            return this.payrefundbuyeridField;
        }
        set {
            this.payrefundbuyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-value")]
    public float payrefundvalue {
        get {
            return this.payrefundvalueField;
        }
        set {
            this.payrefundvalueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-reason")]
    public string payrefundreason {
        get {
            return this.payrefundreasonField;
        }
        set {
            this.payrefundreasonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-refund-date")]
    public long payrefunddate {
        get {
            return this.payrefunddateField;
        }
        set {
            this.payrefunddateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class PostBuyFormAddressStruct {
    
    private int postbuyformadrcountryField;
    
    private string postbuyformadrstreetField;
    
    private string postbuyformadrpostcodeField;
    
    private string postbuyformadrcityField;
    
    private string postbuyformadrfullnameField;
    
    private string postbuyformadrcompanyField;
    
    private string postbuyformadrphoneField;
    
    private string postbuyformadrnipField;
    
    private string postbuyformcreateddateField;
    
    private string postbuyformadrmobilephoneField;
    
    private string postbuyformadrgdnameField;
    
    private string postbuyformadrgdstreetField;
    
    private string postbuyformadrgdpostcodeField;
    
    private string postbuyformadrgdcityField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-country")]
    public int postbuyformadrcountry {
        get {
            return this.postbuyformadrcountryField;
        }
        set {
            this.postbuyformadrcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-street")]
    public string postbuyformadrstreet {
        get {
            return this.postbuyformadrstreetField;
        }
        set {
            this.postbuyformadrstreetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-postcode")]
    public string postbuyformadrpostcode {
        get {
            return this.postbuyformadrpostcodeField;
        }
        set {
            this.postbuyformadrpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-city")]
    public string postbuyformadrcity {
        get {
            return this.postbuyformadrcityField;
        }
        set {
            this.postbuyformadrcityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-full-name")]
    public string postbuyformadrfullname {
        get {
            return this.postbuyformadrfullnameField;
        }
        set {
            this.postbuyformadrfullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-company")]
    public string postbuyformadrcompany {
        get {
            return this.postbuyformadrcompanyField;
        }
        set {
            this.postbuyformadrcompanyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-phone")]
    public string postbuyformadrphone {
        get {
            return this.postbuyformadrphoneField;
        }
        set {
            this.postbuyformadrphoneField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-nip")]
    public string postbuyformadrnip {
        get {
            return this.postbuyformadrnipField;
        }
        set {
            this.postbuyformadrnipField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-created-date")]
    public string postbuyformcreateddate {
        get {
            return this.postbuyformcreateddateField;
        }
        set {
            this.postbuyformcreateddateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-mobile-phone")]
    public string postbuyformadrmobilephone {
        get {
            return this.postbuyformadrmobilephoneField;
        }
        set {
            this.postbuyformadrmobilephoneField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-gd-name")]
    public string postbuyformadrgdname {
        get {
            return this.postbuyformadrgdnameField;
        }
        set {
            this.postbuyformadrgdnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-gd-street")]
    public string postbuyformadrgdstreet {
        get {
            return this.postbuyformadrgdstreetField;
        }
        set {
            this.postbuyformadrgdstreetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-gd-postcode")]
    public string postbuyformadrgdpostcode {
        get {
            return this.postbuyformadrgdpostcodeField;
        }
        set {
            this.postbuyformadrgdpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-adr-gd-city")]
    public string postbuyformadrgdcity {
        get {
            return this.postbuyformadrgdcityField;
        }
        set {
            this.postbuyformadrgdcityField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class PostBuyFormItemStruct {
    
    private int postbuyformitquantityField;
    
    private float postbuyformitamountField;
    
    private long postbuyformitidField;
    
    private string postbuyformittitleField;
    
    private int postbuyformitcountryField;
    
    private float postbuyformitpriceField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-quantity")]
    public int postbuyformitquantity {
        get {
            return this.postbuyformitquantityField;
        }
        set {
            this.postbuyformitquantityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-amount")]
    public float postbuyformitamount {
        get {
            return this.postbuyformitamountField;
        }
        set {
            this.postbuyformitamountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-id")]
    public long postbuyformitid {
        get {
            return this.postbuyformitidField;
        }
        set {
            this.postbuyformitidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-title")]
    public string postbuyformittitle {
        get {
            return this.postbuyformittitleField;
        }
        set {
            this.postbuyformittitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-country")]
    public int postbuyformitcountry {
        get {
            return this.postbuyformitcountryField;
        }
        set {
            this.postbuyformitcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-it-price")]
    public float postbuyformitprice {
        get {
            return this.postbuyformitpriceField;
        }
        set {
            this.postbuyformitpriceField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class PostBuyFormDataStruct {
    
    private long postbuyformidField;
    
    private PostBuyFormItemStruct[] postbuyformitemsField;
    
    private long postbuyformbuyeridField;
    
    private float postbuyformamountField;
    
    private float postbuyformpostageamountField;
    
    private string postbuyformshipmenttitleField;
    
    private int postbuyformshipmenttypeField;
    
    private int postbuyforminvoiceoptionField;
    
    private string postbuyformmsgtosellerField;
    
    private PostBuyFormAddressStruct postbuyforminvoicedataField;
    
    private PostBuyFormAddressStruct postbuyformshipmentaddressField;
    
    private string postbuyformpaytypeField;
    
    private long postbuyformpayidField;
    
    private string postbuyformpaystatusField;
    
    private string postbuyformdateinitField;
    
    private string postbuyformdaterecvField;
    
    private string postbuyformdatecancelField;
    
    private int postbuyformshipmentidField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-id")]
    public long postbuyformid {
        get {
            return this.postbuyformidField;
        }
        set {
            this.postbuyformidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-items")]
    public PostBuyFormItemStruct[] postbuyformitems {
        get {
            return this.postbuyformitemsField;
        }
        set {
            this.postbuyformitemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-buyer-id")]
    public long postbuyformbuyerid {
        get {
            return this.postbuyformbuyeridField;
        }
        set {
            this.postbuyformbuyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-amount")]
    public float postbuyformamount {
        get {
            return this.postbuyformamountField;
        }
        set {
            this.postbuyformamountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-postage-amount")]
    public float postbuyformpostageamount {
        get {
            return this.postbuyformpostageamountField;
        }
        set {
            this.postbuyformpostageamountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-title")]
    public string postbuyformshipmenttitle {
        get {
            return this.postbuyformshipmenttitleField;
        }
        set {
            this.postbuyformshipmenttitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-type")]
    public int postbuyformshipmenttype {
        get {
            return this.postbuyformshipmenttypeField;
        }
        set {
            this.postbuyformshipmenttypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-invoice-option")]
    public int postbuyforminvoiceoption {
        get {
            return this.postbuyforminvoiceoptionField;
        }
        set {
            this.postbuyforminvoiceoptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-msg-to-seller")]
    public string postbuyformmsgtoseller {
        get {
            return this.postbuyformmsgtosellerField;
        }
        set {
            this.postbuyformmsgtosellerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-invoice-data")]
    public PostBuyFormAddressStruct postbuyforminvoicedata {
        get {
            return this.postbuyforminvoicedataField;
        }
        set {
            this.postbuyforminvoicedataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-address")]
    public PostBuyFormAddressStruct postbuyformshipmentaddress {
        get {
            return this.postbuyformshipmentaddressField;
        }
        set {
            this.postbuyformshipmentaddressField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-pay-type")]
    public string postbuyformpaytype {
        get {
            return this.postbuyformpaytypeField;
        }
        set {
            this.postbuyformpaytypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-pay-id")]
    public long postbuyformpayid {
        get {
            return this.postbuyformpayidField;
        }
        set {
            this.postbuyformpayidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-pay-status")]
    public string postbuyformpaystatus {
        get {
            return this.postbuyformpaystatusField;
        }
        set {
            this.postbuyformpaystatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-date-init")]
    public string postbuyformdateinit {
        get {
            return this.postbuyformdateinitField;
        }
        set {
            this.postbuyformdateinitField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-date-recv")]
    public string postbuyformdaterecv {
        get {
            return this.postbuyformdaterecvField;
        }
        set {
            this.postbuyformdaterecvField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-date-cancel")]
    public string postbuyformdatecancel {
        get {
            return this.postbuyformdatecancelField;
        }
        set {
            this.postbuyformdatecancelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("post-buy-form-shipment-id")]
    public int postbuyformshipmentid {
        get {
            return this.postbuyformshipmentidField;
        }
        set {
            this.postbuyformshipmentidField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserPayoutStruct {
    
    private long paytransidField;
    
    private string paytransstatusField;
    
    private float paytransamountField;
    
    private long paytranscreatedateField;
    
    private long paytransrecvdateField;
    
    private long paytranscanceldateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-id")]
    public long paytransid {
        get {
            return this.paytransidField;
        }
        set {
            this.paytransidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-status")]
    public string paytransstatus {
        get {
            return this.paytransstatusField;
        }
        set {
            this.paytransstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-amount")]
    public float paytransamount {
        get {
            return this.paytransamountField;
        }
        set {
            this.paytransamountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-create-date")]
    public long paytranscreatedate {
        get {
            return this.paytranscreatedateField;
        }
        set {
            this.paytranscreatedateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-recv-date")]
    public long paytransrecvdate {
        get {
            return this.paytransrecvdateField;
        }
        set {
            this.paytransrecvdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-cancel-date")]
    public long paytranscanceldate {
        get {
            return this.paytranscanceldateField;
        }
        set {
            this.paytranscanceldateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserPaymentStruct {
    
    private long paytransidField;
    
    private long paytransitidField;
    
    private int paytransselleridField;
    
    private string paytranstypeField;
    
    private string paytransstatusField;
    
    private float paytransamountField;
    
    private long paytranscreatedateField;
    
    private float paytranspriceField;
    
    private int paytranscountField;
    
    private float paytranspostageamountField;
    
    private PaymentDetailsStruct[] paytransdetailsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-id")]
    public long paytransid {
        get {
            return this.paytransidField;
        }
        set {
            this.paytransidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-it-id")]
    public long paytransitid {
        get {
            return this.paytransitidField;
        }
        set {
            this.paytransitidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-seller-id")]
    public int paytranssellerid {
        get {
            return this.paytransselleridField;
        }
        set {
            this.paytransselleridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-type")]
    public string paytranstype {
        get {
            return this.paytranstypeField;
        }
        set {
            this.paytranstypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-status")]
    public string paytransstatus {
        get {
            return this.paytransstatusField;
        }
        set {
            this.paytransstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-amount")]
    public float paytransamount {
        get {
            return this.paytransamountField;
        }
        set {
            this.paytransamountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-create-date")]
    public long paytranscreatedate {
        get {
            return this.paytranscreatedateField;
        }
        set {
            this.paytranscreatedateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-price")]
    public float paytransprice {
        get {
            return this.paytranspriceField;
        }
        set {
            this.paytranspriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-count")]
    public int paytranscount {
        get {
            return this.paytranscountField;
        }
        set {
            this.paytranscountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-postage-amount")]
    public float paytranspostageamount {
        get {
            return this.paytranspostageamountField;
        }
        set {
            this.paytranspostageamountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-details")]
    public PaymentDetailsStruct[] paytransdetails {
        get {
            return this.paytransdetailsField;
        }
        set {
            this.paytransdetailsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class PaymentDetailsStruct {
    
    private long paytransdetailsitidField;
    
    private float paytransdetailspriceField;
    
    private int paytransdetailscountField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-details-it-id")]
    public long paytransdetailsitid {
        get {
            return this.paytransdetailsitidField;
        }
        set {
            this.paytransdetailsitidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-details-price")]
    public float paytransdetailsprice {
        get {
            return this.paytransdetailspriceField;
        }
        set {
            this.paytransdetailspriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-details-count")]
    public int paytransdetailscount {
        get {
            return this.paytransdetailscountField;
        }
        set {
            this.paytransdetailscountField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserIncomingPaymentStruct {
    
    private long paytransidField;
    
    private long paytransitidField;
    
    private int paytransbuyeridField;
    
    private string paytranstypeField;
    
    private string paytransstatusField;
    
    private float paytransamountField;
    
    private long paytranscreatedateField;
    
    private long paytransrecvdateField;
    
    private float paytranspriceField;
    
    private int paytranscountField;
    
    private float paytranspostageamountField;
    
    private PaymentDetailsStruct[] paytransdetailsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-id")]
    public long paytransid {
        get {
            return this.paytransidField;
        }
        set {
            this.paytransidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-it-id")]
    public long paytransitid {
        get {
            return this.paytransitidField;
        }
        set {
            this.paytransitidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-buyer-id")]
    public int paytransbuyerid {
        get {
            return this.paytransbuyeridField;
        }
        set {
            this.paytransbuyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-type")]
    public string paytranstype {
        get {
            return this.paytranstypeField;
        }
        set {
            this.paytranstypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-status")]
    public string paytransstatus {
        get {
            return this.paytransstatusField;
        }
        set {
            this.paytransstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-amount")]
    public float paytransamount {
        get {
            return this.paytransamountField;
        }
        set {
            this.paytransamountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-create-date")]
    public long paytranscreatedate {
        get {
            return this.paytranscreatedateField;
        }
        set {
            this.paytranscreatedateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-recv-date")]
    public long paytransrecvdate {
        get {
            return this.paytransrecvdateField;
        }
        set {
            this.paytransrecvdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-price")]
    public float paytransprice {
        get {
            return this.paytranspriceField;
        }
        set {
            this.paytranspriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-count")]
    public int paytranscount {
        get {
            return this.paytranscountField;
        }
        set {
            this.paytranscountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-postage-amount")]
    public float paytranspostageamount {
        get {
            return this.paytranspostageamountField;
        }
        set {
            this.paytranspostageamountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-trans-details")]
    public PaymentDetailsStruct[] paytransdetails {
        get {
            return this.paytransdetailsField;
        }
        set {
            this.paytransdetailsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class RefundReasonStruct {
    
    private int refundreasonidField;
    
    private string refundreasonnameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("refund-reason-id")]
    public int refundreasonid {
        get {
            return this.refundreasonidField;
        }
        set {
            this.refundreasonidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("refund-reason-name")]
    public string refundreasonname {
        get {
            return this.refundreasonnameField;
        }
        set {
            this.refundreasonnameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class RefundFormStatusResultStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    private int refundformstatusField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("refund-form-status")]
    public int refundformstatus {
        get {
            return this.refundformstatusField;
        }
        set {
            this.refundformstatusField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class RefundFormStatusStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SendRefundFormResultStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    private int sendrefundresultField;
    
    private string sendrefunderrcodeField;
    
    private string sendrefunderrmsgField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("send-refund-result")]
    public int sendrefundresult {
        get {
            return this.sendrefundresultField;
        }
        set {
            this.sendrefundresultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("send-refund-err-code")]
    public string sendrefunderrcode {
        get {
            return this.sendrefunderrcodeField;
        }
        set {
            this.sendrefunderrcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("send-refund-err-msg")]
    public string sendrefunderrmsg {
        get {
            return this.sendrefunderrmsgField;
        }
        set {
            this.sendrefunderrmsgField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SendRefundFormStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    private int refundreasonField;
    
    private int itemquantitysoldField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("refund-reason")]
    public int refundreason {
        get {
            return this.refundreasonField;
        }
        set {
            this.refundreasonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-quantity-sold")]
    public int itemquantitysold {
        get {
            return this.itemquantitysoldField;
        }
        set {
            this.itemquantitysoldField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemRemoveWatchStruct {
    
    private long itemidField;
    
    private int resultField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    public int result {
        get {
            return this.resultField;
        }
        set {
            this.resultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SendReminderMessageResultStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    private int remindermsgresultField;
    
    private string remindermsgerrcodeField;
    
    private string remindermsgerrmsgField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("reminder-msg-result")]
    public int remindermsgresult {
        get {
            return this.remindermsgresultField;
        }
        set {
            this.remindermsgresultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("reminder-msg-err-code")]
    public string remindermsgerrcode {
        get {
            return this.remindermsgerrcodeField;
        }
        set {
            this.remindermsgerrcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("reminder-msg-err-msg")]
    public string remindermsgerrmsg {
        get {
            return this.remindermsgerrmsgField;
        }
        set {
            this.remindermsgerrmsgField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SendReminderMessageStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    private string messagebodyField;
    
    private int includemydataField;
    
    private int sendcctomeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("message-body")]
    public string messagebody {
        get {
            return this.messagebodyField;
        }
        set {
            this.messagebodyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("include-my-data")]
    public int includemydata {
        get {
            return this.includemydataField;
        }
        set {
            this.includemydataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("send-cc-to-me")]
    public int sendcctome {
        get {
            return this.sendcctomeField;
        }
        set {
            this.sendcctomeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class RefundFormDataStruct {
    
    private long refformitidField;
    
    private string refformitnameField;
    
    private long refformitendingtimeField;
    
    private int refformbuyeridField;
    
    private string refformbuyerloginField;
    
    private string refformbuyeremailField;
    
    private long refformbuydateField;
    
    private int refformreasonidField;
    
    private int refformitquantitysoldField;
    
    private int refformremindersentField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-it-id")]
    public long refformitid {
        get {
            return this.refformitidField;
        }
        set {
            this.refformitidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-it-name")]
    public string refformitname {
        get {
            return this.refformitnameField;
        }
        set {
            this.refformitnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-it-ending-time")]
    public long refformitendingtime {
        get {
            return this.refformitendingtimeField;
        }
        set {
            this.refformitendingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-buyer-id")]
    public int refformbuyerid {
        get {
            return this.refformbuyeridField;
        }
        set {
            this.refformbuyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-buyer-login")]
    public string refformbuyerlogin {
        get {
            return this.refformbuyerloginField;
        }
        set {
            this.refformbuyerloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-buyer-email")]
    public string refformbuyeremail {
        get {
            return this.refformbuyeremailField;
        }
        set {
            this.refformbuyeremailField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-buy-date")]
    public long refformbuydate {
        get {
            return this.refformbuydateField;
        }
        set {
            this.refformbuydateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-reason-id")]
    public int refformreasonid {
        get {
            return this.refformreasonidField;
        }
        set {
            this.refformreasonidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-it-quantity-sold")]
    public int refformitquantitysold {
        get {
            return this.refformitquantitysoldField;
        }
        set {
            this.refformitquantitysoldField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ref-form-reminder-sent")]
    public int refformremindersent {
        get {
            return this.refformremindersentField;
        }
        set {
            this.refformremindersentField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CancelRefundWarningResultStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    private int cancelwarningresultField;
    
    private string cancelwarningerrcodeField;
    
    private string cancelwarningerrmsgField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cancel-warning-result")]
    public int cancelwarningresult {
        get {
            return this.cancelwarningresultField;
        }
        set {
            this.cancelwarningresultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cancel-warning-err-code")]
    public string cancelwarningerrcode {
        get {
            return this.cancelwarningerrcodeField;
        }
        set {
            this.cancelwarningerrcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cancel-warning-err-msg")]
    public string cancelwarningerrmsg {
        get {
            return this.cancelwarningerrmsgField;
        }
        set {
            this.cancelwarningerrmsgField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CancelRefundWarningStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CancelRefundFormResultStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    private int cancelrefundresultField;
    
    private string cancelrefunderrcodeField;
    
    private string cancelrefunderrmsgField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cancel-refund-result")]
    public int cancelrefundresult {
        get {
            return this.cancelrefundresultField;
        }
        set {
            this.cancelrefundresultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cancel-refund-err-code")]
    public string cancelrefunderrcode {
        get {
            return this.cancelrefunderrcodeField;
        }
        set {
            this.cancelrefunderrcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cancel-refund-err-msg")]
    public string cancelrefunderrmsg {
        get {
            return this.cancelrefunderrmsgField;
        }
        set {
            this.cancelrefunderrmsgField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CancelRefundDataStruct {
    
    private long itemidField;
    
    private int buyeridField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("buyer-id")]
    public int buyerid {
        get {
            return this.buyeridField;
        }
        set {
            this.buyeridField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserPostBuyDataStruct {
    
    private UserDataStruct userdataField;
    
    private UserSentToDataStruct usersenttodataField;
    
    private string[] userbankaccountsField;
    
    private CompanySecondAddressStruct companysecondaddressField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-data")]
    public UserDataStruct userdata {
        get {
            return this.userdataField;
        }
        set {
            this.userdataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-sent-to-data")]
    public UserSentToDataStruct usersenttodata {
        get {
            return this.usersenttodataField;
        }
        set {
            this.usersenttodataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-bank-accounts")]
    public string[] userbankaccounts {
        get {
            return this.userbankaccountsField;
        }
        set {
            this.userbankaccountsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-second-address")]
    public CompanySecondAddressStruct companysecondaddress {
        get {
            return this.companysecondaddressField;
        }
        set {
            this.companysecondaddressField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserDataStruct {
    
    private long useridField;
    
    private string userloginField;
    
    private int userratingField;
    
    private string userfirstnameField;
    
    private string userlastnameField;
    
    private string usermaidennameField;
    
    private string usercompanyField;
    
    private int usercountryidField;
    
    private int userstateidField;
    
    private string userpostcodeField;
    
    private string usercityField;
    
    private string useraddressField;
    
    private string useremailField;
    
    private string userphoneField;
    
    private string userphone2Field;
    
    private int userssstatusField;
    
    private int sitecountryidField;
    
    private int userjuniorstatusField;
    
    private long userbirthdateField;
    
    private int userhasshopField;
    
    private int usercompanyiconField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public long userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-login")]
    public string userlogin {
        get {
            return this.userloginField;
        }
        set {
            this.userloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-rating")]
    public int userrating {
        get {
            return this.userratingField;
        }
        set {
            this.userratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-first-name")]
    public string userfirstname {
        get {
            return this.userfirstnameField;
        }
        set {
            this.userfirstnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-last-name")]
    public string userlastname {
        get {
            return this.userlastnameField;
        }
        set {
            this.userlastnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-maiden-name")]
    public string usermaidenname {
        get {
            return this.usermaidennameField;
        }
        set {
            this.usermaidennameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-company")]
    public string usercompany {
        get {
            return this.usercompanyField;
        }
        set {
            this.usercompanyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-country-id")]
    public int usercountryid {
        get {
            return this.usercountryidField;
        }
        set {
            this.usercountryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-state-id")]
    public int userstateid {
        get {
            return this.userstateidField;
        }
        set {
            this.userstateidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-postcode")]
    public string userpostcode {
        get {
            return this.userpostcodeField;
        }
        set {
            this.userpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-city")]
    public string usercity {
        get {
            return this.usercityField;
        }
        set {
            this.usercityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-address")]
    public string useraddress {
        get {
            return this.useraddressField;
        }
        set {
            this.useraddressField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-email")]
    public string useremail {
        get {
            return this.useremailField;
        }
        set {
            this.useremailField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-phone")]
    public string userphone {
        get {
            return this.userphoneField;
        }
        set {
            this.userphoneField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-phone2")]
    public string userphone2 {
        get {
            return this.userphone2Field;
        }
        set {
            this.userphone2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-ss-status")]
    public int userssstatus {
        get {
            return this.userssstatusField;
        }
        set {
            this.userssstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-country-id")]
    public int sitecountryid {
        get {
            return this.sitecountryidField;
        }
        set {
            this.sitecountryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-junior-status")]
    public int userjuniorstatus {
        get {
            return this.userjuniorstatusField;
        }
        set {
            this.userjuniorstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-birth-date")]
    public long userbirthdate {
        get {
            return this.userbirthdateField;
        }
        set {
            this.userbirthdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-has-shop")]
    public int userhasshop {
        get {
            return this.userhasshopField;
        }
        set {
            this.userhasshopField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-company-icon")]
    public int usercompanyicon {
        get {
            return this.usercompanyiconField;
        }
        set {
            this.usercompanyiconField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserSentToDataStruct {
    
    private long useridField;
    
    private string userfirstnameField;
    
    private string userlastnameField;
    
    private string usercompanyField;
    
    private int usercountryidField;
    
    private string userpostcodeField;
    
    private string usercityField;
    
    private string useraddressField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public long userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-first-name")]
    public string userfirstname {
        get {
            return this.userfirstnameField;
        }
        set {
            this.userfirstnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-last-name")]
    public string userlastname {
        get {
            return this.userlastnameField;
        }
        set {
            this.userlastnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-company")]
    public string usercompany {
        get {
            return this.usercompanyField;
        }
        set {
            this.usercompanyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-country-id")]
    public int usercountryid {
        get {
            return this.usercountryidField;
        }
        set {
            this.usercountryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-postcode")]
    public string userpostcode {
        get {
            return this.userpostcodeField;
        }
        set {
            this.userpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-city")]
    public string usercity {
        get {
            return this.usercityField;
        }
        set {
            this.usercityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-address")]
    public string useraddress {
        get {
            return this.useraddressField;
        }
        set {
            this.useraddressField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CompanySecondAddressStruct {
    
    private string companyworkerfirstnameField;
    
    private string companyworkerlastnameField;
    
    private string companyaddressField;
    
    private string companypostcodeField;
    
    private string companycityField;
    
    private int companycountryidField;
    
    private int companystateidField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-worker-first-name")]
    public string companyworkerfirstname {
        get {
            return this.companyworkerfirstnameField;
        }
        set {
            this.companyworkerfirstnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-worker-last-name")]
    public string companyworkerlastname {
        get {
            return this.companyworkerlastnameField;
        }
        set {
            this.companyworkerlastnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-address")]
    public string companyaddress {
        get {
            return this.companyaddressField;
        }
        set {
            this.companyaddressField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-postcode")]
    public string companypostcode {
        get {
            return this.companypostcodeField;
        }
        set {
            this.companypostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-city")]
    public string companycity {
        get {
            return this.companycityField;
        }
        set {
            this.companycityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-country-id")]
    public int companycountryid {
        get {
            return this.companycountryidField;
        }
        set {
            this.companycountryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-state-id")]
    public int companystateid {
        get {
            return this.companystateidField;
        }
        set {
            this.companystateidField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemPostBuyDataStruct {
    
    private long itemidField;
    
    private UserPostBuyDataStruct[] userspostbuydataField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("users-post-buy-data")]
    public UserPostBuyDataStruct[] userspostbuydata {
        get {
            return this.userspostbuydataField;
        }
        set {
            this.userspostbuydataField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserBlackListAddResultStruct {
    
    private int useridField;
    
    private int addtoblacklistresultField;
    
    private string addtoblacklisterrcodeField;
    
    private string addtoblacklisterrmsgField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public int userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("add-to-black-list-result")]
    public int addtoblacklistresult {
        get {
            return this.addtoblacklistresultField;
        }
        set {
            this.addtoblacklistresultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("add-to-black-list-err-code")]
    public string addtoblacklisterrcode {
        get {
            return this.addtoblacklisterrcodeField;
        }
        set {
            this.addtoblacklisterrcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("add-to-black-list-err-msg")]
    public string addtoblacklisterrmsg {
        get {
            return this.addtoblacklisterrmsgField;
        }
        set {
            this.addtoblacklisterrmsgField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserBlackListStruct {
    
    private int useridField;
    
    private string userblacklistnoteField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public int userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-black-list-note")]
    public string userblacklistnote {
        get {
            return this.userblacklistnoteField;
        }
        set {
            this.userblacklistnoteField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SpecialAuctionStruct {
    
    private long itidField;
    
    private string itnameField;
    
    private float itpriceField;
    
    private int itisbuynowField;
    
    private float itbuynowpriceField;
    
    private int itbidcountField;
    
    private int itfotocountField;
    
    private long ittimeleftField;
    
    private long itendingtimeField;
    
    private int itcountryField;
    
    private int itislistingthumbField;
    
    private int itisescrowField;
    
    private long itselleridField;
    
    private float itsendcostpriceField;
    
    private int itisboldtitleField;
    
    private long itstartingtimeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-id")]
    public long itid {
        get {
            return this.itidField;
        }
        set {
            this.itidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-name")]
    public string itname {
        get {
            return this.itnameField;
        }
        set {
            this.itnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-price")]
    public float itprice {
        get {
            return this.itpriceField;
        }
        set {
            this.itpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-buy-now")]
    public int itisbuynow {
        get {
            return this.itisbuynowField;
        }
        set {
            this.itisbuynowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
    public float itbuynowprice {
        get {
            return this.itbuynowpriceField;
        }
        set {
            this.itbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
    public int itbidcount {
        get {
            return this.itbidcountField;
        }
        set {
            this.itbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
    public int itfotocount {
        get {
            return this.itfotocountField;
        }
        set {
            this.itfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-time-left")]
    public long ittimeleft {
        get {
            return this.ittimeleftField;
        }
        set {
            this.ittimeleftField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-ending-time")]
    public long itendingtime {
        get {
            return this.itendingtimeField;
        }
        set {
            this.itendingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-country")]
    public int itcountry {
        get {
            return this.itcountryField;
        }
        set {
            this.itcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-listing-thumb")]
    public int itislistingthumb {
        get {
            return this.itislistingthumbField;
        }
        set {
            this.itislistingthumbField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-escrow")]
    public int itisescrow {
        get {
            return this.itisescrowField;
        }
        set {
            this.itisescrowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
    public long itsellerid {
        get {
            return this.itselleridField;
        }
        set {
            this.itselleridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-send-cost-price")]
    public float itsendcostprice {
        get {
            return this.itsendcostpriceField;
        }
        set {
            this.itsendcostpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-bold-title")]
    public int itisboldtitle {
        get {
            return this.itisboldtitleField;
        }
        set {
            this.itisboldtitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
    public long itstartingtime {
        get {
            return this.itstartingtimeField;
        }
        set {
            this.itstartingtimeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class InvoiceDataExtStruct {
    
    private string taxpayernumberField;
    
    private string userfirstnameField;
    
    private string userlastnameField;
    
    private string usercompanyField;
    
    private int usercountryidField;
    
    private string userpostcodeField;
    
    private string usercityField;
    
    private string useraddressField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("taxpayer-number")]
    public string taxpayernumber {
        get {
            return this.taxpayernumberField;
        }
        set {
            this.taxpayernumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-first-name")]
    public string userfirstname {
        get {
            return this.userfirstnameField;
        }
        set {
            this.userfirstnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-last-name")]
    public string userlastname {
        get {
            return this.userlastnameField;
        }
        set {
            this.userlastnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-company")]
    public string usercompany {
        get {
            return this.usercompanyField;
        }
        set {
            this.usercompanyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-country-id")]
    public int usercountryid {
        get {
            return this.usercountryidField;
        }
        set {
            this.usercountryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-postcode")]
    public string userpostcode {
        get {
            return this.userpostcodeField;
        }
        set {
            this.userpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-city")]
    public string usercity {
        get {
            return this.usercityField;
        }
        set {
            this.usercityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-address")]
    public string useraddress {
        get {
            return this.useraddressField;
        }
        set {
            this.useraddressField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SofDataStruct {
    
    private long sofitemidField;
    
    private int sofstatusField;
    
    private long sofdateField;
    
    private long sofbuyeridField;
    
    private string sofpaymentoptionField;
    
    private string sofbankaccountField;
    
    private string softransportoptionField;
    
    private UserSentToDataStruct usersenttodataField;
    
    private int sofinvoiceoptionField;
    
    private InvoiceDataExtStruct invoicedataextField;
    
    private string sofbuyertosellermsgField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sof-item-id")]
    public long sofitemid {
        get {
            return this.sofitemidField;
        }
        set {
            this.sofitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sof-status")]
    public int sofstatus {
        get {
            return this.sofstatusField;
        }
        set {
            this.sofstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sof-date")]
    public long sofdate {
        get {
            return this.sofdateField;
        }
        set {
            this.sofdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sof-buyer-id")]
    public long sofbuyerid {
        get {
            return this.sofbuyeridField;
        }
        set {
            this.sofbuyeridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sof-payment-option")]
    public string sofpaymentoption {
        get {
            return this.sofpaymentoptionField;
        }
        set {
            this.sofpaymentoptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sof-bank-account")]
    public string sofbankaccount {
        get {
            return this.sofbankaccountField;
        }
        set {
            this.sofbankaccountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sof-transport-option")]
    public string softransportoption {
        get {
            return this.softransportoptionField;
        }
        set {
            this.softransportoptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-sent-to-data")]
    public UserSentToDataStruct usersenttodata {
        get {
            return this.usersenttodataField;
        }
        set {
            this.usersenttodataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sof-invoice-option")]
    public int sofinvoiceoption {
        get {
            return this.sofinvoiceoptionField;
        }
        set {
            this.sofinvoiceoptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("invoice-data-ext")]
    public InvoiceDataExtStruct invoicedataext {
        get {
            return this.invoicedataextField;
        }
        set {
            this.invoicedataextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sof-buyer-to-seller-msg")]
    public string sofbuyertosellermsg {
        get {
            return this.sofbuyertosellermsgField;
        }
        set {
            this.sofbuyertosellermsgField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemImagesStruct {
    
    private long itemidField;
    
    private ItemImageList[] itemimagesField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-images")]
    public ItemImageList[] itemimages {
        get {
            return this.itemimagesField;
        }
        set {
            this.itemimagesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemImageList {
    
    private int imagetypeField;
    
    private string imageurlField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("image-type")]
    public int imagetype {
        get {
            return this.imagetypeField;
        }
        set {
            this.imagetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("image-url")]
    public string imageurl {
        get {
            return this.imageurlField;
        }
        set {
            this.imageurlField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemGetImage {
    
    private long itidField;
    
    private long itselleridField;
    
    private int itfotocountField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-id")]
    public long itid {
        get {
            return this.itidField;
        }
        set {
            this.itidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
    public long itsellerid {
        get {
            return this.itselleridField;
        }
        set {
            this.itselleridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
    public int itfotocount {
        get {
            return this.itfotocountField;
        }
        set {
            this.itfotocountField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FavouritesCategoriesStruct {
    
    private int scategoryidField;
    
    private int ssubscriptionstatusField;
    
    private int spositionField;
    
    private int sbuynowonlyField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-category-id")]
    public int scategoryid {
        get {
            return this.scategoryidField;
        }
        set {
            this.scategoryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-subscription-status")]
    public int ssubscriptionstatus {
        get {
            return this.ssubscriptionstatusField;
        }
        set {
            this.ssubscriptionstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-position")]
    public int sposition {
        get {
            return this.spositionField;
        }
        set {
            this.spositionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-buy-now-only")]
    public int sbuynowonly {
        get {
            return this.sbuynowonlyField;
        }
        set {
            this.sbuynowonlyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FavouritesSellersStruct {
    
    private int sfavuseridField;
    
    private int ssubscriptionstatusField;
    
    private int spositionField;
    
    private int sbuynowonlyField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-fav-user-id")]
    public int sfavuserid {
        get {
            return this.sfavuseridField;
        }
        set {
            this.sfavuseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-subscription-status")]
    public int ssubscriptionstatus {
        get {
            return this.ssubscriptionstatusField;
        }
        set {
            this.ssubscriptionstatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-position")]
    public int sposition {
        get {
            return this.spositionField;
        }
        set {
            this.spositionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-buy-now-only")]
    public int sbuynowonly {
        get {
            return this.sbuynowonlyField;
        }
        set {
            this.sbuynowonlyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CompanyExtraDataStruct {
    
    private string companytypeField;
    
    private string companynipField;
    
    private string companyregonField;
    
    private string companykrsField;
    
    private string companyactivitysortField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-type")]
    public string companytype {
        get {
            return this.companytypeField;
        }
        set {
            this.companytypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-nip")]
    public string companynip {
        get {
            return this.companynipField;
        }
        set {
            this.companynipField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-regon")]
    public string companyregon {
        get {
            return this.companyregonField;
        }
        set {
            this.companyregonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-krs")]
    public string companykrs {
        get {
            return this.companykrsField;
        }
        set {
            this.companykrsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-activity-sort")]
    public string companyactivitysort {
        get {
            return this.companyactivitysortField;
        }
        set {
            this.companyactivitysortField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class InvoiceDataStruct {
    
    private string companynameField;
    
    private string companynipField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-name")]
    public string companyname {
        get {
            return this.companynameField;
        }
        set {
            this.companynameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-nip")]
    public string companynip {
        get {
            return this.companynipField;
        }
        set {
            this.companynipField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class StateInfoStruct {
    
    private int stateidField;
    
    private string statenameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("state-id")]
    public int stateid {
        get {
            return this.stateidField;
        }
        set {
            this.stateidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("state-name")]
    public string statename {
        get {
            return this.statenameField;
        }
        set {
            this.statenameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ServiceInfoStruct {
    
    private int anitidField;
    
    private int ancatidField;
    
    private string anittitleField;
    
    private byte[] anitbodyField;
    
    private int countryidField;
    
    private long anitdateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-it-id")]
    public int anitid {
        get {
            return this.anitidField;
        }
        set {
            this.anitidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-cat-id")]
    public int ancatid {
        get {
            return this.ancatidField;
        }
        set {
            this.ancatidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-it-title")]
    public string anittitle {
        get {
            return this.anittitleField;
        }
        set {
            this.anittitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-it-body", DataType="base64Binary")]
    public byte[] anitbody {
        get {
            return this.anitbodyField;
        }
        set {
            this.anitbodyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("country-id")]
    public int countryid {
        get {
            return this.countryidField;
        }
        set {
            this.countryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-it-date")]
    public long anitdate {
        get {
            return this.anitdateField;
        }
        set {
            this.anitdateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ServiceInfoCatStruct {
    
    private int ancatidField;
    
    private string ancatnameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-cat-id")]
    public int ancatid {
        get {
            return this.ancatidField;
        }
        set {
            this.ancatidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("an-cat-name")]
    public string ancatname {
        get {
            return this.ancatnameField;
        }
        set {
            this.ancatnameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class BlackListResStruct {
    
    private long useridField;
    
    private int resultField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public long userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    public int result {
        get {
            return this.resultField;
        }
        set {
            this.resultField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class BlackListStruct {
    
    private long useridField;
    
    private string userloginField;
    
    private int userratingField;
    
    private int usercountryField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-id")]
    public long userid {
        get {
            return this.useridField;
        }
        set {
            this.useridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-login")]
    public string userlogin {
        get {
            return this.userloginField;
        }
        set {
            this.userloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-rating")]
    public int userrating {
        get {
            return this.userratingField;
        }
        set {
            this.userratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-country")]
    public int usercountry {
        get {
            return this.usercountryField;
        }
        set {
            this.usercountryField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class WaitFeedbackStruct {
    
    private int feitemidField;
    
    private string feitemnameField;
    
    private int fetouseridField;
    
    private int feopField;
    
    private string feanscommenttypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-item-id")]
    public int feitemid {
        get {
            return this.feitemidField;
        }
        set {
            this.feitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-item-name")]
    public string feitemname {
        get {
            return this.feitemnameField;
        }
        set {
            this.feitemnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-to-user-id")]
    public int fetouserid {
        get {
            return this.fetouseridField;
        }
        set {
            this.fetouseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-op")]
    public int feop {
        get {
            return this.feopField;
        }
        set {
            this.feopField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-ans-comment-type")]
    public string feanscommenttype {
        get {
            return this.feanscommenttypeField;
        }
        set {
            this.feanscommenttypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemInfoExt {
    
    private long itidField;
    
    private int itcountryField;
    
    private string itnameField;
    
    private float itpriceField;
    
    private int itbidcountField;
    
    private long itendingtimeField;
    
    private long itselleridField;
    
    private string itsellerloginField;
    
    private int itsellerratingField;
    
    private long itstartingtimeField;
    
    private float itstartingpriceField;
    
    private int itquantityField;
    
    private int itfotocountField;
    
    private float itreservepriceField;
    
    private string itlocationField;
    
    private float itbuynowpriceField;
    
    private int itbuynowactiveField;
    
    private int ithighbidderField;
    
    private string ithighbidderloginField;
    
    private string itdescriptionField;
    
    private int itoptionsField;
    
    private int itstateField;
    
    private float itwiretransferField;
    
    private float itpostdeliveryField;
    
    private string itpostinfoField;
    
    private int itquantitytypeField;
    
    private int itisecoField;
    
    private long ithitcountField;
    
    private string itpostcodeField;
    
    private int itvatinvoiceField;
    
    private string itbankaccount1Field;
    
    private string itbankaccount2Field;
    
    private int itstartingquantityField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-id")]
    public long itid {
        get {
            return this.itidField;
        }
        set {
            this.itidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-country")]
    public int itcountry {
        get {
            return this.itcountryField;
        }
        set {
            this.itcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-name")]
    public string itname {
        get {
            return this.itnameField;
        }
        set {
            this.itnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-price")]
    public float itprice {
        get {
            return this.itpriceField;
        }
        set {
            this.itpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
    public int itbidcount {
        get {
            return this.itbidcountField;
        }
        set {
            this.itbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-ending-time")]
    public long itendingtime {
        get {
            return this.itendingtimeField;
        }
        set {
            this.itendingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
    public long itsellerid {
        get {
            return this.itselleridField;
        }
        set {
            this.itselleridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-login")]
    public string itsellerlogin {
        get {
            return this.itsellerloginField;
        }
        set {
            this.itsellerloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-rating")]
    public int itsellerrating {
        get {
            return this.itsellerratingField;
        }
        set {
            this.itsellerratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
    public long itstartingtime {
        get {
            return this.itstartingtimeField;
        }
        set {
            this.itstartingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-price")]
    public float itstartingprice {
        get {
            return this.itstartingpriceField;
        }
        set {
            this.itstartingpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-quantity")]
    public int itquantity {
        get {
            return this.itquantityField;
        }
        set {
            this.itquantityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
    public int itfotocount {
        get {
            return this.itfotocountField;
        }
        set {
            this.itfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-reserve-price")]
    public float itreserveprice {
        get {
            return this.itreservepriceField;
        }
        set {
            this.itreservepriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-location")]
    public string itlocation {
        get {
            return this.itlocationField;
        }
        set {
            this.itlocationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
    public float itbuynowprice {
        get {
            return this.itbuynowpriceField;
        }
        set {
            this.itbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-active")]
    public int itbuynowactive {
        get {
            return this.itbuynowactiveField;
        }
        set {
            this.itbuynowactiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-high-bidder")]
    public int ithighbidder {
        get {
            return this.ithighbidderField;
        }
        set {
            this.ithighbidderField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-high-bidder-login")]
    public string ithighbidderlogin {
        get {
            return this.ithighbidderloginField;
        }
        set {
            this.ithighbidderloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-description")]
    public string itdescription {
        get {
            return this.itdescriptionField;
        }
        set {
            this.itdescriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-options")]
    public int itoptions {
        get {
            return this.itoptionsField;
        }
        set {
            this.itoptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-state")]
    public int itstate {
        get {
            return this.itstateField;
        }
        set {
            this.itstateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-wire-transfer")]
    public float itwiretransfer {
        get {
            return this.itwiretransferField;
        }
        set {
            this.itwiretransferField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-post-delivery")]
    public float itpostdelivery {
        get {
            return this.itpostdeliveryField;
        }
        set {
            this.itpostdeliveryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-post-info")]
    public string itpostinfo {
        get {
            return this.itpostinfoField;
        }
        set {
            this.itpostinfoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-quantity-type")]
    public int itquantitytype {
        get {
            return this.itquantitytypeField;
        }
        set {
            this.itquantitytypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-eco")]
    public int itiseco {
        get {
            return this.itisecoField;
        }
        set {
            this.itisecoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-hit-count")]
    public long ithitcount {
        get {
            return this.ithitcountField;
        }
        set {
            this.ithitcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-postcode")]
    public string itpostcode {
        get {
            return this.itpostcodeField;
        }
        set {
            this.itpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-vat-invoice")]
    public int itvatinvoice {
        get {
            return this.itvatinvoiceField;
        }
        set {
            this.itvatinvoiceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bank-account1")]
    public string itbankaccount1 {
        get {
            return this.itbankaccount1Field;
        }
        set {
            this.itbankaccount1Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bank-account2")]
    public string itbankaccount2 {
        get {
            return this.itbankaccount2Field;
        }
        set {
            this.itbankaccount2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-quantity")]
    public int itstartingquantity {
        get {
            return this.itstartingquantityField;
        }
        set {
            this.itstartingquantityField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FeedbackResultStruct {
    
    private int feitemidField;
    
    private int feidField;
    
    private string fefaultcodeField;
    
    private string fefaultdescField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-item-id")]
    public int feitemid {
        get {
            return this.feitemidField;
        }
        set {
            this.feitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-id")]
    public int feid {
        get {
            return this.feidField;
        }
        set {
            this.feidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-fault-code")]
    public string fefaultcode {
        get {
            return this.fefaultcodeField;
        }
        set {
            this.fefaultcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-fault-desc")]
    public string fefaultdesc {
        get {
            return this.fefaultdescField;
        }
        set {
            this.fefaultdescField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FeedbackManyStruct {
    
    private int feitemidField;
    
    private int fefromuseridField;
    
    private int fetouseridField;
    
    private string fecommentField;
    
    private string fecommenttypeField;
    
    private int feopField;
    
    private SellRatingEstimationStruct[] feratingField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-item-id")]
    public int feitemid {
        get {
            return this.feitemidField;
        }
        set {
            this.feitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-from-user-id")]
    public int fefromuserid {
        get {
            return this.fefromuseridField;
        }
        set {
            this.fefromuseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-to-user-id")]
    public int fetouserid {
        get {
            return this.fetouseridField;
        }
        set {
            this.fetouseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-comment")]
    public string fecomment {
        get {
            return this.fecommentField;
        }
        set {
            this.fecommentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-comment-type")]
    public string fecommenttype {
        get {
            return this.fecommenttypeField;
        }
        set {
            this.fecommenttypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-op")]
    public int feop {
        get {
            return this.feopField;
        }
        set {
            this.feopField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fe-rating")]
    public SellRatingEstimationStruct[] ferating {
        get {
            return this.feratingField;
        }
        set {
            this.feratingField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellRatingEstimationStruct {
    
    private int sellratinggroupidField;
    
    private int sellratinggroupestimationField;
    
    private int sellratingreasonidField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-id")]
    public int sellratinggroupid {
        get {
            return this.sellratinggroupidField;
        }
        set {
            this.sellratinggroupidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-estimation")]
    public int sellratinggroupestimation {
        get {
            return this.sellratinggroupestimationField;
        }
        set {
            this.sellratinggroupestimationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-reason-id")]
    public int sellratingreasonid {
        get {
            return this.sellratingreasonidField;
        }
        set {
            this.sellratingreasonidField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class TemplateInfoType {
    
    private int templateidField;
    
    private string templatenameField;
    
    private byte[] templatethumbField;
    
    private byte[] templatedescimagesField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("template-id")]
    public int templateid {
        get {
            return this.templateidField;
        }
        set {
            this.templateidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("template-name")]
    public string templatename {
        get {
            return this.templatenameField;
        }
        set {
            this.templatenameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("template-thumb", DataType="base64Binary")]
    public byte[] templatethumb {
        get {
            return this.templatethumbField;
        }
        set {
            this.templatethumbField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("template-desc-images", DataType="base64Binary")]
    public byte[] templatedescimages {
        get {
            return this.templatedescimagesField;
        }
        set {
            this.templatedescimagesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CountryInfoType {
    
    private int countryidField;
    
    private string countrynameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("country-id")]
    public int countryid {
        get {
            return this.countryidField;
        }
        set {
            this.countryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("country-name")]
    public string countryname {
        get {
            return this.countrynameField;
        }
        set {
            this.countrynameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemTransStruct {
    
    private string[] bidwonlistField;
    
    private MyContactList usercontactlistField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("bid-won-list")]
    public string[] bidwonlist {
        get {
            return this.bidwonlistField;
        }
        set {
            this.bidwonlistField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-contact-list")]
    public MyContactList usercontactlist {
        get {
            return this.usercontactlistField;
        }
        set {
            this.usercontactlistField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class MyContactList {
    
    private int contactuseridField;
    
    private string contactnickField;
    
    private string contactfirstnameField;
    
    private string contactlastnameField;
    
    private string contactcompanyField;
    
    private string contactemailField;
    
    private string contactstreetField;
    
    private string contactpostcodeField;
    
    private string contactcityField;
    
    private string contactcountryField;
    
    private string contactphoneField;
    
    private string contactphone2Field;
    
    private string contactratingField;
    
    private string contactblockedField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-user-id")]
    public int contactuserid {
        get {
            return this.contactuseridField;
        }
        set {
            this.contactuseridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-nick")]
    public string contactnick {
        get {
            return this.contactnickField;
        }
        set {
            this.contactnickField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-first-name")]
    public string contactfirstname {
        get {
            return this.contactfirstnameField;
        }
        set {
            this.contactfirstnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-last-name")]
    public string contactlastname {
        get {
            return this.contactlastnameField;
        }
        set {
            this.contactlastnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-company")]
    public string contactcompany {
        get {
            return this.contactcompanyField;
        }
        set {
            this.contactcompanyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-email")]
    public string contactemail {
        get {
            return this.contactemailField;
        }
        set {
            this.contactemailField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-street")]
    public string contactstreet {
        get {
            return this.contactstreetField;
        }
        set {
            this.contactstreetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-postcode")]
    public string contactpostcode {
        get {
            return this.contactpostcodeField;
        }
        set {
            this.contactpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-city")]
    public string contactcity {
        get {
            return this.contactcityField;
        }
        set {
            this.contactcityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-country")]
    public string contactcountry {
        get {
            return this.contactcountryField;
        }
        set {
            this.contactcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-phone")]
    public string contactphone {
        get {
            return this.contactphoneField;
        }
        set {
            this.contactphoneField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-phone2")]
    public string contactphone2 {
        get {
            return this.contactphone2Field;
        }
        set {
            this.contactphone2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-rating")]
    public string contactrating {
        get {
            return this.contactratingField;
        }
        set {
            this.contactratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("contact-blocked")]
    public string contactblocked {
        get {
            return this.contactblockedField;
        }
        set {
            this.contactblockedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemBilling {
    
    private string binameField;
    
    private string bivalueField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("bi-name")]
    public string biname {
        get {
            return this.binameField;
        }
        set {
            this.binameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("bi-value")]
    public string bivalue {
        get {
            return this.bivalueField;
        }
        set {
            this.bivalueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SearchOptType {
    
    private string searchstringField;
    
    private int searchoptionsField;
    
    private int searchorderField;
    
    private int searchordertypeField;
    
    private int searchcountryField;
    
    private int searchcategoryField;
    
    private int searchoffsetField;
    
    private string searchcityField;
    
    private int searchstateField;
    
    private float searchpricefromField;
    
    private float searchpricetoField;
    
    private int searchlimitField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-string")]
    public string searchstring {
        get {
            return this.searchstringField;
        }
        set {
            this.searchstringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-options")]
    public int searchoptions {
        get {
            return this.searchoptionsField;
        }
        set {
            this.searchoptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-order")]
    public int searchorder {
        get {
            return this.searchorderField;
        }
        set {
            this.searchorderField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-order-type")]
    public int searchordertype {
        get {
            return this.searchordertypeField;
        }
        set {
            this.searchordertypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-country")]
    public int searchcountry {
        get {
            return this.searchcountryField;
        }
        set {
            this.searchcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-category")]
    public int searchcategory {
        get {
            return this.searchcategoryField;
        }
        set {
            this.searchcategoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-offset")]
    public int searchoffset {
        get {
            return this.searchoffsetField;
        }
        set {
            this.searchoffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-city")]
    public string searchcity {
        get {
            return this.searchcityField;
        }
        set {
            this.searchcityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-state")]
    public int searchstate {
        get {
            return this.searchstateField;
        }
        set {
            this.searchstateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-price-from")]
    public float searchpricefrom {
        get {
            return this.searchpricefromField;
        }
        set {
            this.searchpricefromField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-price-to")]
    public float searchpriceto {
        get {
            return this.searchpricetoField;
        }
        set {
            this.searchpricetoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("search-limit")]
    public int searchlimit {
        get {
            return this.searchlimitField;
        }
        set {
            this.searchlimitField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class MyFeedbackListStruct2 {
    
    private string[] feedbackarrayField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("feedback-array")]
    public string[] feedbackarray {
        get {
            return this.feedbackarrayField;
        }
        set {
            this.feedbackarrayField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class MyAccountStruct2 {
    
    private string[] myaccountarrayField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("my-account-array")]
    public string[] myaccountarray {
        get {
            return this.myaccountarrayField;
        }
        set {
            this.myaccountarrayField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteJournalInfo {
    
    private int itemsnumberField;
    
    private long lastitemdateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("items-number")]
    public int itemsnumber {
        get {
            return this.itemsnumberField;
        }
        set {
            this.itemsnumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("last-item-date")]
    public long lastitemdate {
        get {
            return this.lastitemdateField;
        }
        set {
            this.lastitemdateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteJournal {
    
    private long rowidField;
    
    private long itemidField;
    
    private string changetypeField;
    
    private long changedateField;
    
    private float currentpriceField;
    
    private long itemselleridField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("row-id")]
    public long rowid {
        get {
            return this.rowidField;
        }
        set {
            this.rowidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-id")]
    public long itemid {
        get {
            return this.itemidField;
        }
        set {
            this.itemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("change-type")]
    public string changetype {
        get {
            return this.changetypeField;
        }
        set {
            this.changetypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("change-date")]
    public long changedate {
        get {
            return this.changedateField;
        }
        set {
            this.changedateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("current-price")]
    public float currentprice {
        get {
            return this.currentpriceField;
        }
        set {
            this.currentpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-seller-id")]
    public long itemsellerid {
        get {
            return this.itemselleridField;
        }
        set {
            this.itemselleridField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FeedbackList {
    
    private int fidField;
    
    private int fitemidField;
    
    private int ffromidField;
    
    private int ftoidField;
    
    private long fdateField;
    
    private string ftypeField;
    
    private string fdescField;
    
    private long fcorrectdateField;
    
    private string fcorrecttextField;
    
    private string freceivertypeField;
    
    private string fuserloginField;
    
    private string fuserratingField;
    
    private string fusercountryField;
    
    private int fuserblockedField;
    
    private int fuserssellerField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-id")]
    public int fid {
        get {
            return this.fidField;
        }
        set {
            this.fidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-item-id")]
    public int fitemid {
        get {
            return this.fitemidField;
        }
        set {
            this.fitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-from-id")]
    public int ffromid {
        get {
            return this.ffromidField;
        }
        set {
            this.ffromidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-to-id")]
    public int ftoid {
        get {
            return this.ftoidField;
        }
        set {
            this.ftoidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-date")]
    public long fdate {
        get {
            return this.fdateField;
        }
        set {
            this.fdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-type")]
    public string ftype {
        get {
            return this.ftypeField;
        }
        set {
            this.ftypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-desc")]
    public string fdesc {
        get {
            return this.fdescField;
        }
        set {
            this.fdescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-correct-date")]
    public long fcorrectdate {
        get {
            return this.fcorrectdateField;
        }
        set {
            this.fcorrectdateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-correct-text")]
    public string fcorrecttext {
        get {
            return this.fcorrecttextField;
        }
        set {
            this.fcorrecttextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-receiver-type")]
    public string freceivertype {
        get {
            return this.freceivertypeField;
        }
        set {
            this.freceivertypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-login")]
    public string fuserlogin {
        get {
            return this.fuserloginField;
        }
        set {
            this.fuserloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-rating")]
    public string fuserrating {
        get {
            return this.fuserratingField;
        }
        set {
            this.fuserratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-country")]
    public string fusercountry {
        get {
            return this.fusercountryField;
        }
        set {
            this.fusercountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-blocked")]
    public int fuserblocked {
        get {
            return this.fuserblockedField;
        }
        set {
            this.fuserblockedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("f-user-sseller")]
    public int fusersseller {
        get {
            return this.fuserssellerField;
        }
        set {
            this.fuserssellerField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class BidListStruct2 {
    
    private string[] bidsarrayField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("bids-array")]
    public string[] bidsarray {
        get {
            return this.bidsarrayField;
        }
        set {
            this.bidsarrayField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellRatingAverageStruct {
    
    private string sellratinggrouptitleField;
    
    private float sellratinggroupaverageField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-title")]
    public string sellratinggrouptitle {
        get {
            return this.sellratinggrouptitleField;
        }
        set {
            this.sellratinggrouptitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-rating-group-average")]
    public float sellratinggroupaverage {
        get {
            return this.sellratinggroupaverageField;
        }
        set {
            this.sellratinggroupaverageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ShowUserFeedbacks {
    
    private int userflastweekField;
    
    private int userflastmonthField;
    
    private int userfallField;
    
    private int userfsolditemsField;
    
    private int userfbuyitemsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-last-week")]
    public int userflastweek {
        get {
            return this.userflastweekField;
        }
        set {
            this.userflastweekField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-last-month")]
    public int userflastmonth {
        get {
            return this.userflastmonthField;
        }
        set {
            this.userflastmonthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-all")]
    public int userfall {
        get {
            return this.userfallField;
        }
        set {
            this.userfallField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-sold-items")]
    public int userfsolditems {
        get {
            return this.userfsolditemsField;
        }
        set {
            this.userfsolditemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("user-f-buy-items")]
    public int userfbuyitems {
        get {
            return this.userfbuyitemsField;
        }
        set {
            this.userfbuyitemsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SearchResponseType {
    
    private long sitidField;
    
    private string sitnameField;
    
    private float sitpriceField;
    
    private float sitstartingpriceField;
    
    private int sitisbuynowField;
    
    private float sitbuynowpriceField;
    
    private int sitbidcountField;
    
    private int sitfotocountField;
    
    private long sitstartingtimeField;
    
    private long sitendingtimeField;
    
    private long sittimeleftField;
    
    private string sitcityField;
    
    private int sitstateField;
    
    private int sitcountryField;
    
    private int sitcategoryidField;
    
    private int sitfeaturedField;
    
    private string sitthumburlField;
    
    private int sitthumbField;
    
    private float sitpostageField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-id")]
    public long sitid {
        get {
            return this.sitidField;
        }
        set {
            this.sitidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-name")]
    public string sitname {
        get {
            return this.sitnameField;
        }
        set {
            this.sitnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-price")]
    public float sitprice {
        get {
            return this.sitpriceField;
        }
        set {
            this.sitpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-starting-price")]
    public float sitstartingprice {
        get {
            return this.sitstartingpriceField;
        }
        set {
            this.sitstartingpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-is-buy-now")]
    public int sitisbuynow {
        get {
            return this.sitisbuynowField;
        }
        set {
            this.sitisbuynowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-buy-now-price")]
    public float sitbuynowprice {
        get {
            return this.sitbuynowpriceField;
        }
        set {
            this.sitbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-bid-count")]
    public int sitbidcount {
        get {
            return this.sitbidcountField;
        }
        set {
            this.sitbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-foto-count")]
    public int sitfotocount {
        get {
            return this.sitfotocountField;
        }
        set {
            this.sitfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-starting-time")]
    public long sitstartingtime {
        get {
            return this.sitstartingtimeField;
        }
        set {
            this.sitstartingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-ending-time")]
    public long sitendingtime {
        get {
            return this.sitendingtimeField;
        }
        set {
            this.sitendingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-time-left")]
    public long sittimeleft {
        get {
            return this.sittimeleftField;
        }
        set {
            this.sittimeleftField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-city")]
    public string sitcity {
        get {
            return this.sitcityField;
        }
        set {
            this.sitcityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-state")]
    public int sitstate {
        get {
            return this.sitstateField;
        }
        set {
            this.sitstateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-country")]
    public int sitcountry {
        get {
            return this.sitcountryField;
        }
        set {
            this.sitcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-category-id")]
    public int sitcategoryid {
        get {
            return this.sitcategoryidField;
        }
        set {
            this.sitcategoryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-featured")]
    public int sitfeatured {
        get {
            return this.sitfeaturedField;
        }
        set {
            this.sitfeaturedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-thumb-url")]
    public string sitthumburl {
        get {
            return this.sitthumburlField;
        }
        set {
            this.sitthumburlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-thumb")]
    public int sitthumb {
        get {
            return this.sitthumbField;
        }
        set {
            this.sitthumbField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("s-it-postage")]
    public float sitpostage {
        get {
            return this.sitpostageField;
        }
        set {
            this.sitpostageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class InfoCatList {
    
    private long catidField;
    
    private string catnameField;
    
    private long catitemscountField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-id")]
    public long catid {
        get {
            return this.catidField;
        }
        set {
            this.catidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-name")]
    public string catname {
        get {
            return this.catnameField;
        }
        set {
            this.catnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-items-count")]
    public long catitemscount {
        get {
            return this.catitemscountField;
        }
        set {
            this.catitemscountField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class PriceCatInfo {
    
    private float priceminField;
    
    private float pricemaxField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("price-min")]
    public float pricemin {
        get {
            return this.priceminField;
        }
        set {
            this.priceminField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("price-max")]
    public float pricemax {
        get {
            return this.pricemaxField;
        }
        set {
            this.pricemaxField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class DurationTimeInfo {
    
    private int durationoptionField;
    
    private int durationvalueField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("duration-option")]
    public int durationoption {
        get {
            return this.durationoptionField;
        }
        set {
            this.durationoptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("duration-value")]
    public int durationvalue {
        get {
            return this.durationvalueField;
        }
        set {
            this.durationvalueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SysStatusType {
    
    private int countryidField;
    
    private string programversionField;
    
    private string catsversionField;
    
    private string apiversionField;
    
    private string attribversionField;
    
    private string formsellversionField;
    
    private string siteversionField;
    
    private long verkeyField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("country-id")]
    public int countryid {
        get {
            return this.countryidField;
        }
        set {
            this.countryidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("program-version")]
    public string programversion {
        get {
            return this.programversionField;
        }
        set {
            this.programversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cats-version")]
    public string catsversion {
        get {
            return this.catsversionField;
        }
        set {
            this.catsversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("api-version")]
    public string apiversion {
        get {
            return this.apiversionField;
        }
        set {
            this.apiversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("attrib-version")]
    public string attribversion {
        get {
            return this.attribversionField;
        }
        set {
            this.attribversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("form-sell-version")]
    public string formsellversion {
        get {
            return this.formsellversionField;
        }
        set {
            this.formsellversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-version")]
    public string siteversion {
        get {
            return this.siteversionField;
        }
        set {
            this.siteversionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("ver-key")]
    public long verkey {
        get {
            return this.verkeyField;
        }
        set {
            this.verkeyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class UserItemList {
    
    private long itidField;
    
    private string itnameField;
    
    private float itpriceField;
    
    private float itbuynowpriceField;
    
    private int itbidcountField;
    
    private long ittimeleftField;
    
    private int itfotocountField;
    
    private int itislistingthumbField;
    
    private int itisboldtitleField;
    
    private int itisbuynowField;
    
    private int itcountryField;
    
    private int itisescrowField;
    
    private long itstartingtimeField;
    
    private int itisreservedpriceField;
    
    private string itthumburlField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-id")]
    public long itid {
        get {
            return this.itidField;
        }
        set {
            this.itidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-name")]
    public string itname {
        get {
            return this.itnameField;
        }
        set {
            this.itnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-price")]
    public float itprice {
        get {
            return this.itpriceField;
        }
        set {
            this.itpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
    public float itbuynowprice {
        get {
            return this.itbuynowpriceField;
        }
        set {
            this.itbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
    public int itbidcount {
        get {
            return this.itbidcountField;
        }
        set {
            this.itbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-time-left")]
    public long ittimeleft {
        get {
            return this.ittimeleftField;
        }
        set {
            this.ittimeleftField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
    public int itfotocount {
        get {
            return this.itfotocountField;
        }
        set {
            this.itfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-listing-thumb")]
    public int itislistingthumb {
        get {
            return this.itislistingthumbField;
        }
        set {
            this.itislistingthumbField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-bold-title")]
    public int itisboldtitle {
        get {
            return this.itisboldtitleField;
        }
        set {
            this.itisboldtitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-buy-now")]
    public int itisbuynow {
        get {
            return this.itisbuynowField;
        }
        set {
            this.itisbuynowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-country")]
    public int itcountry {
        get {
            return this.itcountryField;
        }
        set {
            this.itcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-escrow")]
    public int itisescrow {
        get {
            return this.itisescrowField;
        }
        set {
            this.itisescrowField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
    public long itstartingtime {
        get {
            return this.itstartingtimeField;
        }
        set {
            this.itstartingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-reserved-price")]
    public int itisreservedprice {
        get {
            return this.itisreservedpriceField;
        }
        set {
            this.itisreservedpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-thumb-url")]
    public string itthumburl {
        get {
            return this.itthumburlField;
        }
        set {
            this.itthumburlField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteInfoType {
    
    private string sitenameField;
    
    private string siteurlField;
    
    private int sitecountrycodeField;
    
    private string sitecodepageField;
    
    private byte[] sitelogogifField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-name")]
    public string sitename {
        get {
            return this.sitenameField;
        }
        set {
            this.sitenameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-url")]
    public string siteurl {
        get {
            return this.siteurlField;
        }
        set {
            this.siteurlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-country-code")]
    public int sitecountrycode {
        get {
            return this.sitecountrycodeField;
        }
        set {
            this.sitecountrycodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-code-page")]
    public string sitecodepage {
        get {
            return this.sitecodepageField;
        }
        set {
            this.sitecodepageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-logo-gif", DataType="base64Binary")]
    public byte[] sitelogogif {
        get {
            return this.sitelogogifField;
        }
        set {
            this.sitelogogifField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SiteFlagInfoType {
    
    private string sitenameField;
    
    private string siteurlField;
    
    private int sitecountrycodeField;
    
    private string sitecodepageField;
    
    private byte[] sitelogogifField;
    
    private byte[] siteflaggifField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-name")]
    public string sitename {
        get {
            return this.sitenameField;
        }
        set {
            this.sitenameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-url")]
    public string siteurl {
        get {
            return this.siteurlField;
        }
        set {
            this.siteurlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-country-code")]
    public int sitecountrycode {
        get {
            return this.sitecountrycodeField;
        }
        set {
            this.sitecountrycodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-code-page")]
    public string sitecodepage {
        get {
            return this.sitecodepageField;
        }
        set {
            this.sitecodepageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-logo-gif", DataType="base64Binary")]
    public byte[] sitelogogif {
        get {
            return this.sitelogogifField;
        }
        set {
            this.sitelogogifField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("site-flag-gif", DataType="base64Binary")]
    public byte[] siteflaggif {
        get {
            return this.siteflaggifField;
        }
        set {
            this.siteflaggifField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class SellFormType {
    
    private int sellformidField;
    
    private string sellformtitleField;
    
    private int sellformcatField;
    
    private int sellformtypeField;
    
    private int sellformrestypeField;
    
    private int sellformdefvalueField;
    
    private int sellformoptField;
    
    private int sellformposField;
    
    private int sellformlengthField;
    
    private float sellminvalueField;
    
    private float sellmaxvalueField;
    
    private string sellformdescField;
    
    private string sellformoptsvaluesField;
    
    private string sellformfielddescField;
    
    private int sellformparamidField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-id")]
    public int sellformid {
        get {
            return this.sellformidField;
        }
        set {
            this.sellformidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-title")]
    public string sellformtitle {
        get {
            return this.sellformtitleField;
        }
        set {
            this.sellformtitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-cat")]
    public int sellformcat {
        get {
            return this.sellformcatField;
        }
        set {
            this.sellformcatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-type")]
    public int sellformtype {
        get {
            return this.sellformtypeField;
        }
        set {
            this.sellformtypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-res-type")]
    public int sellformrestype {
        get {
            return this.sellformrestypeField;
        }
        set {
            this.sellformrestypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-def-value")]
    public int sellformdefvalue {
        get {
            return this.sellformdefvalueField;
        }
        set {
            this.sellformdefvalueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-opt")]
    public int sellformopt {
        get {
            return this.sellformoptField;
        }
        set {
            this.sellformoptField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-pos")]
    public int sellformpos {
        get {
            return this.sellformposField;
        }
        set {
            this.sellformposField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-length")]
    public int sellformlength {
        get {
            return this.sellformlengthField;
        }
        set {
            this.sellformlengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-min-value")]
    public float sellminvalue {
        get {
            return this.sellminvalueField;
        }
        set {
            this.sellminvalueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-max-value")]
    public float sellmaxvalue {
        get {
            return this.sellmaxvalueField;
        }
        set {
            this.sellmaxvalueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-desc")]
    public string sellformdesc {
        get {
            return this.sellformdescField;
        }
        set {
            this.sellformdescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-opts-values")]
    public string sellformoptsvalues {
        get {
            return this.sellformoptsvaluesField;
        }
        set {
            this.sellformoptsvaluesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-field-desc")]
    public string sellformfielddesc {
        get {
            return this.sellformfielddescField;
        }
        set {
            this.sellformfielddescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-form-param-id")]
    public int sellformparamid {
        get {
            return this.sellformparamidField;
        }
        set {
            this.sellformparamidField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class BillingDataType {
    
    private int billingidField;
    
    private string billingtypeField;
    
    private string billingfixpercField;
    
    private string billingnameField;
    
    private string billingrangefromField;
    
    private string billingrangetoField;
    
    private string billingcatField;
    
    private string billingrateField;
    
    private int billingauctiontypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-id")]
    public int billingid {
        get {
            return this.billingidField;
        }
        set {
            this.billingidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-type")]
    public string billingtype {
        get {
            return this.billingtypeField;
        }
        set {
            this.billingtypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-fixperc")]
    public string billingfixperc {
        get {
            return this.billingfixpercField;
        }
        set {
            this.billingfixpercField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-name")]
    public string billingname {
        get {
            return this.billingnameField;
        }
        set {
            this.billingnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-range-from")]
    public string billingrangefrom {
        get {
            return this.billingrangefromField;
        }
        set {
            this.billingrangefromField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-range-to")]
    public string billingrangeto {
        get {
            return this.billingrangetoField;
        }
        set {
            this.billingrangetoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-cat")]
    public string billingcat {
        get {
            return this.billingcatField;
        }
        set {
            this.billingcatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-rate")]
    public string billingrate {
        get {
            return this.billingrateField;
        }
        set {
            this.billingrateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("billing-auction-type")]
    public int billingauctiontype {
        get {
            return this.billingauctiontypeField;
        }
        set {
            this.billingauctiontypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class CompanyInfoStruct {
    
    private string companyfirstnameField;
    
    private string companylastnameField;
    
    private string companynameField;
    
    private string companyaddressField;
    
    private string companypostcodeField;
    
    private string companycityField;
    
    private string companynipField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-first-name")]
    public string companyfirstname {
        get {
            return this.companyfirstnameField;
        }
        set {
            this.companyfirstnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-last-name")]
    public string companylastname {
        get {
            return this.companylastnameField;
        }
        set {
            this.companylastnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-name")]
    public string companyname {
        get {
            return this.companynameField;
        }
        set {
            this.companynameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-address")]
    public string companyaddress {
        get {
            return this.companyaddressField;
        }
        set {
            this.companyaddressField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-postcode")]
    public string companypostcode {
        get {
            return this.companypostcodeField;
        }
        set {
            this.companypostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-city")]
    public string companycity {
        get {
            return this.companycityField;
        }
        set {
            this.companycityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("company-nip")]
    public string companynip {
        get {
            return this.companynipField;
        }
        set {
            this.companynipField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemPaymentOptions {
    
    private int payoptiontransferField;
    
    private int payoptionondeliveryField;
    
    private int payoptionallegropayField;
    
    private int payoptionseedescField;
    
    private int payoptionpayuField;
    
    private int payoptionescrowField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-option-transfer")]
    public int payoptiontransfer {
        get {
            return this.payoptiontransferField;
        }
        set {
            this.payoptiontransferField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-option-on-delivery")]
    public int payoptionondelivery {
        get {
            return this.payoptionondeliveryField;
        }
        set {
            this.payoptionondeliveryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-option-allegro-pay")]
    public int payoptionallegropay {
        get {
            return this.payoptionallegropayField;
        }
        set {
            this.payoptionallegropayField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-option-see-desc")]
    public int payoptionseedesc {
        get {
            return this.payoptionseedescField;
        }
        set {
            this.payoptionseedescField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-option-payu")]
    public int payoptionpayu {
        get {
            return this.payoptionpayuField;
        }
        set {
            this.payoptionpayuField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("pay-option-escrow")]
    public int payoptionescrow {
        get {
            return this.payoptionescrowField;
        }
        set {
            this.payoptionescrowField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class PostageStruct {
    
    private string postagenameField;
    
    private float postageamountField;
    
    private float postageamountaddField;
    
    private int postagepacksizeField;
    
    private int postagepaytypeField;
    
    private int postageidField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("postage-name")]
    public string postagename {
        get {
            return this.postagenameField;
        }
        set {
            this.postagenameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("postage-amount")]
    public float postageamount {
        get {
            return this.postageamountField;
        }
        set {
            this.postageamountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("postage-amount-add")]
    public float postageamountadd {
        get {
            return this.postageamountaddField;
        }
        set {
            this.postageamountaddField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("postage-pack-size")]
    public int postagepacksize {
        get {
            return this.postagepacksizeField;
        }
        set {
            this.postagepacksizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("postage-pay-type")]
    public int postagepaytype {
        get {
            return this.postagepaytypeField;
        }
        set {
            this.postagepaytypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("postage-id")]
    public int postageid {
        get {
            return this.postageidField;
        }
        set {
            this.postageidField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class AttribStruct {
    
    private string attribnameField;
    
    private string[] attribvaluesField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("attrib-name")]
    public string attribname {
        get {
            return this.attribnameField;
        }
        set {
            this.attribnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("attrib-values")]
    public string[] attribvalues {
        get {
            return this.attribvaluesField;
        }
        set {
            this.attribvaluesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemCatList {
    
    private int catlevelField;
    
    private long catidField;
    
    private string catnameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-level")]
    public int catlevel {
        get {
            return this.catlevelField;
        }
        set {
            this.catlevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-id")]
    public long catid {
        get {
            return this.catidField;
        }
        set {
            this.catidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("cat-name")]
    public string catname {
        get {
            return this.catnameField;
        }
        set {
            this.catnameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemInfo {
    
    private long itidField;
    
    private int itcountryField;
    
    private string itnameField;
    
    private float itpriceField;
    
    private int itbidcountField;
    
    private long itendingtimeField;
    
    private long itselleridField;
    
    private string itsellerloginField;
    
    private int itsellerratingField;
    
    private long itstartingtimeField;
    
    private float itstartingpriceField;
    
    private int itquantityField;
    
    private int itfotocountField;
    
    private float itreservepriceField;
    
    private string itlocationField;
    
    private float itbuynowpriceField;
    
    private int itbuynowactiveField;
    
    private int ithighbidderField;
    
    private string ithighbidderloginField;
    
    private string itdescriptionField;
    
    private int itoptionsField;
    
    private int itstateField;
    
    private int itisecoField;
    
    private long ithitcountField;
    
    private string itpostcodeField;
    
    private int itvatinvoiceField;
    
    private string itbankaccount1Field;
    
    private string itbankaccount2Field;
    
    private int itstartingquantityField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-id")]
    public long itid {
        get {
            return this.itidField;
        }
        set {
            this.itidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-country")]
    public int itcountry {
        get {
            return this.itcountryField;
        }
        set {
            this.itcountryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-name")]
    public string itname {
        get {
            return this.itnameField;
        }
        set {
            this.itnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-price")]
    public float itprice {
        get {
            return this.itpriceField;
        }
        set {
            this.itpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bid-count")]
    public int itbidcount {
        get {
            return this.itbidcountField;
        }
        set {
            this.itbidcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-ending-time")]
    public long itendingtime {
        get {
            return this.itendingtimeField;
        }
        set {
            this.itendingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-id")]
    public long itsellerid {
        get {
            return this.itselleridField;
        }
        set {
            this.itselleridField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-login")]
    public string itsellerlogin {
        get {
            return this.itsellerloginField;
        }
        set {
            this.itsellerloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-seller-rating")]
    public int itsellerrating {
        get {
            return this.itsellerratingField;
        }
        set {
            this.itsellerratingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-time")]
    public long itstartingtime {
        get {
            return this.itstartingtimeField;
        }
        set {
            this.itstartingtimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-price")]
    public float itstartingprice {
        get {
            return this.itstartingpriceField;
        }
        set {
            this.itstartingpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-quantity")]
    public int itquantity {
        get {
            return this.itquantityField;
        }
        set {
            this.itquantityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-foto-count")]
    public int itfotocount {
        get {
            return this.itfotocountField;
        }
        set {
            this.itfotocountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-reserve-price")]
    public float itreserveprice {
        get {
            return this.itreservepriceField;
        }
        set {
            this.itreservepriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-location")]
    public string itlocation {
        get {
            return this.itlocationField;
        }
        set {
            this.itlocationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-price")]
    public float itbuynowprice {
        get {
            return this.itbuynowpriceField;
        }
        set {
            this.itbuynowpriceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-buy-now-active")]
    public int itbuynowactive {
        get {
            return this.itbuynowactiveField;
        }
        set {
            this.itbuynowactiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-high-bidder")]
    public int ithighbidder {
        get {
            return this.ithighbidderField;
        }
        set {
            this.ithighbidderField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-high-bidder-login")]
    public string ithighbidderlogin {
        get {
            return this.ithighbidderloginField;
        }
        set {
            this.ithighbidderloginField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-description")]
    public string itdescription {
        get {
            return this.itdescriptionField;
        }
        set {
            this.itdescriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-options")]
    public int itoptions {
        get {
            return this.itoptionsField;
        }
        set {
            this.itoptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-state")]
    public int itstate {
        get {
            return this.itstateField;
        }
        set {
            this.itstateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-is-eco")]
    public int itiseco {
        get {
            return this.itisecoField;
        }
        set {
            this.itisecoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-hit-count")]
    public long ithitcount {
        get {
            return this.ithitcountField;
        }
        set {
            this.ithitcountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-postcode")]
    public string itpostcode {
        get {
            return this.itpostcodeField;
        }
        set {
            this.itpostcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-vat-invoice")]
    public int itvatinvoice {
        get {
            return this.itvatinvoiceField;
        }
        set {
            this.itvatinvoiceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bank-account1")]
    public string itbankaccount1 {
        get {
            return this.itbankaccount1Field;
        }
        set {
            this.itbankaccount1Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-bank-account2")]
    public string itbankaccount2 {
        get {
            return this.itbankaccount2Field;
        }
        set {
            this.itbankaccount2Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("it-starting-quantity")]
    public int itstartingquantity {
        get {
            return this.itstartingquantityField;
        }
        set {
            this.itstartingquantityField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class ItemInfoStruct {
    
    private ItemInfo iteminfoField;
    
    private ItemCatList[] itemcatsField;
    
    private ItemImageList[] itemimagesField;
    
    private AttribStruct[] itemattribsField;
    
    private PostageStruct[] itempostageoptionsField;
    
    private ItemPaymentOptions itempaymentoptionsField;
    
    private CompanyInfoStruct itemcompanyinfoField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-info")]
    public ItemInfo iteminfo {
        get {
            return this.iteminfoField;
        }
        set {
            this.iteminfoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-cats")]
    public ItemCatList[] itemcats {
        get {
            return this.itemcatsField;
        }
        set {
            this.itemcatsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-images")]
    public ItemImageList[] itemimages {
        get {
            return this.itemimagesField;
        }
        set {
            this.itemimagesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-attribs")]
    public AttribStruct[] itemattribs {
        get {
            return this.itemattribsField;
        }
        set {
            this.itemattribsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-postage-options")]
    public PostageStruct[] itempostageoptions {
        get {
            return this.itempostageoptionsField;
        }
        set {
            this.itempostageoptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-payment-options")]
    public ItemPaymentOptions itempaymentoptions {
        get {
            return this.itempaymentoptionsField;
        }
        set {
            this.itempaymentoptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("item-company-info")]
    public CompanyInfoStruct itemcompanyinfo {
        get {
            return this.itemcompanyinfoField;
        }
        set {
            this.itemcompanyinfoField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class StructSellFailed {
    
    private long sellitemidField;
    
    private string sellfaultcodeField;
    
    private string sellfaultstringField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-item-id")]
    public long sellitemid {
        get {
            return this.sellitemidField;
        }
        set {
            this.sellitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-fault-code")]
    public string sellfaultcode {
        get {
            return this.sellfaultcodeField;
        }
        set {
            this.sellfaultcodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-fault-string")]
    public string sellfaultstring {
        get {
            return this.sellfaultstringField;
        }
        set {
            this.sellfaultstringField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class StructSellAgain {
    
    private long sellitemidField;
    
    private string selliteminfoField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-item-id")]
    public long sellitemid {
        get {
            return this.sellitemidField;
        }
        set {
            this.sellitemidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("sell-item-info")]
    public string selliteminfo {
        get {
            return this.selliteminfoField;
        }
        set {
            this.selliteminfoField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:AllegroWebApi")]
public partial class FieldsValue {
    
    private int fidField;
    
    private string fvaluestringField;
    
    private int fvalueintField;
    
    private float fvaluefloatField;
    
    private byte[] fvalueimageField;
    
    private float fvaluedatetimeField;
    
    private bool fvaluebooleanField;
    
    /// <remarks/>
    public int fid {
        get {
            return this.fidField;
        }
        set {
            this.fidField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-string")]
    public string fvaluestring {
        get {
            return this.fvaluestringField;
        }
        set {
            this.fvaluestringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-int")]
    public int fvalueint {
        get {
            return this.fvalueintField;
        }
        set {
            this.fvalueintField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-float")]
    public float fvaluefloat {
        get {
            return this.fvaluefloatField;
        }
        set {
            this.fvaluefloatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-image", DataType="base64Binary")]
    public byte[] fvalueimage {
        get {
            return this.fvalueimageField;
        }
        set {
            this.fvalueimageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-datetime")]
    public float fvaluedatetime {
        get {
            return this.fvaluedatetimeField;
        }
        set {
            this.fvaluedatetimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute("fvalue-boolean")]
    public bool fvalueboolean {
        get {
            return this.fvaluebooleanField;
        }
        set {
            this.fvaluebooleanField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetCatsDataCompletedEventHandler(object sender, doGetCatsDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetCatsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetCatsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CatInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CatInfoType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doLoginCompletedEventHandler(object sender, doLoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long userid {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long servertime {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doLoginEncCompletedEventHandler(object sender, doLoginEncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doLoginEncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doLoginEncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long userid {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long servertime {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doNewAuctionCompletedEventHandler(object sender, doNewAuctionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doNewAuctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doNewAuctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string iteminfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doNewAuctionExtCompletedEventHandler(object sender, doNewAuctionExtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doNewAuctionExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doNewAuctionExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string iteminfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSellSomeAgainCompletedEventHandler(object sender, doSellSomeAgainCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSellSomeAgainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSellSomeAgainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public StructSellAgain[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StructSellAgain[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public StructSellFailed[] itemssellfailed {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StructSellFailed[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] itemssellnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCheckNewAuctionCompletedEventHandler(object sender, doCheckNewAuctionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCheckNewAuctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCheckNewAuctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string itempricedesc {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCheckNewAuctionExtCompletedEventHandler(object sender, doCheckNewAuctionExtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCheckNewAuctionExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCheckNewAuctionExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string itempricedesc {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doAddDescToItemsCompletedEventHandler(object sender, doAddDescToItemsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doAddDescToItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doAddDescToItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsdesctolong {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCheckItemIdByFutureItemIdCompletedEventHandler(object sender, doCheckItemIdByFutureItemIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCheckItemIdByFutureItemIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCheckItemIdByFutureItemIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetCatsDataLimitCompletedEventHandler(object sender, doGetCatsDataLimitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetCatsDataLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetCatsDataLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CatInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CatInfoType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetItemsInfoCompletedEventHandler(object sender, doGetItemsInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetItemsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetItemsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemInfoStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemInfoStruct[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsadminkilled {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetPaymentDataCompletedEventHandler(object sender, doGetPaymentDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetPaymentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetPaymentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public BillingDataType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BillingDataType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormFieldsCompletedEventHandler(object sender, doGetSellFormFieldsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormFieldsExtCompletedEventHandler(object sender, doGetSellFormFieldsExtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormFieldsExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormFieldsExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSitesFlagInfoCompletedEventHandler(object sender, doGetSitesFlagInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSitesFlagInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSitesFlagInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteFlagInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteFlagInfoType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSitesInfoCompletedEventHandler(object sender, doGetSitesInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSitesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSitesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteInfoType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSystemTimeCompletedEventHandler(object sender, doGetSystemTimeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSystemTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSystemTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetUserIDCompletedEventHandler(object sender, doGetUserIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetUserItemsCompletedEventHandler(object sender, doGetUserItemsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetUserItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetUserItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserItemList[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserItemList[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int useritemcount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetUserLoginCompletedEventHandler(object sender, doGetUserLoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doQueryAllSysStatusCompletedEventHandler(object sender, doQueryAllSysStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doQueryAllSysStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doQueryAllSysStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SysStatusType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SysStatusType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormFieldsExtLimitCompletedEventHandler(object sender, doGetSellFormFieldsExtLimitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormFieldsExtLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormFieldsExtLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public int formfieldscount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormFieldsLimitCompletedEventHandler(object sender, doGetSellFormFieldsLimitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormFieldsLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormFieldsLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public int formfieldscount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doQuerySysStatusCompletedEventHandler(object sender, doQuerySysStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doQuerySysStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doQuerySysStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doShowCatCompletedEventHandler(object sender, doShowCatCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doShowCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doShowCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public InfoCatList[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((InfoCatList[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public InfoCatList[] catchildarray {
        get {
            this.RaiseExceptionIfNecessary();
            return ((InfoCatList[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public InfoCatList[] catsisterarray {
        get {
            this.RaiseExceptionIfNecessary();
            return ((InfoCatList[])(this.results[2]));
        }
    }
    
    /// <remarks/>
    public int catitemscount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public int catitemscountfeatured {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public SearchResponseType[] catitemsarray {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SearchResponseType[])(this.results[5]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doShowItemInfoCompletedEventHandler(object sender, doShowItemInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doShowItemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doShowItemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemInfo Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemInfo)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public ItemCatList[] itemcatpath {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemCatList[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public ItemImageList[] itemimglist {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemImageList[])(this.results[2]));
        }
    }
    
    /// <remarks/>
    public AttribStruct[] itemattriblist {
        get {
            this.RaiseExceptionIfNecessary();
            return ((AttribStruct[])(this.results[3]));
        }
    }
    
    /// <remarks/>
    public PostageStruct[] itempostageoptions {
        get {
            this.RaiseExceptionIfNecessary();
            return ((PostageStruct[])(this.results[4]));
        }
    }
    
    /// <remarks/>
    public ItemPaymentOptions itempaymentoptions {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemPaymentOptions)(this.results[5]));
        }
    }
    
    /// <remarks/>
    public CompanyInfoStruct itemcompanyinfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CompanyInfoStruct)(this.results[6]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doShowUserCompletedEventHandler(object sender, doShowUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doShowUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doShowUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long userid {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string userlogin {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public long usercreatedate {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[3]));
        }
    }
    
    /// <remarks/>
    public long userlogindate {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[4]));
        }
    }
    
    /// <remarks/>
    public int userrating {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[5]));
        }
    }
    
    /// <remarks/>
    public int userisnewuser {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[6]));
        }
    }
    
    /// <remarks/>
    public int usernotactivated {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[7]));
        }
    }
    
    /// <remarks/>
    public int userclosed {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[8]));
        }
    }
    
    /// <remarks/>
    public int userblocked {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[9]));
        }
    }
    
    /// <remarks/>
    public int userterminated {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[10]));
        }
    }
    
    /// <remarks/>
    public int userhaspage {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[11]));
        }
    }
    
    /// <remarks/>
    public int userissseller {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[12]));
        }
    }
    
    /// <remarks/>
    public int useriseco {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[13]));
        }
    }
    
    /// <remarks/>
    public ShowUserFeedbacks userpositivefeedback {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ShowUserFeedbacks)(this.results[14]));
        }
    }
    
    /// <remarks/>
    public ShowUserFeedbacks usernegativefeedback {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ShowUserFeedbacks)(this.results[15]));
        }
    }
    
    /// <remarks/>
    public ShowUserFeedbacks userneutralfeedback {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ShowUserFeedbacks)(this.results[16]));
        }
    }
    
    /// <remarks/>
    public int userjuniorstatus {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[17]));
        }
    }
    
    /// <remarks/>
    public int userhasshop {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[18]));
        }
    }
    
    /// <remarks/>
    public int usercompanyicon {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[19]));
        }
    }
    
    /// <remarks/>
    public int usersellratingcount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[20]));
        }
    }
    
    /// <remarks/>
    public SellRatingAverageStruct[] usersellratingaverage {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellRatingAverageStruct[])(this.results[21]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doVerifyItemCompletedEventHandler(object sender, doVerifyItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doVerifyItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doVerifyItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int itemlisted {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doAddWatchListCompletedEventHandler(object sender, doAddWatchListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doAddWatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doAddWatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] arrayitemsadminkilled {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doFeedbackCompletedEventHandler(object sender, doFeedbackCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetBidItem2CompletedEventHandler(object sender, doGetBidItem2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetBidItem2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetBidItem2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public BidListStruct2[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BidListStruct2[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetFeedbackCompletedEventHandler(object sender, doGetFeedbackCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public FeedbackList[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FeedbackList[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int feedbackcount {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSiteJournalCompletedEventHandler(object sender, doGetSiteJournalCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSiteJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSiteJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteJournal[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteJournal[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSiteJournalInfoCompletedEventHandler(object sender, doGetSiteJournalInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSiteJournalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSiteJournalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteJournalInfo Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteJournalInfo)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyAccount2CompletedEventHandler(object sender, doMyAccount2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyAccount2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyAccount2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MyAccountStruct2[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MyAccountStruct2[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyAccountItemsCountCompletedEventHandler(object sender, doMyAccountItemsCountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyAccountItemsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyAccountItemsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyBillingCompletedEventHandler(object sender, doMyBillingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyBillingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyBillingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyContactCompletedEventHandler(object sender, doMyContactCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MyContactList[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MyContactList[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyFeedback2CompletedEventHandler(object sender, doMyFeedback2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyFeedback2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyFeedback2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MyFeedbackListStruct2[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MyFeedbackListStruct2[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSearchCompletedEventHandler(object sender, doSearchCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int searchcountfeatured {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public SearchResponseType[] searcharray {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SearchResponseType[])(this.results[2]));
        }
    }
    
    /// <remarks/>
    public string[] searchexcludedwords {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetAdminUserLicenceDateCompletedEventHandler(object sender, doGetAdminUserLicenceDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetAdminUserLicenceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetAdminUserLicenceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public float Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((float)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetUserLicenceDateCompletedEventHandler(object sender, doGetUserLicenceDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetUserLicenceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetUserLicenceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public float Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((float)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyBillingItemCompletedEventHandler(object sender, doMyBillingItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyBillingItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyBillingItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemBilling[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemBilling[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public ItemBilling[] endingfees {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemBilling[])(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSetUserLicenceDateCompletedEventHandler(object sender, doSetUserLicenceDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSetUserLicenceDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSetUserLicenceDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doBidItemCompletedEventHandler(object sender, doBidItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doBidItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doBidItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCancelBidItemCompletedEventHandler(object sender, doCancelBidItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCancelBidItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCancelBidItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int[] cancelledbids {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public int[] notcancelledbids {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doChangePriceItemCompletedEventHandler(object sender, doChangePriceItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doChangePriceItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doChangePriceItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long itemid {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doFinishItemCompletedEventHandler(object sender, doFinishItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doFinishItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doFinishItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetItemTransactionCompletedEventHandler(object sender, doGetItemTransactionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetItemTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetItemTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemInfo Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemInfo)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public ItemCatList[] itemcatpath {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemCatList[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public ItemImageList[] itemimglist {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemImageList[])(this.results[2]));
        }
    }
    
    /// <remarks/>
    public ItemTransStruct[] bidwoncontactinfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemTransStruct[])(this.results[3]));
        }
    }
    
    /// <remarks/>
    public BidListStruct2[] bidlostinfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BidListStruct2[])(this.results[4]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doRequestCancelBidCompletedEventHandler(object sender, doRequestCancelBidCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doRequestCancelBidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doRequestCancelBidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetCatsDataCountCompletedEventHandler(object sender, doGetCatsDataCountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetCatsDataCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetCatsDataCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMyFeedback2LimitCompletedEventHandler(object sender, doMyFeedback2LimitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMyFeedback2LimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMyFeedback2LimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public MyFeedbackListStruct2[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((MyFeedbackListStruct2[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetCountriesCompletedEventHandler(object sender, doGetCountriesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CountryInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CountryInfoType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetServiceTemplatesCompletedEventHandler(object sender, doGetServiceTemplatesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetServiceTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetServiceTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TemplateInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TemplateInfoType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellFormAttribsCompletedEventHandler(object sender, doGetSellFormAttribsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellFormAttribsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellFormAttribsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellFormType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellFormType[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long verkey {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string verstr {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doFeedbackManyCompletedEventHandler(object sender, doFeedbackManyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doFeedbackManyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doFeedbackManyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public FeedbackResultStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FeedbackResultStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doShowItemInfoExtCompletedEventHandler(object sender, doShowItemInfoExtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doShowItemInfoExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doShowItemInfoExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemInfoExt Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemInfoExt)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public ItemCatList[] itemcatpath {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemCatList[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public ItemImageList[] itemimglist {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemImageList[])(this.results[2]));
        }
    }
    
    /// <remarks/>
    public AttribStruct[] itemattriblist {
        get {
            this.RaiseExceptionIfNecessary();
            return ((AttribStruct[])(this.results[3]));
        }
    }
    
    /// <remarks/>
    public PostageStruct[] itempostageoptions {
        get {
            this.RaiseExceptionIfNecessary();
            return ((PostageStruct[])(this.results[4]));
        }
    }
    
    /// <remarks/>
    public ItemPaymentOptions itempaymentoptions {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemPaymentOptions)(this.results[5]));
        }
    }
    
    /// <remarks/>
    public CompanyInfoStruct itemcompanyinfo {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CompanyInfoStruct)(this.results[6]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetWaitingFeedbacksCountCompletedEventHandler(object sender, doGetWaitingFeedbacksCountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetWaitingFeedbacksCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetWaitingFeedbacksCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetWaitingFeedbacksCompletedEventHandler(object sender, doGetWaitingFeedbacksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetWaitingFeedbacksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetWaitingFeedbacksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public WaitFeedbackStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((WaitFeedbackStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetBlackListUsersCompletedEventHandler(object sender, doGetBlackListUsersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetBlackListUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetBlackListUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public BlackListStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BlackListStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doRemoveFromBlackListCompletedEventHandler(object sender, doRemoveFromBlackListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doRemoveFromBlackListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doRemoveFromBlackListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public BlackListResStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((BlackListResStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetServiceInfoCategoriesCompletedEventHandler(object sender, doGetServiceInfoCategoriesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetServiceInfoCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetServiceInfoCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ServiceInfoCatStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ServiceInfoCatStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetServiceInfoCompletedEventHandler(object sender, doGetServiceInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetServiceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetServiceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ServiceInfoStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ServiceInfoStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetStatesInfoCompletedEventHandler(object sender, doGetStatesInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetStatesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetStatesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public StateInfoStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StateInfoStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetShopCatsDataCompletedEventHandler(object sender, doGetShopCatsDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetShopCatsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetShopCatsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CatInfoType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CatInfoType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCheckExternalKeyCompletedEventHandler(object sender, doCheckExternalKeyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCheckExternalKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCheckExternalKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSellSomeAgainInShopCompletedEventHandler(object sender, doSellSomeAgainInShopCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSellSomeAgainInShopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSellSomeAgainInShopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public StructSellAgain[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StructSellAgain[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public StructSellFailed[] itemssellfailed {
        get {
            this.RaiseExceptionIfNecessary();
            return ((StructSellFailed[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public long[] itemssellnotfound {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSuperSellerStatusCompletedEventHandler(object sender, doGetSuperSellerStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSuperSellerStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSuperSellerStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetMyDataCompletedEventHandler(object sender, doGetMyDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetMyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetMyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserDataStruct Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserDataStruct)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public InvoiceDataStruct invoicedata {
        get {
            this.RaiseExceptionIfNecessary();
            return ((InvoiceDataStruct)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public CompanyExtraDataStruct companyextradata {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CompanyExtraDataStruct)(this.results[2]));
        }
    }
    
    /// <remarks/>
    public CompanySecondAddressStruct companysecondaddress {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CompanySecondAddressStruct)(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doInternalIStoreChangeCompletedEventHandler(object sender, doInternalIStoreChangeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doInternalIStoreChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doInternalIStoreChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetFavouriteSellersCompletedEventHandler(object sender, doGetFavouriteSellersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetFavouriteSellersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetFavouriteSellersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public FavouritesSellersStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FavouritesSellersStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetFavouriteCategoriesCompletedEventHandler(object sender, doGetFavouriteCategoriesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetFavouriteCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetFavouriteCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public FavouritesCategoriesStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FavouritesCategoriesStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetItemsImagesCompletedEventHandler(object sender, doGetItemsImagesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetItemsImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetItemsImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemImagesStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemImagesStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetShipmentOptionsFormDataCompletedEventHandler(object sender, doGetShipmentOptionsFormDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetShipmentOptionsFormDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetShipmentOptionsFormDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SofDataStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SofDataStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSpecialItemsCompletedEventHandler(object sender, doGetSpecialItemsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSpecialItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSpecialItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SpecialAuctionStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SpecialAuctionStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doAddToBlackListCompletedEventHandler(object sender, doAddToBlackListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doAddToBlackListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doAddToBlackListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserBlackListAddResultStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserBlackListAddResultStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetPostBuyDataCompletedEventHandler(object sender, doGetPostBuyDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetPostBuyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetPostBuyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemPostBuyDataStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemPostBuyDataStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCancelRefundFormsCompletedEventHandler(object sender, doCancelRefundFormsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCancelRefundFormsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCancelRefundFormsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CancelRefundFormResultStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CancelRefundFormResultStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSessionHandleForWidgetCompletedEventHandler(object sender, doGetSessionHandleForWidgetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSessionHandleForWidgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSessionHandleForWidgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long servertime {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doCancelRefundWarningsCompletedEventHandler(object sender, doCancelRefundWarningsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doCancelRefundWarningsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doCancelRefundWarningsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CancelRefundWarningResultStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CancelRefundWarningResultStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doInternalSendMessageCompletedEventHandler(object sender, doInternalSendMessageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doInternalSendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doInternalSendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetRefundTransactionsCompletedEventHandler(object sender, doGetRefundTransactionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetRefundTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetRefundTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public RefundFormDataStruct[] refundformslist {
        get {
            this.RaiseExceptionIfNecessary();
            return ((RefundFormDataStruct[])(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSendReminderMessagesCompletedEventHandler(object sender, doSendReminderMessagesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSendReminderMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSendReminderMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SendReminderMessageResultStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SendReminderMessageResultStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doRemoveFromWatchListCompletedEventHandler(object sender, doRemoveFromWatchListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doRemoveFromWatchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doRemoveFromWatchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ItemRemoveWatchStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ItemRemoveWatchStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSendRefundFormsCompletedEventHandler(object sender, doSendRefundFormsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSendRefundFormsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSendRefundFormsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SendRefundFormResultStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SendRefundFormResultStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetRefundFormsStatusesCompletedEventHandler(object sender, doGetRefundFormsStatusesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetRefundFormsStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetRefundFormsStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public RefundFormStatusResultStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((RefundFormStatusResultStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetRefundReasonsCompletedEventHandler(object sender, doGetRefundReasonsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetRefundReasonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetRefundReasonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public RefundReasonStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((RefundReasonStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetMyIncomingPaymentsCompletedEventHandler(object sender, doGetMyIncomingPaymentsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetMyIncomingPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetMyIncomingPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserIncomingPaymentStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserIncomingPaymentStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetMyPaymentsCompletedEventHandler(object sender, doGetMyPaymentsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetMyPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetMyPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserPaymentStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserPaymentStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetMyPayoutsCompletedEventHandler(object sender, doGetMyPayoutsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetMyPayoutsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetMyPayoutsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserPayoutStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserPayoutStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doChangeQuantityItemCompletedEventHandler(object sender, doChangeQuantityItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doChangeQuantityItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doChangeQuantityItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long itemid {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doShowUserPageCompletedEventHandler(object sender, doShowUserPageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doShowUserPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doShowUserPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doSendEmailToUserCompletedEventHandler(object sender, doSendEmailToUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doSendEmailToUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doSendEmailToUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long mailtouserreceiverid {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetTransactionsIDsCompletedEventHandler(object sender, doGetTransactionsIDsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetTransactionsIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetTransactionsIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetPostBuyFormsDataCompletedEventHandler(object sender, doGetPostBuyFormsDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetPostBuyFormsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetPostBuyFormsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public PostBuyFormDataStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((PostBuyFormDataStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetMyIncomingPaymentsRefundsCompletedEventHandler(object sender, doGetMyIncomingPaymentsRefundsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetMyIncomingPaymentsRefundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetMyIncomingPaymentsRefundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserIncomingPaymentRefundsStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserIncomingPaymentRefundsStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetMyPaymentsRefundsCompletedEventHandler(object sender, doGetMyPaymentsRefundsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetMyPaymentsRefundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetMyPaymentsRefundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public UserPaymentRefundsStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((UserPaymentRefundsStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetMySellRatingCompletedEventHandler(object sender, doGetMySellRatingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetMySellRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetMySellRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public SellRatingAverageStruct[] sellratingaverage {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellRatingAverageStruct[])(this.results[1]));
        }
    }
    
    /// <remarks/>
    public SellRatingDetailStruct[] sellratingdetails {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellRatingDetailStruct[])(this.results[2]));
        }
    }
    
    /// <remarks/>
    public SellRatingAveragePerMonthStruct[] sellratingstatspermonth {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellRatingAveragePerMonthStruct[])(this.results[3]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSiteJournalFeedbacksCompletedEventHandler(object sender, doGetSiteJournalFeedbacksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSiteJournalFeedbacksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSiteJournalFeedbacksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteJournalFeedbacks[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteJournalFeedbacks[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSiteJournalFeedbacksInfoCompletedEventHandler(object sender, doGetSiteJournalFeedbacksInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSiteJournalFeedbacksInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSiteJournalFeedbacksInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SiteJournalFeedbacksInfo Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SiteJournalFeedbacksInfo)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetSellRatingReasonsCompletedEventHandler(object sender, doGetSellRatingReasonsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetSellRatingReasonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetSellRatingReasonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SellRatingInfoStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SellRatingInfoStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetDealsCompletedEventHandler(object sender, doGetDealsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetDealsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetDealsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public DealsStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((DealsStruct[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doMakeDiscountCompletedEventHandler(object sender, doMakeDiscountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doMakeDiscountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doMakeDiscountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public float Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((float)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doFinishItemsCompletedEventHandler(object sender, doFinishItemsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doFinishItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doFinishItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public long[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public FinishFailureStruct[] finishitemsfailed {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FinishFailureStruct[])(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void doGetShipmentDataCompletedEventHandler(object sender, doGetShipmentDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class doGetShipmentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal doGetShipmentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ShipmentDataStruct[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ShipmentDataStruct[])(this.results[0]));
        }
    }
    
    /// <remarks/>
    public long localversion {
        get {
            this.RaiseExceptionIfNecessary();
            return ((long)(this.results[1]));
        }
    }
}
